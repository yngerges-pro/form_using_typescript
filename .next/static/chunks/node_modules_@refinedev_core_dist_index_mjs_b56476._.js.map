{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/error/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/usePermissions/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/auth/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/table/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/userFriendlySeconds/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/importCSVMapper/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/userFriendlyResourceName/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/handleUseParams/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/keys/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/pickNotDeprecated/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/queryKeys/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/hasPermission/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/is-parameter.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/split-to-segments.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/is-segment-counts-same.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/remove-leading-trailing-slashes.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/check-by-segments.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/get-default-action-path.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/get-parent-resource.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/get-parent-prefix-for-resource.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/get-action-routes-from-resource.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/pick-matched-route.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/match-resource-from-route.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/routeGenerator/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/treeView/createTreeView/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/humanizeString/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/refine/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/layoutWrapper/defaultLayout/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/handleRefineOptions/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/redirectPage/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/sequentialPromises/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/pick-resource/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/pickDataProvider/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/handleMultiple/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/useInfinitePagination/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/legacy-resource-transform/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/pick-route-params.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/prepare-route-params.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/router/compose-route.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/useActiveAuthProvider/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/handlePaginationParams/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/useMediaQuery/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/safe-translate/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/generateDocumentTitle/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/refine/useMutationMode.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/refine/useWarnAboutChange/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/unsavedWarn/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/refine/useSyncWithLocation.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/refine/useTitle.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/refine/useRefineContext.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/useUserFriendlyName/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/flatten-object-keys/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/property-path-to-array/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/downloadInBrowser/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/defer-execution/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/async-debounce/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/prepare-query-context/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/upload/file2Base64/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/useKeys/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useGetIdentity/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useLogout/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useInvalidateAuthStore/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useLogin/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useRegister/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useForgotPassword/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useUpdatePassword/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useIsAuthenticated/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useOnError/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auth/useIsExistAuthentication/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useList.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/useLoadingOvertime/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useOne.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useMany.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useUpdate.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/undoableQueue/types.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useCreate.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useDelete.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useCreateMany.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useUpdateMany.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useDeleteMany.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useApiUrl.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useCustom.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useCustomMutation.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useDataProvider.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/data/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/data/useInfiniteList.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/live/useResourceSubscription/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/live/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/invalidate/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/resource/useResource/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/resource/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/deepMemo/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/memoized/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/router/picker/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/router/use-parsed/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/router/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/router/use-parse/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/resource/useResourceWithRoute/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/live/useLiveMode/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/live/useSubscription/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/live/usePublish/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/notification/useCancelNotification/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/undoableQueue/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/notification/useNotification/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/notification/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/notification/useHandleNotification/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/i18n/useSetLocale.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/i18n/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/i18n/useTranslate.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/i18n/useGetLocale.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/i18n/useTranslation.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/export/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/form/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/redirection/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/router/use-back/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/router/use-go/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/router/use-get-to-path/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/navigation/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/show/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/import/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/modal/useModal/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/router/use-to-path/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/link/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/router/use-link/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/legacy-router/useRouterContext.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/router/legacy/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/accessControl/useCan/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/accessControl/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/sanitize-resource/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/accessControl/useCanWithoutCache.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/useSelect/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/useTable/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auditLog/useLog/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/auditLog/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/auditLog/useLogList/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/breadcrumb/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/menu/useMenu.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/menu/create-resource-key.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/menu/create-tree.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/contexts/metaContext/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/useMeta/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/use-refine-options/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/use-resource-params/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/use-resource-params/use-id/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/use-resource-params/use-action/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/button/actionable-button/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/button/navigation-button/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/button/button-can-access/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/button/delete-button/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/button/refresh-button/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/button/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/login/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/auth/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/auth/components/login/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/auth/components/register/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/auth/components/forgotPassword/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/auth/components/updatePassword/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/ready/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/welcome/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/config-success/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/pages/config-error/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/containers/refine/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/telemetry/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/useTelemetryData/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/definitions/helpers/check-router-prop-misuse/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/hooks/router/use-router-misuse-warning/index.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/undoableQueue/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/layoutWrapper/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/authenticated/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/routeChangeHandler/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/canAccess/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/gh-banner/index.tsx","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/gh-banner/styles.ts","file://C%3A/Users/nasha/proj/node_modules/%40refinedev/core/src/components/autoSaveIndicator/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport {\n  useNavigation,\n  useTranslate,\n  useResource,\n  useGo,\n  useRouterType,\n} from \"@hooks\";\n\n/**\n * When the app is navigated to a non-existent route, refine shows a default error page.\n * A custom error component can be used for this error page.\n *\n * @see {@link https://refine.dev/docs/packages/documentation/routers/} for more details.\n */\nexport const ErrorComponent: React.FC = () => {\n  const [errorMessage, setErrorMessage] = useState<string>();\n  const translate = useTranslate();\n  const { push } = useNavigation();\n  const go = useGo();\n  const routerType = useRouterType();\n\n  const { resource, action } = useResource();\n\n  useEffect(() => {\n    if (resource && action) {\n      setErrorMessage(\n        translate(\n          \"pages.error.info\",\n          {\n            action: action,\n            resource: resource.name,\n          },\n          `You may have forgotten to add the \"${action}\" component to \"${resource.name}\" resource.`,\n        ),\n      );\n    }\n  }, [resource, action]);\n\n  return (\n    <>\n      <h1>\n        {translate(\n          \"pages.error.404\",\n          undefined,\n          \"Sorry, the page you visited does not exist.\",\n        )}\n      </h1>\n      {errorMessage && <p>{errorMessage}</p>}\n      <button\n        onClick={() => {\n          if (routerType === \"legacy\") {\n            push(\"/\");\n          } else {\n            go({ to: \"/\" });\n          }\n        }}\n      >\n        {translate(\"pages.error.backHome\", undefined, \"Back Home\")}\n      </button>\n    </>\n  );\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseQueryOptions,\n  type UseQueryResult,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { PermissionResponse } from \"../../../contexts/auth/types\";\n\nexport type UsePermissionsLegacyProps<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible: true;\n  options?: UseQueryOptions<TData>;\n  params?: TParams;\n};\n\nexport type UsePermissionsProps<\n  TData = PermissionResponse,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible?: false;\n  options?: UseQueryOptions<TData>;\n  params?: TParams;\n};\n\nexport type UsePermissionsCombinedProps<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  options?: UseQueryOptions<TData> | UseQueryOptions<PermissionResponse>;\n  params?: TParams;\n};\n\nexport type UsePermissionsLegacyReturnType<TData = any> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UsePermissionsReturnType<TData = PermissionResponse> =\n  UseQueryResult<TData, unknown>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n  | UseQueryResult<TData, unknown>\n  | UseQueryResult<PermissionResponse, unknown>;\n\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>(\n  props: UsePermissionsLegacyProps<TData, TParams>,\n): UsePermissionsLegacyReturnType<TData>;\n\nexport function usePermissions<\n  TData = PermissionResponse,\n  TParams extends Record<string, any> = Record<string, any>,\n>(props?: UsePermissionsProps<TData, TParams>): UsePermissionsReturnType<TData>;\n\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>(\n  props?: UsePermissionsCombinedProps<TData, TParams>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `usePermissions` calls the `getPermissions` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/usePermissions} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n * @typeParam TParams - Params will be passed to the `getPermissions` method of {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`}.\n *\n */\nexport function usePermissions<\n  TData = any,\n  TParams extends Record<string, any> = Record<string, any>,\n>({\n  v3LegacyAuthProviderCompatible = false,\n  options,\n  params,\n}:\n  | UsePermissionsProps<TData, TParams>\n  | UsePermissionsLegacyProps<TData, TParams> = {}):\n  | UsePermissionsReturnType\n  | UsePermissionsLegacyReturnType<TData> {\n  const { getPermissions: legacyGetPermission } = useLegacyAuthContext();\n  const { getPermissions } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TData>({\n    queryKey: keys().auth().action(\"permissions\").get(preferLegacyKeys),\n    // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: (getPermissions\n      ? () => getPermissions(params)\n      : () => Promise.resolve(undefined)) as (\n      params?: unknown,\n    ) => Promise<TData>,\n    enabled: !v3LegacyAuthProviderCompatible && !!getPermissions,\n    ...(v3LegacyAuthProviderCompatible ? {} : options),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? {} : options?.meta),\n      ...getXRay(\"usePermissions\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery<TData>({\n    queryKey: [\n      ...keys().auth().action(\"permissions\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    // Enabled check for `getPermissions` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: (legacyGetPermission\n      ? () => legacyGetPermission(params)\n      : () => Promise.resolve(undefined)) as (\n      params?: unknown,\n    ) => Promise<TData>,\n    enabled: v3LegacyAuthProviderCompatible && !!legacyGetPermission,\n    ...(v3LegacyAuthProviderCompatible ? options : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? options?.meta : {}),\n      ...getXRay(\"usePermissions\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import React, { type PropsWithChildren } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\n\nimport type { IAuthContext, ILegacyAuthContext } from \"./types\";\n\n/**\n * @deprecated `LegacyAuthContext` is deprecated with refine@4, use `AuthBindingsContext` instead, however, we still support `LegacyAuthContext` for backward compatibility.\n */\nexport const LegacyAuthContext = React.createContext<ILegacyAuthContext>({});\n\n/**\n * @deprecated `LegacyAuthContextProvider` is deprecated with refine@4, use `AuthBindingsContextProvider` instead, however, we still support `LegacyAuthContextProvider` for backward compatibility.\n */\nexport const LegacyAuthContextProvider: React.FC<\n  PropsWithChildren<ILegacyAuthContext>\n> = ({ children, isProvided, ...authOperations }) => {\n  const { replace } = useNavigation();\n\n  const loginFunc = async (params: any) => {\n    try {\n      const result = await authOperations.login?.(params);\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const registerFunc = async (params: any) => {\n    try {\n      const result = await authOperations.register?.(params);\n\n      return result;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const logoutFunc = async (params: any) => {\n    try {\n      const redirectPath = await authOperations.logout?.(params);\n\n      return redirectPath;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const checkAuthFunc = async (params: any) => {\n    try {\n      await authOperations.checkAuth?.(params);\n      return Promise.resolve();\n    } catch (error) {\n      if ((error as { redirectPath?: string })?.redirectPath) {\n        replace((error as { redirectPath: string }).redirectPath);\n      }\n\n      return Promise.reject(error);\n    }\n  };\n\n  return (\n    <LegacyAuthContext.Provider\n      value={{\n        ...authOperations,\n        login: loginFunc,\n        logout: logoutFunc,\n        checkAuth: checkAuthFunc,\n        register: registerFunc,\n        isProvided,\n      }}\n    >\n      {children}\n    </LegacyAuthContext.Provider>\n  );\n};\n\nexport const AuthBindingsContext = React.createContext<Partial<IAuthContext>>(\n  {},\n);\n\nexport const AuthBindingsContextProvider: React.FC<\n  PropsWithChildren<IAuthContext>\n> = ({ children, isProvided, ...authBindings }) => {\n  const handleLogin = async (params: unknown) => {\n    try {\n      const result = await authBindings.login?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in login: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleRegister = async (params: unknown) => {\n    try {\n      const result = await authBindings.register?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in register: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleLogout = async (params: unknown) => {\n    try {\n      const result = await authBindings.logout?.(params);\n\n      return result;\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in logout: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleCheck = async (params: unknown) => {\n    try {\n      const result = await authBindings.check?.(params);\n\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in check: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleForgotPassword = async (params: unknown) => {\n    try {\n      const result = await authBindings.forgotPassword?.(params);\n\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in forgotPassword: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  const handleUpdatePassword = async (params: unknown) => {\n    try {\n      const result = await authBindings.updatePassword?.(params);\n      return Promise.resolve(result);\n    } catch (error) {\n      console.warn(\n        \"Unhandled Error in updatePassword: refine always expects a resolved promise.\",\n        error,\n      );\n      return Promise.reject(error);\n    }\n  };\n\n  return (\n    <AuthBindingsContext.Provider\n      value={{\n        ...authBindings,\n        login: handleLogin as IAuthContext[\"login\"],\n        logout: handleLogout as IAuthContext[\"logout\"],\n        check: handleCheck as IAuthContext[\"check\"],\n        register: handleRegister as IAuthContext[\"register\"],\n        forgotPassword: handleForgotPassword as IAuthContext[\"forgotPassword\"],\n        updatePassword: handleUpdatePassword as IAuthContext[\"updatePassword\"],\n        isProvided,\n      }}\n    >\n      {children}\n    </AuthBindingsContext.Provider>\n  );\n};\n\n/**\n * @deprecated `useLegacyAuthContext` is deprecated with refine@4, use `useAuthBindingsContext` instead, however, we still support `useLegacyAuthContext` for backward compatibility.\n */\nexport const useLegacyAuthContext = () => {\n  const context = React.useContext(LegacyAuthContext);\n\n  return context;\n};\n\nexport const useAuthBindingsContext = () => {\n  const context = React.useContext(AuthBindingsContext);\n\n  return context;\n};\n","import differenceWith from \"lodash-es/differenceWith.js\";\nimport unionWith from \"lodash-es/unionWith.js\";\nimport qs, { type IStringifyOptions } from \"qs\";\nimport warnOnce from \"warn-once\";\n\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport type {\n  CrudFilter,\n  CrudOperators,\n  CrudSort,\n  SortOrder,\n} from \"../../contexts/data/types\";\n\nexport const parseTableParams = (url: string) => {\n  const { current, pageSize, sorter, sorters, filters } = qs.parse(\n    url.substring(1), // remove first ? character\n  );\n\n  return {\n    parsedCurrent: current && Number(current),\n    parsedPageSize: pageSize && Number(pageSize),\n    parsedSorter: (pickNotDeprecated(sorters, sorter) as CrudSort[]) ?? [],\n    parsedFilters: (filters as CrudFilter[]) ?? [],\n  };\n};\n\nexport const parseTableParamsFromQuery = (params: any) => {\n  const url = qs.stringify(params);\n  return parseTableParams(`/${url}`);\n};\n\n/**\n * @internal This function is used to stringify table params from the useTable hook.\n */\nexport const stringifyTableParams = (params: {\n  pagination?: { current?: number; pageSize?: number };\n  sorters: CrudSort[];\n  filters: CrudFilter[];\n  [key: string]: any;\n}): string => {\n  const options: IStringifyOptions = {\n    skipNulls: true,\n    arrayFormat: \"indices\",\n    encode: false,\n  };\n  const { pagination, sorter, sorters, filters, ...rest } = params;\n\n  const queryString = qs.stringify(\n    {\n      ...rest,\n      ...(pagination ? pagination : {}),\n      sorters: pickNotDeprecated(sorters, sorter),\n      filters,\n    },\n    options,\n  );\n\n  return queryString;\n};\n\nexport const compareFilters = (\n  left: CrudFilter,\n  right: CrudFilter,\n): boolean => {\n  if (\n    left.operator !== \"and\" &&\n    left.operator !== \"or\" &&\n    right.operator !== \"and\" &&\n    right.operator !== \"or\"\n  ) {\n    return (\n      (\"field\" in left ? left.field : undefined) ===\n        (\"field\" in right ? right.field : undefined) &&\n      left.operator === right.operator\n    );\n  }\n\n  return (\n    (\"key\" in left ? left.key : undefined) ===\n      (\"key\" in right ? right.key : undefined) &&\n    left.operator === right.operator\n  );\n};\n\nexport const compareSorters = (left: CrudSort, right: CrudSort): boolean =>\n  left.field === right.field;\n// Keep only one CrudFilter per type according to compareFilters\n// Items in the array that is passed first to unionWith have higher priority\n// CrudFilter items with undefined values are necessary to signify no filter\n// After union, don't keep CrudFilter items with undefined value in the result\n// Items in the arrays with higher priority are put at the end.\nexport const unionFilters = (\n  permanentFilter: CrudFilter[],\n  newFilters: CrudFilter[],\n  prevFilters: CrudFilter[] = [],\n): CrudFilter[] => {\n  const isKeyRequired = newFilters.filter(\n    (f) => (f.operator === \"or\" || f.operator === \"and\") && !f.key,\n  );\n\n  if (isKeyRequired.length > 1) {\n    warnOnce(\n      true,\n      \"[conditionalFilters]: You have created multiple Conditional Filters at the top level, this requires the key parameter. \\nFor more information, see https://refine.dev/docs/advanced-tutorials/data-provider/handling-filters/#top-level-multiple-conditional-filters-usage\",\n    );\n  }\n\n  return unionWith(\n    permanentFilter,\n    newFilters,\n    prevFilters,\n    compareFilters,\n  ).filter(\n    (crudFilter) =>\n      crudFilter.value !== undefined &&\n      crudFilter.value !== null &&\n      (crudFilter.operator !== \"or\" ||\n        (crudFilter.operator === \"or\" && crudFilter.value.length !== 0)) &&\n      (crudFilter.operator !== \"and\" ||\n        (crudFilter.operator === \"and\" && crudFilter.value.length !== 0)),\n  );\n};\n\nexport const unionSorters = (\n  permanentSorter: CrudSort[],\n  newSorters: CrudSort[],\n): CrudSort[] =>\n  unionWith(permanentSorter, newSorters, compareSorters).filter(\n    (crudSorter) => crudSorter.order !== undefined && crudSorter.order !== null,\n  );\n// Prioritize filters in the permanentFilter and put it at the end of result array\nexport const setInitialFilters = (\n  permanentFilter: CrudFilter[],\n  defaultFilter: CrudFilter[],\n): CrudFilter[] => [\n  ...differenceWith(defaultFilter, permanentFilter, compareFilters),\n  ...permanentFilter,\n];\n\nexport const setInitialSorters = (\n  permanentSorter: CrudSort[],\n  defaultSorter: CrudSort[],\n): CrudSort[] => [\n  ...differenceWith(defaultSorter, permanentSorter, compareSorters),\n  ...permanentSorter,\n];\n\nexport const getDefaultSortOrder = (\n  columnName: string,\n  sorter?: CrudSort[],\n): SortOrder | undefined => {\n  if (!sorter) {\n    return undefined;\n  }\n\n  const sortItem = sorter.find((item) => item.field === columnName);\n\n  if (sortItem) {\n    return sortItem.order as SortOrder;\n  }\n\n  return undefined;\n};\n\nexport const getDefaultFilter = (\n  columnName: string,\n  filters?: CrudFilter[],\n  operatorType: CrudOperators = \"eq\",\n): CrudFilter[\"value\"] | undefined => {\n  const filter = filters?.find((filter) => {\n    if (\n      filter.operator !== \"or\" &&\n      filter.operator !== \"and\" &&\n      \"field\" in filter\n    ) {\n      const { operator, field } = filter;\n      return field === columnName && operator === operatorType;\n    }\n    return undefined;\n  });\n\n  if (filter) {\n    return filter.value || [];\n  }\n\n  return undefined;\n};\n","export const userFriendlySecond = (miliseconds: number): number => {\n  return miliseconds / 1000; //convert to seconds\n};\n","import fromPairs from \"lodash-es/fromPairs.js\";\nimport zip from \"lodash-es/zip.js\";\n\nimport type { MapDataFn } from \"../../../hooks/export/types\";\n\nexport const importCSVMapper = <TItem = any, TVariables = any>(\n  data: any[][],\n  mapData: MapDataFn<TItem, TVariables> = (item) => item as any,\n): TVariables[] => {\n  const [headers, ...body] = data;\n  return body\n    .map((entry) => fromPairs(zip(headers, entry)))\n    .map((item: any, index, array: any) =>\n      mapData.call(undefined, item, index, array),\n    );\n};\n","import pluralize from \"pluralize\";\nimport { humanizeString } from \"@definitions\";\n\n/**\n * A method that the internal uses\n * @internal\n * @deprecated use `useUserFriendlyName` instead.\n */\nexport const userFriendlyResourceName = (\n  resource = \"\",\n  type: \"singular\" | \"plural\",\n): string => {\n  const humanizeResource = humanizeString(resource);\n  if (type === \"singular\") {\n    return pluralize.singular(humanizeResource);\n  }\n  return pluralize.plural(humanizeResource);\n};\n","export const handleUseParams = (params: any = {}): any => {\n  if (params?.id) {\n    return {\n      ...params,\n      id: decodeURIComponent(params.id),\n    };\n  }\n  return params;\n};\n","import type { BaseKey } from \"../../../contexts/data/types\";\n\ntype ParametrizedDataActions = \"list\" | \"infinite\";\ntype IdRequiredDataActions = \"one\";\ntype IdsRequiredDataActions = \"many\";\ntype DataMutationActions =\n  | \"custom\"\n  | \"customMutation\"\n  | \"create\"\n  | \"createMany\"\n  | \"update\"\n  | \"updateMany\"\n  | \"delete\"\n  | \"deleteMany\";\n\ntype AuthActionType =\n  | \"login\"\n  | \"logout\"\n  | \"identity\"\n  | \"register\"\n  | \"forgotPassword\"\n  | \"check\"\n  | \"onError\"\n  | \"permissions\"\n  | \"updatePassword\";\n\ntype AuditActionType = \"list\" | \"log\" | \"rename\";\n\ntype IdType = BaseKey;\ntype IdsType = IdType[];\n\ntype ParamsType = any;\n\ntype KeySegment = string | IdType | IdsType | ParamsType;\n\nexport function arrayFindIndex<T>(array: T[], slice: T[]): number {\n  return array.findIndex(\n    (item, index) =>\n      index <= array.length - slice.length &&\n      slice.every(\n        (sliceItem, sliceIndex) => array[index + sliceIndex] === sliceItem,\n      ),\n  );\n}\n\nexport function arrayReplace<T>(\n  array: T[],\n  partToBeReplaced: T[],\n  newPart: T[],\n): T[] {\n  const newArray: T[] = [...array];\n  const startIndex = arrayFindIndex(array, partToBeReplaced);\n\n  if (startIndex !== -1) {\n    newArray.splice(startIndex, partToBeReplaced.length, ...newPart);\n  }\n\n  return newArray;\n}\n\nexport function stripUndefined(segments: KeySegment[]) {\n  return segments.filter((segment) => segment !== undefined);\n}\n\nfunction convertToLegacy(segments: KeySegment[]) {\n  // for `list`, `many` and `one`\n  if (segments[0] === \"data\") {\n    // [data, dpName, resource, action, ...];\n    const newSegments = segments.slice(1);\n\n    if (newSegments[2] === \"many\") {\n      newSegments[2] = \"getMany\";\n    } else if (newSegments[2] === \"infinite\") {\n      newSegments[2] = \"list\";\n    } else if (newSegments[2] === \"one\") {\n      newSegments[2] = \"detail\";\n    } else if (newSegments[1] === \"custom\") {\n      const newParams = {\n        ...newSegments[2],\n      };\n      delete newParams.method;\n      delete newParams.url;\n\n      return [\n        newSegments[0],\n        newSegments[1],\n        newSegments[2].method,\n        newSegments[2].url,\n        newParams,\n      ];\n    }\n\n    return newSegments;\n  }\n  // for `audit` -> `logList`\n  if (segments[0] === \"audit\") {\n    // [audit, resource, action, params] (for log and list)\n    // or\n    // [audit, action, params] (for rename)\n    if (segments[2] === \"list\") {\n      return [\"logList\", segments[1], segments[3]];\n    }\n  }\n  // for `access` -> `useCan`\n  if (segments[0] === \"access\") {\n    // [access, resource, action, params]\n    if (segments.length === 4) {\n      return [\n        \"useCan\",\n        {\n          resource: segments[1],\n          action: segments[2],\n          ...segments[3], // params: { params, enabled }\n        },\n      ];\n    }\n  }\n  // for `auth`\n  if (segments[0] === \"auth\") {\n    if (arrayFindIndex(segments, [\"auth\", \"login\"]) !== -1) {\n      return [\"useLogin\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"logout\"]) !== -1) {\n      return [\"useLogout\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"identity\"]) !== -1) {\n      return [\"getUserIdentity\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"register\"]) !== -1) {\n      return [\"useRegister\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"forgotPassword\"]) !== -1) {\n      return [\"useForgotPassword\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"check\"]) !== -1) {\n      return [\"useAuthenticated\", segments[2]]; // [auth, check, params]\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"onError\"]) !== -1) {\n      return [\"useCheckError\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"permissions\"]) !== -1) {\n      return [\"usePermissions\"];\n    }\n    if (arrayFindIndex(segments, [\"auth\", \"updatePassword\"]) !== -1) {\n      return [\"useUpdatePassword\"];\n    }\n  }\n  return segments;\n}\n\nclass BaseKeyBuilder {\n  segments: KeySegment[] = [];\n\n  constructor(segments: KeySegment[] = []) {\n    this.segments = segments;\n  }\n\n  key() {\n    return this.segments;\n  }\n\n  legacy() {\n    return convertToLegacy(this.segments);\n  }\n\n  get(legacy?: boolean) {\n    return legacy ? this.legacy() : this.segments;\n  }\n}\n\nclass ParamsKeyBuilder extends BaseKeyBuilder {\n  params(paramsValue?: ParamsType) {\n    return new BaseKeyBuilder([...this.segments, paramsValue]);\n  }\n}\n\nclass DataIdRequiringKeyBuilder extends BaseKeyBuilder {\n  id(idValue?: IdType) {\n    return new ParamsKeyBuilder([\n      ...this.segments,\n      idValue ? String(idValue) : undefined,\n    ]);\n  }\n}\n\nclass DataIdsRequiringKeyBuilder extends BaseKeyBuilder {\n  ids(...idsValue: IdsType) {\n    return new ParamsKeyBuilder([\n      ...this.segments,\n      ...(idsValue.length ? [idsValue.map((el) => String(el))] : []),\n    ]);\n  }\n}\n\nclass DataResourceKeyBuilder extends BaseKeyBuilder {\n  action(actionType: ParametrizedDataActions): ParamsKeyBuilder;\n  action(actionType: IdRequiredDataActions): DataIdRequiringKeyBuilder;\n  action(actionType: IdsRequiredDataActions): DataIdsRequiringKeyBuilder;\n  action(\n    actionType:\n      | ParametrizedDataActions\n      | IdRequiredDataActions\n      | IdsRequiredDataActions,\n  ): ParamsKeyBuilder | DataIdRequiringKeyBuilder | DataIdsRequiringKeyBuilder {\n    if (actionType === \"one\") {\n      return new DataIdRequiringKeyBuilder([...this.segments, actionType]);\n    }\n    if (actionType === \"many\") {\n      return new DataIdsRequiringKeyBuilder([...this.segments, actionType]);\n    }\n    if ([\"list\", \"infinite\"].includes(actionType)) {\n      return new ParamsKeyBuilder([...this.segments, actionType]);\n    }\n    throw new Error(\"Invalid action type\");\n  }\n}\n\nclass DataKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new DataResourceKeyBuilder([...this.segments, resourceName]);\n  }\n\n  mutation(mutationName: DataMutationActions) {\n    return new ParamsKeyBuilder([\n      ...(mutationName === \"custom\" ? this.segments : [this.segments[0]]),\n      mutationName,\n    ]);\n  }\n}\n\nclass AuthKeyBuilder extends BaseKeyBuilder {\n  action(actionType: AuthActionType) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nclass AccessResourceKeyBuilder extends BaseKeyBuilder {\n  action(resourceName: string) {\n    return new ParamsKeyBuilder([...this.segments, resourceName]);\n  }\n}\n\nclass AccessKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new AccessResourceKeyBuilder([...this.segments, resourceName]);\n  }\n}\n\nclass AuditActionKeyBuilder extends BaseKeyBuilder {\n  action(actionType: Extract<AuditActionType, \"list\">) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nclass AuditKeyBuilder extends BaseKeyBuilder {\n  resource(resourceName?: string) {\n    return new AuditActionKeyBuilder([...this.segments, resourceName]);\n  }\n\n  action(actionType: Extract<AuditActionType, \"rename\" | \"log\">) {\n    return new ParamsKeyBuilder([...this.segments, actionType]);\n  }\n}\n\nexport class KeyBuilder extends BaseKeyBuilder {\n  data(name?: string) {\n    return new DataKeyBuilder([\"data\", name || \"default\"]);\n  }\n\n  auth() {\n    return new AuthKeyBuilder([\"auth\"]);\n  }\n\n  access() {\n    return new AccessKeyBuilder([\"access\"]);\n  }\n\n  audit() {\n    return new AuditKeyBuilder([\"audit\"]);\n  }\n}\n\nexport const keys = () => new KeyBuilder([]);\n","/*\n * Returns first value that is not undefined.\n * @internal This is an internal helper function. Please do not use externally.\n */\nexport const pickNotDeprecated = <T extends unknown[]>(\n  ...args: T\n): T[never] => {\n  return args.find((arg) => typeof arg !== \"undefined\");\n};\n","import type { QueryKey } from \"@tanstack/react-query\";\n\nimport type { IQueryKeys, MetaQuery } from \"../../../contexts/data/types\";\nimport { keys as newKeys } from \"../keys\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * @deprecated `queryKeys` is deprecated. Please use `keys` instead.\n */\nexport const queryKeys = (\n  resource?: string,\n  dataProviderName?: string,\n  meta?: MetaQuery,\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery | undefined,\n): IQueryKeys => {\n  const providerName = dataProviderName || \"default\";\n  const keys: IQueryKeys = {\n    all: [providerName],\n    resourceAll: [providerName, resource || \"\"],\n    list: (config) => [\n      ...keys.resourceAll,\n      \"list\",\n      {\n        ...config,\n        ...(pickNotDeprecated(meta, metaData) || {}),\n      } as QueryKey,\n    ],\n    many: (ids) =>\n      [\n        ...keys.resourceAll,\n        \"getMany\",\n        ids?.map(String) as QueryKey,\n        { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n      ].filter((item) => item !== undefined),\n    detail: (id) => [\n      ...keys.resourceAll,\n      \"detail\",\n      id?.toString(),\n      { ...(pickNotDeprecated(meta, metaData) || {}) } as QueryKey,\n    ],\n    logList: (meta) =>\n      [\"logList\", resource, meta as any, metaData as QueryKey].filter(\n        (item) => item !== undefined,\n      ),\n  };\n  return keys;\n};\n\nexport const queryKeysReplacement = (preferLegacyKeys?: boolean) => {\n  return (\n    resource?: string,\n    dataProviderName?: string,\n    meta?: MetaQuery,\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery | undefined,\n  ): IQueryKeys => {\n    const providerName = dataProviderName || \"default\";\n\n    const keys: IQueryKeys = {\n      all: newKeys().data(providerName).get(preferLegacyKeys),\n      resourceAll: newKeys()\n        .data(dataProviderName)\n        .resource(resource ?? \"\")\n        .get(preferLegacyKeys),\n      list: (config) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"list\")\n          .params({\n            ...config,\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      many: (ids) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"many\")\n          .ids(...(ids ?? []))\n          .params({\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      detail: (id) =>\n        newKeys()\n          .data(dataProviderName)\n          .resource(resource ?? \"\")\n          .action(\"one\")\n          .id(id ?? \"\")\n          .params({\n            ...(pickNotDeprecated(meta, metaData) || {}),\n          })\n          .get(preferLegacyKeys),\n      logList: (meta) =>\n        [\n          ...newKeys()\n            .audit()\n            .resource(resource)\n            .action(\"list\")\n            .params(meta)\n            .get(preferLegacyKeys),\n          metaData as QueryKey,\n        ].filter((item) => item !== undefined),\n    };\n\n    return keys;\n  };\n};\n","export const hasPermission = (\n  permissions: string[] | undefined,\n  action: string | undefined,\n): boolean => {\n  if (!permissions || !action) {\n    return false;\n  }\n  return !!permissions.find((i) => i === action);\n};\n","/**\n * Check if a segment is a parameter. (e.g. :id)\n */\nexport const isParameter = (segment: string) => {\n  return segment.startsWith(\":\");\n};\n","/**\n * Split a path to segments.\n */\nexport const splitToSegments = (path: string) => {\n  const segments = path.split(\"/\").filter((segment) => segment !== \"\");\n  return segments;\n};\n","import { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Checks if the both routes have the same number of segments.\n */\nexport const isSegmentCountsSame = (route: string, resourceRoute: string) => {\n  const routeSegments = splitToSegments(route);\n  const resourceRouteSegments = splitToSegments(resourceRoute);\n\n  return routeSegments.length === resourceRouteSegments.length;\n};\n","/**\n * Remove leading and trailing slashes from a route.\n */\nexport const removeLeadingTrailingSlashes = (route: string) => {\n  return route.replace(/^\\/|\\/$/g, \"\");\n};\n","import { isParameter } from \"./is-parameter\";\nimport { isSegmentCountsSame } from \"./is-segment-counts-same\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * This function if the route and resourceRoute match by segments.\n * - First, trailing and leading slashes are removed\n * - Then, the route and resourceRoute are split to segments and checked if they have the same number of segments\n * - Then, each segment is checked if it is a parameter or if it matches the resourceRoute segment\n * - If all segments match, the function returns true, otherwise false\n */\nexport const checkBySegments = (route: string, resourceRoute: string) => {\n  const stdRoute = removeLeadingTrailingSlashes(route);\n  const stdResourceRoute = removeLeadingTrailingSlashes(resourceRoute);\n  // we need to check if the route and resourceRoute have the same number of segments\n  // if not, we can't match them\n  if (!isSegmentCountsSame(stdRoute, stdResourceRoute)) {\n    return false;\n  }\n\n  const routeSegments = splitToSegments(stdRoute);\n  const resourceRouteSegments = splitToSegments(stdResourceRoute);\n\n  return resourceRouteSegments.every((segment, index) => {\n    return isParameter(segment) || segment === routeSegments[index];\n  });\n};\n","import type { Action } from \"../../../contexts/router/types\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * This helper function returns the default path for a given action and resource.\n * It also applies the parentPrefix if provided.\n * This is used by the legacy router and the new router if the resource doesn't provide a custom path.\n */\nexport const getDefaultActionPath = (\n  resourceName: string,\n  action: Action,\n  parentPrefix?: string,\n): string => {\n  const cleanParentPrefix = removeLeadingTrailingSlashes(parentPrefix || \"\");\n\n  let path = `${cleanParentPrefix}${\n    cleanParentPrefix ? \"/\" : \"\"\n  }${resourceName}`;\n\n  if (action === \"list\") {\n    path = `${path}`;\n  } else if (action === \"create\") {\n    path = `${path}/create`;\n  } else if (action === \"edit\") {\n    path = `${path}/edit/:id`;\n  } else if (action === \"show\") {\n    path = `${path}/show/:id`;\n  } else if (action === \"clone\") {\n    path = `${path}/clone/:id`;\n  }\n\n  return `/${path.replace(/^\\//, \"\")}`;\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Returns the parent resource of the given resource.\n * Works both with the deprecated `parentName` and the new `parent` property.\n */\nexport const getParentResource = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n): IResourceItem | undefined => {\n  const parentName = pickNotDeprecated(\n    resource.meta?.parent,\n    resource.options?.parent,\n    resource.parentName,\n  );\n\n  if (!parentName) {\n    return undefined;\n  }\n\n  const parentResource = resources.find(\n    (resource) => (resource.identifier ?? resource.name) === parentName,\n  );\n\n  /**\n   * If the parent resource is not found, we return a resource object with the name of the parent resource.\n   * Because we still want to have nesting and prefixing for the resource even if the parent is not explicitly defined.\n   */\n  return parentResource ?? { name: parentName };\n};\n","import type { ResourceProps } from \"../../../contexts/resource/types\";\nimport { getParentResource } from \"./get-parent-resource\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\n\n/**\n * Returns the parent prefix for a resource\n * - If `legacy` is provided, the computation is based on the `route` option of the resource\n */\nexport const getParentPrefixForResource = (\n  resource: ResourceProps,\n  resources: ResourceProps[],\n  /**\n   * Uses legacy route if true (`options.route`)\n   */\n  legacy?: boolean,\n): string | undefined => {\n  const parents: ResourceProps[] = [];\n\n  let parent = getParentResource(resource, resources);\n\n  while (parent) {\n    parents.push(parent);\n    parent = getParentResource(parent, resources);\n  }\n\n  if (parents.length === 0) {\n    return undefined;\n  }\n\n  return `/${parents\n    .reverse()\n    .map((parent) => {\n      const v = legacy ? parent.options?.route ?? parent.name : parent.name;\n      return removeLeadingTrailingSlashes(v);\n    })\n    .join(\"/\")}`;\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { getDefaultActionPath } from \"./get-default-action-path\";\nimport { getParentPrefixForResource } from \"./get-parent-prefix-for-resource\";\n\nexport type ResourceActionRoute = {\n  action: Action;\n  resource: IResourceItem;\n  route: string;\n};\n\n/**\n * This function returns all the routes for available actions for a resource.\n * - If the action is a function, it means we're fallbacking to default path for the action\n * - If the action is a string, it means we don't have the component, but we have the route\n * - If the action is an object, it means we have the component and the route\n * - It will return an array of objects with the action, the resource and the route\n */\nexport const getActionRoutesFromResource = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n  /**\n   * Uses legacy route if true (`options.route`)\n   */\n  legacy?: boolean,\n) => {\n  const actions: ResourceActionRoute[] = [];\n\n  const actionList: Action[] = [\"list\", \"show\", \"edit\", \"create\", \"clone\"];\n\n  const parentPrefix = getParentPrefixForResource(resource, resources, legacy);\n\n  actionList.forEach((action) => {\n    const item =\n      legacy && action === \"clone\" ? resource.create : resource[action];\n\n    let route: string | undefined = undefined;\n\n    if (typeof item === \"function\" || legacy) {\n      // means we're fallbacking to default path for the action\n      route = getDefaultActionPath(\n        legacy\n          ? resource.meta?.route ?? resource.options?.route ?? resource.name\n          : resource.name,\n        action,\n        legacy ? parentPrefix : undefined,\n      );\n    } else if (typeof item === \"string\") {\n      // means we don't have the component, but we have the route\n      route = item;\n    } else if (typeof item === \"object\") {\n      // means we have the component and the route\n      route = item.path;\n    }\n\n    if (route) {\n      actions.push({\n        action,\n        resource,\n        route: `/${route.replace(/^\\//, \"\")}`,\n      });\n    }\n  });\n\n  return actions;\n};\n","import type { ResourceActionRoute } from \"./get-action-routes-from-resource\";\nimport { isParameter } from \"./is-parameter\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { splitToSegments } from \"./split-to-segments\";\n\n/**\n * Picks the most eligible route from the given matched routes.\n * - If there's only one route, it returns it.\n * - If there's more than one route, it picks the best non-greedy match.\n */\nexport const pickMatchedRoute = (\n  routes: ResourceActionRoute[],\n): ResourceActionRoute | undefined => {\n  // these routes are all matched, we should pick the least parametrized one\n\n  // no routes, no match\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  // no need to calculate the route segments if there's only one route\n  if (routes.length === 1) {\n    return routes[0];\n  }\n\n  // remove trailing and leading slashes\n  // split them to segments\n  const sanitizedRoutes = routes.map((route) => ({\n    ...route,\n    splitted: splitToSegments(removeLeadingTrailingSlashes(route.route)),\n  }));\n\n  // at this point, before calling this function, we already checked for segment lenghts and expect all of them to be the same\n  const segmentsCount = sanitizedRoutes[0]?.splitted.length ?? 0;\n\n  let eligibleRoutes: Array<(typeof sanitizedRoutes)[number]> = [\n    ...sanitizedRoutes,\n  ];\n\n  // loop through the segments\n  for (let i = 0; i < segmentsCount; i++) {\n    const nonParametrizedRoutes = eligibleRoutes.filter(\n      (route) => !isParameter(route.splitted[i]),\n    );\n\n    if (nonParametrizedRoutes.length === 0) {\n      // keep the eligible routes as they are\n      continue;\n    }\n    if (nonParametrizedRoutes.length === 1) {\n      // no need to continue, we found the route\n      eligibleRoutes = nonParametrizedRoutes;\n      break;\n    }\n\n    // we have more than one non-parametrized route, we need to check the next segment\n    eligibleRoutes = nonParametrizedRoutes;\n  }\n\n  return eligibleRoutes[0];\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { checkBySegments } from \"./check-by-segments\";\nimport { getActionRoutesFromResource } from \"./get-action-routes-from-resource\";\nimport { pickMatchedRoute } from \"./pick-matched-route\";\n\n/**\n * Match the resource from the route\n * - It will calculate all possible routes for resources and their actions\n * - It will check if the route matches any of the possible routes\n * - It will return the most eligible resource and action\n */\nexport const matchResourceFromRoute = (\n  route: string,\n  resources: IResourceItem[],\n): {\n  found: boolean;\n  resource?: IResourceItem;\n  action?: Action;\n  matchedRoute?: string;\n} => {\n  const allActionRoutes = resources.flatMap((resource) => {\n    return getActionRoutesFromResource(resource, resources);\n  });\n\n  const allFound = allActionRoutes.filter((actionRoute) => {\n    return checkBySegments(route, actionRoute.route);\n  });\n\n  const mostEligible = pickMatchedRoute(allFound);\n\n  return {\n    found: !!mostEligible,\n    resource: mostEligible?.resource,\n    action: mostEligible?.action,\n    matchedRoute: mostEligible?.route,\n  };\n};\n","import type { ResourceProps } from \"../../../contexts/resource/types\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\nimport { getParentPrefixForResource } from \"../router\";\n\n/**\n * generates route for the resource based on parents and custom routes\n * @deprecated this is a **legacy** function and works only with the old resource definition\n */\nexport const routeGenerator = (\n  item: ResourceProps,\n  resourcesFromProps: ResourceProps[],\n): string | undefined => {\n  let route;\n\n  const parentPrefix = getParentPrefixForResource(\n    item,\n    resourcesFromProps,\n    true,\n  );\n\n  if (parentPrefix) {\n    const meta = pickNotDeprecated(item.meta, item.options);\n    route = `${parentPrefix}/${meta?.route ?? item.name}`;\n  } else {\n    route = item.options?.route ?? item.name;\n  }\n\n  return `/${route.replace(/^\\//, \"\")}`;\n};\n","import { pickNotDeprecated } from \"@definitions/helpers/pickNotDeprecated\";\n\nimport type {\n  IMenuItem,\n  IResourceItem,\n  ITreeMenu,\n} from \"../../../../contexts/resource/types\";\n\n/**\n * @deprecated This helper is deprecated. Please use `createTree` instead.\n */\nexport const createTreeView = (\n  resources: IResourceItem[] | IMenuItem[],\n): ITreeMenu[] | ITreeMenu[] => {\n  const tree = [];\n  const resourcesRouteObject: { [key: string]: any } = {};\n  const resourcesNameObject: { [key: string]: any } = {};\n  let parent: IResourceItem | IMenuItem;\n  let child: ITreeMenu;\n\n  for (let i = 0; i < resources.length; i++) {\n    parent = resources[i];\n\n    const route =\n      parent.route ??\n      pickNotDeprecated(parent?.meta, parent.options)?.route ??\n      \"\";\n\n    resourcesRouteObject[route] = parent;\n    resourcesRouteObject[route][\"children\"] = [];\n\n    resourcesNameObject[parent.name] = parent;\n    resourcesNameObject[parent.name][\"children\"] = [];\n  }\n\n  for (const name in resourcesRouteObject) {\n    if (Object.hasOwn(resourcesRouteObject, name)) {\n      child = resourcesRouteObject[name];\n\n      if (child.parentName && resourcesNameObject[child.parentName]) {\n        resourcesNameObject[child.parentName][\"children\"].push(child);\n      } else {\n        tree.push(child);\n      }\n    }\n  }\n\n  return tree;\n};\n","export const humanizeString = (text: string): string => {\n  text = text.replace(/([a-z]{1})([A-Z]{1})/g, \"$1-$2\");\n  text = text.replace(/([A-Z]{1})([A-Z]{1})([a-z]{1})/g, \"$1-$2$3\");\n\n  text = text\n    .toLowerCase()\n    .replace(/[_-]+/g, \" \")\n    .replace(/\\s{2,}/g, \" \")\n    .trim();\n  text = text.charAt(0).toUpperCase() + text.slice(1);\n\n  return text;\n};\n// https://www.npmjs.com/package/humanize-string\n","import React from \"react\";\n\nimport pluralize from \"pluralize\";\n\nimport { DefaultLayout } from \"@components/layoutWrapper/defaultLayout\";\n\nimport { humanizeString } from \"../../definitions/helpers/humanizeString\";\nimport type {\n  IRefineContext,\n  IRefineContextOptions,\n  IRefineContextProvider,\n} from \"./types\";\n\nimport { LoginPage as DefaultLoginPage } from \"@components/pages\";\n\nconst defaultTitle: IRefineContextOptions[\"title\"] = {\n  icon: (\n    <svg\n      width={24}\n      height={24}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      data-testid=\"refine-logo\"\n      id=\"refine-default-logo\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.7889 0.422291C12.6627 -0.140764 11.3373 -0.140764 10.2111 0.422291L2.21115 4.42229C0.85601 5.09986 0 6.48491 0 8V16C0 17.5151 0.85601 18.9001 2.21115 19.5777L10.2111 23.5777C11.3373 24.1408 12.6627 24.1408 13.7889 23.5777L21.7889 19.5777C23.144 18.9001 24 17.5151 24 16V8C24 6.48491 23.144 5.09986 21.7889 4.42229L13.7889 0.422291ZM8 8C8 5.79086 9.79086 4 12 4C14.2091 4 16 5.79086 16 8V16C16 18.2091 14.2091 20 12 20C9.79086 20 8 18.2091 8 16V8Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M14 8C14 9.10457 13.1046 10 12 10C10.8954 10 10 9.10457 10 8C10 6.89543 10.8954 6 12 6C13.1046 6 14 6.89543 14 8Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  ),\n  text: \"Refine Project\",\n};\n\nexport const defaultRefineOptions: IRefineContextOptions = {\n  mutationMode: \"pessimistic\",\n  syncWithLocation: false,\n  undoableTimeout: 5000,\n  warnWhenUnsavedChanges: false,\n  liveMode: \"off\",\n  redirect: {\n    afterCreate: \"list\",\n    afterClone: \"list\",\n    afterEdit: \"list\",\n  },\n  overtime: {\n    interval: 1000,\n  },\n  textTransformers: {\n    humanize: humanizeString,\n    plural: pluralize.plural,\n    singular: pluralize.singular,\n  },\n  disableServerSideValidation: false,\n  title: defaultTitle,\n};\n\nexport const RefineContext = React.createContext<IRefineContext>({\n  hasDashboard: false,\n  mutationMode: \"pessimistic\",\n  warnWhenUnsavedChanges: false,\n  syncWithLocation: false,\n  undoableTimeout: 5000,\n  Title: undefined,\n  Sider: undefined,\n  Header: undefined,\n  Footer: undefined,\n  Layout: DefaultLayout,\n  OffLayoutArea: undefined,\n  liveMode: \"off\",\n  onLiveEvent: undefined,\n  options: defaultRefineOptions,\n});\n\nexport const RefineContextProvider: React.FC<IRefineContextProvider> = ({\n  hasDashboard,\n  mutationMode,\n  warnWhenUnsavedChanges,\n  syncWithLocation,\n  undoableTimeout,\n  children,\n  DashboardPage,\n  Title,\n  Layout = DefaultLayout,\n  Header,\n  Sider,\n  Footer,\n  OffLayoutArea,\n  LoginPage = DefaultLoginPage,\n  catchAll,\n  liveMode = \"off\",\n  onLiveEvent,\n  options,\n}) => {\n  return (\n    <RefineContext.Provider\n      value={{\n        __initialized: true,\n        hasDashboard,\n        mutationMode,\n        warnWhenUnsavedChanges,\n        syncWithLocation,\n        Title,\n        undoableTimeout,\n        Layout,\n        Header,\n        Sider,\n        Footer,\n        OffLayoutArea,\n        DashboardPage,\n        LoginPage,\n        catchAll,\n        liveMode,\n        onLiveEvent,\n        options,\n      }}\n    >\n      {children}\n    </RefineContext.Provider>\n  );\n};\n","import React from \"react\";\n\nimport type { LayoutProps } from \"../../../contexts/refine/types\";\n\nexport const DefaultLayout: React.FC<LayoutProps> = ({ children }) => {\n  return <div>{children}</div>;\n};\n","import type { QueryClient, QueryClientConfig } from \"@tanstack/react-query\";\n\nimport { defaultRefineOptions } from \"@contexts/refine\";\n\nimport type { MutationMode } from \"../../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../../contexts/live/types\";\nimport type {\n  IRefineContextOptions,\n  IRefineOptions,\n} from \"../../../contexts/refine/types\";\n\ntype HandleRefineOptionsProps = {\n  options?: IRefineOptions;\n  mutationMode?: MutationMode;\n  syncWithLocation?: boolean;\n  warnWhenUnsavedChanges?: boolean;\n  undoableTimeout?: number;\n  liveMode?: LiveModeProps[\"liveMode\"];\n  disableTelemetry?: boolean;\n  reactQueryClientConfig?: QueryClientConfig;\n  reactQueryDevtoolConfig?: any | false;\n};\n\ntype HandleRefineOptionsReturnValues = {\n  optionsWithDefaults: IRefineContextOptions;\n  disableTelemetryWithDefault: boolean;\n  reactQueryWithDefaults: {\n    clientConfig: QueryClientConfig | InstanceType<typeof QueryClient>;\n    devtoolConfig: false | any;\n  };\n};\n\nexport const handleRefineOptions = ({\n  options,\n  disableTelemetry,\n  liveMode,\n  mutationMode,\n  reactQueryClientConfig,\n  reactQueryDevtoolConfig,\n  syncWithLocation,\n  undoableTimeout,\n  warnWhenUnsavedChanges,\n}: HandleRefineOptionsProps = {}): HandleRefineOptionsReturnValues => {\n  const optionsWithDefaults: IRefineContextOptions = {\n    breadcrumb: options?.breadcrumb,\n    mutationMode:\n      options?.mutationMode ??\n      mutationMode ??\n      defaultRefineOptions.mutationMode,\n    undoableTimeout:\n      options?.undoableTimeout ??\n      undoableTimeout ??\n      defaultRefineOptions.undoableTimeout,\n    syncWithLocation:\n      options?.syncWithLocation ??\n      syncWithLocation ??\n      defaultRefineOptions.syncWithLocation,\n    warnWhenUnsavedChanges:\n      options?.warnWhenUnsavedChanges ??\n      warnWhenUnsavedChanges ??\n      defaultRefineOptions.warnWhenUnsavedChanges,\n    liveMode: options?.liveMode ?? liveMode ?? defaultRefineOptions.liveMode,\n    redirect: {\n      afterCreate:\n        options?.redirect?.afterCreate ??\n        defaultRefineOptions.redirect.afterCreate,\n      afterClone:\n        options?.redirect?.afterClone ??\n        defaultRefineOptions.redirect.afterClone,\n      afterEdit:\n        options?.redirect?.afterEdit ?? defaultRefineOptions.redirect.afterEdit,\n    },\n    overtime: options?.overtime ?? defaultRefineOptions.overtime,\n    textTransformers: {\n      humanize:\n        options?.textTransformers?.humanize ??\n        defaultRefineOptions.textTransformers.humanize,\n      plural:\n        options?.textTransformers?.plural ??\n        defaultRefineOptions.textTransformers.plural,\n      singular:\n        options?.textTransformers?.singular ??\n        defaultRefineOptions.textTransformers.singular,\n    },\n    disableServerSideValidation:\n      options?.disableServerSideValidation ??\n      defaultRefineOptions.disableServerSideValidation,\n    projectId: options?.projectId,\n    useNewQueryKeys: options?.useNewQueryKeys,\n    title: {\n      icon:\n        typeof options?.title?.icon === \"undefined\"\n          ? defaultRefineOptions.title.icon\n          : options?.title?.icon,\n      text:\n        typeof options?.title?.text === \"undefined\"\n          ? defaultRefineOptions.title.text\n          : options?.title?.text,\n    },\n  };\n\n  const disableTelemetryWithDefault =\n    options?.disableTelemetry ?? disableTelemetry ?? false;\n\n  const reactQueryWithDefaults = {\n    clientConfig:\n      options?.reactQuery?.clientConfig ?? reactQueryClientConfig ?? {},\n    devtoolConfig:\n      options?.reactQuery?.devtoolConfig ?? reactQueryDevtoolConfig ?? {},\n  };\n\n  return {\n    optionsWithDefaults,\n    disableTelemetryWithDefault,\n    reactQueryWithDefaults,\n  };\n};\n","import type { IRefineContextOptions } from \"../../../contexts/refine/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport type { RedirectAction } from \"../../../hooks/form/types\";\n\ntype RedirectPageProps = {\n  redirectFromProps?: RedirectAction;\n  action: Action;\n  redirectOptions: IRefineContextOptions[\"redirect\"];\n};\n\nexport const redirectPage = ({\n  redirectFromProps,\n  action,\n  redirectOptions,\n}: RedirectPageProps): RedirectAction => {\n  if (redirectFromProps || redirectFromProps === false) {\n    return redirectFromProps;\n  }\n\n  switch (action) {\n    case \"clone\":\n      return redirectOptions.afterClone;\n    case \"create\":\n      return redirectOptions.afterCreate;\n    case \"edit\":\n      return redirectOptions.afterEdit;\n    default:\n      return false;\n  }\n};\n","type EachResolve<TResolve, Response> = (\n  result: TResolve,\n  index: number,\n) => Response;\ntype EachReject<TReject, Response> = (\n  error: TReject,\n  index: number,\n) => Response;\n\nexport const sequentialPromises = async <\n  TResolve = unknown,\n  TReject = unknown,\n  TResolveResponse = unknown,\n  TRejectResponse = unknown,\n>(\n  promises: (() => Promise<TResolve>)[],\n  onEachResolve: EachResolve<TResolve, TResolveResponse>,\n  onEachReject: EachReject<TReject, TRejectResponse>,\n): Promise<(TResolveResponse | TRejectResponse)[]> => {\n  const results = [];\n  // @ts-expect-error Remove this when we enable `downLevelIterations`\n  for (const [index, promise] of promises.entries()) {\n    try {\n      const result = await promise();\n\n      results.push(onEachResolve(result, index));\n    } catch (error) {\n      results.push(onEachReject(error as TReject, index));\n    }\n  }\n  return results;\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { removeLeadingTrailingSlashes } from \"../router/remove-leading-trailing-slashes\";\n\n/**\n * Picks the resource based on the provided identifier.\n * Identifier fallbacks to `name` if `identifier` is not explicitly provided to the resource.\n * If legacy is true, then resource is matched by `route` first and then by `name`.\n */\nexport const pickResource = (\n  identifier?: string,\n  resources: IResourceItem[] = [],\n  /**\n   * If true, the identifier will be checked for `route` and `name` properties\n   */\n  legacy = false,\n): IResourceItem | undefined => {\n  if (!identifier) {\n    return undefined;\n  }\n\n  if (legacy) {\n    const resourceByRoute = resources.find(\n      (r) =>\n        removeLeadingTrailingSlashes(r.route ?? \"\") ===\n        removeLeadingTrailingSlashes(identifier),\n    );\n\n    const resource = resourceByRoute\n      ? resourceByRoute\n      : resources.find((r) => r.name === identifier);\n\n    return resource;\n  }\n\n  let resource = resources.find((r) => r.identifier === identifier);\n  if (!resource) {\n    resource = resources.find((r) => r.name === identifier);\n  }\n\n  return resource;\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { pickResource } from \"../pick-resource\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\n/**\n * Picks the data provider name based on the provided name or fallbacks to resource definition, or `default`.\n */\nexport const pickDataProvider = (\n  resourceName?: string,\n  dataProviderName?: string,\n  resources?: IResourceItem[],\n) => {\n  if (dataProviderName) {\n    return dataProviderName;\n  }\n\n  /**\n   * In this helper, we don't do `route` based matching therefore there's no need to check for `legacy` behaviors.\n   */\n  const resource = pickResource(resourceName, resources);\n\n  const meta = pickNotDeprecated(resource?.meta, resource?.options);\n\n  if (meta?.dataProviderName) {\n    return meta.dataProviderName;\n  }\n\n  return \"default\";\n};\n","export const handleMultiple = async <TData = unknown>(\n  promises: Promise<{ data: TData }>[],\n): Promise<{ data: TData[] }> => {\n  return {\n    data: (await Promise.all(promises)).map((res) => res.data),\n  };\n};\n","import type { GetListResponse } from \"../../../contexts/data/types\";\n\nexport const getNextPageParam = (lastPage: GetListResponse) => {\n  const { pagination, cursor } = lastPage;\n\n  // cursor pagination\n  if (cursor?.next) {\n    return cursor.next;\n  }\n\n  const current = pagination?.current || 1;\n\n  const pageSize = pagination?.pageSize || 10;\n  const totalPages = Math.ceil((lastPage.total || 0) / pageSize);\n\n  return current < totalPages ? Number(current) + 1 : undefined;\n};\n\nexport const getPreviousPageParam = (lastPage: GetListResponse) => {\n  const { pagination, cursor } = lastPage;\n\n  // cursor pagination\n  if (cursor?.prev) {\n    return cursor.prev;\n  }\n\n  const current = pagination?.current || 1;\n\n  return current === 1 ? undefined : current - 1;\n};\n","import type {\n  IResourceItem,\n  ResourceProps,\n} from \"../../../contexts/resource/types\";\nimport { routeGenerator } from \"../routeGenerator\";\n\n/**\n * For the legacy definition of resources, we did a basic transformation for provided resources\n * - This is meant to provide an easier way to access properties.\n * - In the new definition, we don't need to do transformations and properties can be accessed via helpers or manually.\n * This is kept for backward compability\n */\nexport const legacyResourceTransform = (resources: ResourceProps[]) => {\n  const _resources: IResourceItem[] = [];\n\n  resources.forEach((resource) => {\n    _resources.push({\n      ...resource,\n      label: resource.meta?.label ?? resource.options?.label,\n      route: routeGenerator(resource, resources),\n      canCreate: !!resource.create,\n      canEdit: !!resource.edit,\n      canShow: !!resource.show,\n      canDelete: resource.canDelete,\n    });\n  });\n\n  return _resources;\n};\n","import { splitToSegments } from \"./split-to-segments\";\nimport { removeLeadingTrailingSlashes } from \"./remove-leading-trailing-slashes\";\nimport { isParameter } from \"./is-parameter\";\n\n/**\n * Picks the route parameters from the given route.\n * (e.g. /users/:id/posts/:postId => ['id', 'postId'])\n */\nexport const pickRouteParams = (route: string) => {\n  const segments = splitToSegments(removeLeadingTrailingSlashes(route));\n\n  return segments.flatMap((s) => {\n    if (isParameter(s)) {\n      return [s.slice(1)];\n    }\n\n    return [];\n  });\n};\n","/**\n * Prepares the route params by checking the existing params and meta data.\n * Meta data is prioritized over params.\n * Params are prioritized over predetermined id, action and resource.\n * This means, we can use `meta` for user supplied params (both manually or from the query string)\n */\nexport const prepareRouteParams = <\n  TRouteParams extends Record<string, unknown> = Record<string, unknown>,\n>(\n  routeParams: (keyof TRouteParams)[],\n  meta: Record<string, unknown> = {},\n): Partial<TRouteParams> => {\n  return routeParams.reduce(\n    (acc, key) => {\n      const value = meta[key as string];\n      if (typeof value !== \"undefined\") {\n        acc[key] = value as TRouteParams[keyof TRouteParams];\n      }\n      return acc;\n    },\n    {} as Partial<TRouteParams>,\n  );\n};\n","import type { MetaQuery } from \"../../../contexts/data/types\";\nimport type { ParseResponse } from \"../../../contexts/router/types\";\nimport { pickRouteParams } from \"./pick-route-params\";\nimport { prepareRouteParams } from \"./prepare-route-params\";\n\n/**\n * This function will compose a route with the given params and meta.\n * - A route can have parameters like (eg: /users/:id)\n * - First we pick the route params from the route (eg: [id])\n * - Then we prepare the route params with the given params and meta (eg: { id: 1 })\n * - Then we replace the route params with the prepared route params (eg: /users/1)\n */\nexport const composeRoute = (\n  designatedRoute: string,\n  resourceMeta: MetaQuery = {},\n  parsed: ParseResponse = {},\n  meta: Record<string, unknown> = {},\n): string => {\n  // pickRouteParams (from the route)\n  const routeParams = pickRouteParams(designatedRoute);\n  // prepareRouteParams (from route params, params and meta)\n  const preparedRouteParams = prepareRouteParams(routeParams, {\n    ...resourceMeta,\n    ...(typeof parsed?.id !== \"undefined\" ? { id: parsed.id } : {}),\n    ...(typeof parsed?.action !== \"undefined\" ? { action: parsed.action } : {}),\n    ...(typeof parsed?.resource !== \"undefined\"\n      ? { resource: parsed.resource }\n      : {}),\n    ...parsed?.params,\n    ...meta,\n  });\n  // replace route params with prepared route params\n  return designatedRoute.replace(/:([^\\/]+)/g, (match, key) => {\n    const fromParams = preparedRouteParams[key];\n    if (typeof fromParams !== \"undefined\") {\n      return `${fromParams}`;\n    }\n    return match;\n  });\n};\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * @returns authProvider or legacyAuthProvider if provided, otherwise null\n * @internal\n * NOTE: Will be removed in v5\n */\nexport const useActiveAuthProvider = () => {\n  const legacyAuthProvider = useLegacyAuthContext();\n  const authProvider = useAuthBindingsContext();\n\n  if (authProvider.isProvided) {\n    return { isLegacy: false, ...authProvider };\n  }\n\n  if (legacyAuthProvider.isProvided) {\n    // legacyAuthProvider interface is different from authProvider interface\n    // we need to convert it to authProvider interface for simple usage\n    // in the future, we will remove legacyAuthProvider\n    return {\n      isLegacy: true,\n      ...legacyAuthProvider,\n      check: legacyAuthProvider.checkAuth,\n      onError: legacyAuthProvider.checkError,\n      getIdentity: legacyAuthProvider.getUserIdentity,\n    };\n  }\n\n  return null;\n};\n","import type { Pagination } from \"../../../contexts/data/types\";\nimport { pickNotDeprecated } from \"../pickNotDeprecated\";\n\ntype HandlePaginationParamsProps = {\n  hasPagination?: boolean;\n  pagination?: Pagination;\n  configPagination?: Pagination;\n};\n\nexport const handlePaginationParams = ({\n  hasPagination,\n  pagination,\n  configPagination,\n}: HandlePaginationParamsProps = {}): Required<Pagination> => {\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const mode = pagination?.mode ?? hasPaginationString;\n\n  const current =\n    pickNotDeprecated(pagination?.current, configPagination?.current) ?? 1;\n\n  const pageSize =\n    pickNotDeprecated(pagination?.pageSize, configPagination?.pageSize) ?? 10;\n\n  return {\n    current,\n    pageSize,\n    mode,\n  };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useMediaQuery = (query: string) => {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    window.addEventListener(\"resize\", listener);\n    return () => window.removeEventListener(\"resize\", listener);\n  }, [matches, query]);\n\n  return matches;\n};\n","import type { useTranslate } from \"@hooks/i18n\";\n\nexport const safeTranslate = (\n  translate: ReturnType<typeof useTranslate>,\n  key: string,\n  defaultMessage?: string,\n  options?: any,\n) => {\n  const translated = options\n    ? translate(key, options, defaultMessage)\n    : translate(key, defaultMessage);\n\n  const fallback = defaultMessage ?? key;\n\n  if (translated === key || typeof translated === \"undefined\") {\n    return fallback;\n  }\n\n  return translated;\n};\n","import type { useTranslate } from \"@hooks/i18n\";\n\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { safeTranslate } from \"../safe-translate\";\nimport { userFriendlyResourceName } from \"../userFriendlyResourceName\";\n\n/**\n * Generates document title for the given resource and action.\n */\nexport function generateDefaultDocumentTitle(\n  translate: ReturnType<typeof useTranslate>,\n  resource?: IResourceItem,\n  action?: string,\n  id?: string,\n  resourceName?: string,\n) {\n  const actionPrefixMatcher = {\n    create: \"Create new \",\n    clone: `#${id ?? \"\"} Clone `,\n    edit: `#${id ?? \"\"} Edit `,\n    show: `#${id ?? \"\"} Show `,\n    list: \"\",\n  };\n\n  const identifier = resource?.identifier ?? resource?.name;\n\n  const resourceNameFallback =\n    resource?.label ??\n    resource?.meta?.label ??\n    userFriendlyResourceName(\n      identifier,\n      action === \"list\" ? \"plural\" : \"singular\",\n    );\n\n  const resourceNameWithFallback = resourceName ?? resourceNameFallback;\n\n  const defaultTitle = safeTranslate(\n    translate,\n    \"documentTitle.default\",\n    \"Refine\",\n  );\n  const suffix = safeTranslate(translate, \"documentTitle.suffix\", \" | Refine\");\n  let autoGeneratedTitle = defaultTitle;\n\n  if (action && identifier) {\n    autoGeneratedTitle = safeTranslate(\n      translate,\n      `documentTitle.${identifier}.${action}`,\n      `${\n        actionPrefixMatcher[action as keyof typeof actionPrefixMatcher] ?? \"\"\n      }${resourceNameWithFallback}${suffix}`,\n      { id },\n    );\n  }\n\n  return autoGeneratedTitle;\n}\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport type { IRefineContextOptions } from \"../../contexts/refine/types\";\nimport type { MutationMode } from \"../../contexts/data/types\";\n\ntype UseMutationModeType = (\n  preferredMutationMode?: MutationMode,\n  preferredUndoableTimeout?: number,\n) => {\n  mutationMode: IRefineContextOptions[\"mutationMode\"];\n  undoableTimeout: IRefineContextOptions[\"undoableTimeout\"];\n};\n\n/**\n * Mutation mode determines which mode the mutation runs with.\n * Mutations can run under three different modes: `pessimistic`, `optimistic` and `undoable`.\n * Each mode corresponds to a different type of user experience.\n *\n * @see {@link https://refine.dev/docs/guides-and-concepts/mutation-mode} for more details.\n */\nexport const useMutationMode: UseMutationModeType = (\n  preferredMutationMode?: MutationMode,\n  preferredUndoableTimeout?: number,\n) => {\n  const { mutationMode, undoableTimeout } = useContext(RefineContext);\n\n  return {\n    mutationMode: preferredMutationMode ?? mutationMode,\n    undoableTimeout: preferredUndoableTimeout ?? undoableTimeout,\n  };\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport { UnsavedWarnContext } from \"@contexts/unsavedWarn\";\nimport type { IRefineContextOptions } from \"../../../contexts/refine/types\";\nimport type { IUnsavedWarnContext } from \"../../../contexts/unsavedWarn/types\";\n\ntype UseWarnAboutChangeType = () => {\n  warnWhenUnsavedChanges: IRefineContextOptions[\"warnWhenUnsavedChanges\"];\n  warnWhen: NonNullable<IUnsavedWarnContext[\"warnWhen\"]>;\n  setWarnWhen: NonNullable<IUnsavedWarnContext[\"setWarnWhen\"]>;\n};\n\n/**\n * When you have unsaved changes and try to leave the current page, **refine** shows a confirmation modal box.\n * To activate this feature, set the `warnWhenUnsavedChanges` to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config#warnwhenunsavedchanges} for more details.\n */\nexport const useWarnAboutChange: UseWarnAboutChangeType = () => {\n  const { warnWhenUnsavedChanges } = useContext(RefineContext);\n\n  const { warnWhen, setWarnWhen } = useContext(UnsavedWarnContext);\n\n  return {\n    warnWhenUnsavedChanges,\n    warnWhen: Boolean(warnWhen),\n    setWarnWhen: setWarnWhen ?? (() => undefined),\n  };\n};\n","import React, { useState, type PropsWithChildren } from \"react\";\n\nimport type { IUnsavedWarnContext } from \"./types\";\n\nexport const UnsavedWarnContext = React.createContext<IUnsavedWarnContext>({});\n\nexport const UnsavedWarnContextProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const [warnWhen, setWarnWhen] = useState(false);\n\n  return (\n    <UnsavedWarnContext.Provider value={{ warnWhen, setWarnWhen }}>\n      {children}\n    </UnsavedWarnContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\nimport type { IRefineContextOptions } from \"../../contexts/refine/types\";\n\ntype UseSyncWithLocationType = () => {\n  syncWithLocation: IRefineContextOptions[\"syncWithLocation\"];\n};\n\n/**\n * List query parameter values can be edited manually by typing directly in the URL.\n * To activate this feature `syncWithLocation` needs to be set to `true`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#syncwithlocation} for more details.\n */\nexport const useSyncWithLocation: UseSyncWithLocationType = () => {\n  const { syncWithLocation } = useContext(RefineContext);\n\n  return { syncWithLocation };\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nimport type { TitleProps } from \"../../contexts/refine/types\";\n\n/**\n * `useTitle` returns a component that calls the `<Title>` passed to the `<Refine>`.\n * In this way, it becomes easier for us to access this component in various parts of the application.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/refine/useTitle} for more details.\n */\nexport const useTitle: () => React.FC<TitleProps> | undefined = () => {\n  const { Title } = useContext(RefineContext);\n\n  return Title;\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nexport const useRefineContext = () => {\n  const {\n    Footer,\n    Header,\n    Layout,\n    OffLayoutArea,\n    Sider,\n    Title,\n    hasDashboard,\n    mutationMode,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n    DashboardPage,\n    LoginPage,\n    catchAll,\n    options,\n    __initialized,\n  } = useContext(RefineContext);\n\n  return {\n    __initialized,\n    Footer,\n    Header,\n    Layout,\n    OffLayoutArea,\n    Sider,\n    Title,\n    hasDashboard,\n    mutationMode,\n    syncWithLocation,\n    undoableTimeout,\n    warnWhenUnsavedChanges,\n    DashboardPage,\n    LoginPage,\n    catchAll,\n    options,\n  };\n};\n","import { useRefineContext } from \"@hooks/refine\";\n\n/**\n * A method that the internal uses\n * @internal\n */\nexport const useUserFriendlyName = () => {\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n\n  const getFriendlyName = (name = \"\", type: \"singular\" | \"plural\"): string => {\n    const humanizeName = textTransformers.humanize(name);\n    if (type === \"singular\") {\n      return textTransformers.singular(humanizeName);\n    }\n    return textTransformers.plural(humanizeName);\n  };\n\n  return getFriendlyName;\n};\n","const isNested = (obj: any) => typeof obj === \"object\" && obj !== null;\nconst isArray = (obj: any) => Array.isArray(obj);\n\nexport const flattenObjectKeys = (obj: any, prefix = \"\") => {\n  if (!isNested(obj)) {\n    return {\n      [prefix]: obj,\n    };\n  }\n\n  return Object.keys(obj).reduce(\n    (acc, key) => {\n      const currentPrefix = prefix.length ? `${prefix}.` : \"\";\n\n      if (isNested(obj[key]) && Object.keys(obj[key]).length) {\n        if (isArray(obj[key]) && obj[key].length) {\n          obj[key].forEach((item: unknown[], index: number) => {\n            Object.assign(\n              acc,\n              flattenObjectKeys(item, `${currentPrefix + key}.${index}`),\n            );\n          });\n        } else {\n          Object.assign(acc, flattenObjectKeys(obj[key], currentPrefix + key));\n        }\n        // Even if it's a nested object, it should be treated as a key as well\n        acc[currentPrefix + key] = obj[key];\n      } else {\n        acc[currentPrefix + key] = obj[key];\n      }\n      return acc;\n    },\n    {} as Record<string, unknown>,\n  );\n};\n","export const propertyPathToArray = (propertyPath: string) => {\n  return propertyPath\n    .split(\".\")\n    .map((item) => (!Number.isNaN(Number(item)) ? Number(item) : item));\n};\n","export const downloadInBrowser = (\n  filename: string,\n  content: string,\n  type?: string,\n) => {\n  if (typeof window === \"undefined\") {\n    return;\n  }\n\n  const blob = new Blob([content], { type });\n\n  const link = document.createElement(\"a\");\n  link.setAttribute(\"visibility\", \"hidden\");\n  link.download = filename;\n  const blobUrl = URL.createObjectURL(blob);\n  link.href = blobUrl;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  // As per documentation, call URL.revokeObjectURL to remove the blob from memory.\n  setTimeout(() => {\n    URL.revokeObjectURL(blobUrl);\n  });\n};\n","/**\n * Delays the execution of a callback function asynchronously.\n * This utility function is used to defer the execution of the provided\n * callback, allowing the current call stack to clear before the callback\n * is invoked. It is particularly useful for ensuring non-blocking behavior\n * and providing a clear intent when a 0 ms timeout is used.\n */\nexport const deferExecution = (fn: Function) => {\n  setTimeout(fn, 0);\n};\n","import debounce from \"lodash-es/debounce.js\";\n\ntype Callbacks<T extends (...args: any) => any> = {\n  resolve?: (value: Awaited<ReturnType<T>>) => void;\n  reject?: (reason?: any) => void;\n};\n\ntype DebouncedFunction<T extends (...args: any) => any> = {\n  (...args: Parameters<T>): Promise<Awaited<ReturnType<T>>>;\n  flush: () => void;\n  cancel: () => void;\n};\n\n/**\n * Debounces sync and async functions with given wait time. The debounced function returns a promise which can be awaited or catched.\n * Only the last call of the debounced function will resolve or reject.\n * Previous calls will be rejected with the given cancelReason.\n *\n * The original debounce function doesn't work well with async functions,\n * It won't return a promise to resolve/reject and therefore it's not possible to await the result.\n * This will always return a promise to handle and await the result.\n * Previous calls will be rejected immediately after a new call made.\n */\nexport const asyncDebounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait = 1000,\n  cancelReason?: string,\n): DebouncedFunction<T> => {\n  let callbacks: Array<Callbacks<T>> = [];\n\n  const cancelPrevious = () => {\n    callbacks.forEach((cb) => cb.reject?.(cancelReason));\n    callbacks = [];\n  };\n\n  const debouncedFunc = debounce((...args: Parameters<T>) => {\n    const { resolve, reject } = callbacks.pop() || {};\n    Promise.resolve(func(...args))\n      .then(resolve)\n      .catch(reject);\n  }, wait);\n\n  const runner = (...args: Parameters<T>) => {\n    return new Promise<Awaited<ReturnType<T>>>((resolve, reject) => {\n      cancelPrevious();\n\n      callbacks.push({\n        resolve,\n        reject,\n      });\n\n      debouncedFunc(...args);\n    });\n  };\n\n  runner.flush = () => debouncedFunc.flush();\n  runner.cancel = () => {\n    debouncedFunc.cancel();\n    cancelPrevious();\n  };\n\n  return runner;\n};\n","import type { QueryFunctionContext, QueryKey } from \"@tanstack/react-query\";\n\nexport const prepareQueryContext = (\n  context: QueryFunctionContext<QueryKey, any>,\n): Omit<QueryFunctionContext<QueryKey, any>, \"meta\"> => {\n  const queryContext = {\n    queryKey: context.queryKey,\n    pageParam: context.pageParam,\n  };\n\n  Object.defineProperty(queryContext, \"signal\", {\n    enumerable: true,\n    get: () => {\n      return context.signal;\n    },\n  });\n\n  return queryContext;\n};\n","export const file2Base64 = (file: any): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    const resultHandler = () => {\n      if (reader.result) {\n        reader.removeEventListener(\"load\", resultHandler, false);\n\n        resolve(reader.result as string);\n      }\n    };\n\n    reader.addEventListener(\"load\", resultHandler, false);\n\n    reader.readAsDataURL(file.originFileObj as Blob);\n    reader.onerror = (error) => {\n      reader.removeEventListener(\"load\", resultHandler, false);\n      return reject(error);\n    };\n  });\n};\n","import { useRefineContext } from \"..\";\nimport { keys } from \"@definitions/index\";\n\nexport const useKeys = () => {\n  const {\n    options: { useNewQueryKeys },\n  } = useRefineContext();\n\n  return {\n    keys,\n    preferLegacyKeys: !useNewQueryKeys,\n  };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseQueryOptions,\n  type UseQueryResult,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { IdentityResponse } from \"../../../contexts/auth/types\";\n\nexport type UseGetIdentityLegacyProps<TData> = {\n  v3LegacyAuthProviderCompatible: true;\n  queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityProps<TData = IdentityResponse> = {\n  v3LegacyAuthProviderCompatible?: false;\n  queryOptions?: UseQueryOptions<TData>;\n};\n\nexport type UseGetIdentityCombinedProps<TData = any> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  queryOptions?: UseQueryOptions<TData> | UseQueryOptions<IdentityResponse>;\n};\n\nexport type UseGetIdentityLegacyReturnType<TData> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UseGetIdentityReturnType<TData = IdentityResponse> = UseQueryResult<\n  TData,\n  unknown\n>;\n\nexport type UsePermissionsCombinedReturnType<TData = any> =\n  | UseQueryResult<TData, unknown>\n  | UseQueryResult<IdentityResponse, unknown>;\n\nexport function useGetIdentity<TData = any>(\n  props: UseGetIdentityLegacyProps<TData>,\n): UseGetIdentityLegacyReturnType<TData>;\n\nexport function useGetIdentity<TData = IdentityResponse>(\n  props?: UseGetIdentityProps<TData>,\n): UseGetIdentityReturnType<TData>;\n\nexport function useGetIdentity<TData = any>(\n  props?: UseGetIdentityCombinedProps<TData>,\n): UsePermissionsCombinedReturnType<TData>;\n\n/**\n * `useGetIdentity` calls the `getUserIdentity` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useGetIdentity} for more details.\n *\n * @typeParam TData - Result data of the query\n *\n */\nexport function useGetIdentity<TData = any>({\n  v3LegacyAuthProviderCompatible = false,\n  queryOptions,\n}: UseGetIdentityProps<TData> | UseGetIdentityLegacyProps<TData> = {}):\n  | UseGetIdentityReturnType<TData>\n  | UseGetIdentityLegacyReturnType<TData> {\n  const { getUserIdentity: legacyGetUserIdentity } = useLegacyAuthContext();\n  const { getIdentity } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TData>({\n    queryKey: keys().auth().action(\"identity\").get(preferLegacyKeys),\n    // Enabled check for `getIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn:\n      (getIdentity as (params?: unknown) => Promise<TData>) ??\n      (() => Promise.resolve({})),\n    enabled: !v3LegacyAuthProviderCompatible && !!getIdentity,\n    retry: false,\n    ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : queryOptions?.meta),\n      ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery<TData>({\n    queryKey: [\n      ...keys().auth().action(\"identity\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    // Enabled check for `getUserIdentity` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: legacyGetUserIdentity ?? (() => Promise.resolve({})),\n    enabled: v3LegacyAuthProviderCompatible && !!legacyGetUserIdentity,\n    retry: false,\n    ...(v3LegacyAuthProviderCompatible ? queryOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? queryOptions?.meta : {}),\n      ...getXRay(\"useGetIdentity\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useRouterType,\n} from \"@hooks\";\n\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TLogoutData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\n\ntype Variables = {\n  redirectPath?: string | false;\n};\n\nexport type UseLogoutLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TLogoutData,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseLogoutProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLogoutCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TLogoutData,\n      Error | RefineError,\n      (TVariables & Variables) | void,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLogoutLegacyReturnType<TVariables> = UseMutationResult<\n  TLogoutData,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport type UseLogoutReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport type UseLogoutCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLogoutData,\n  Error | RefineError,\n  (TVariables & Variables) | void,\n  unknown\n>;\n\nexport function useLogout<TVariables = {}>(\n  props: UseLogoutLegacyProps<TVariables>,\n): UseLogoutLegacyReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n  props?: UseLogoutProps<TVariables>,\n): UseLogoutReturnType<TVariables>;\n\nexport function useLogout<TVariables = {}>(\n  props?: UseLogoutCombinedProps<TVariables>,\n): UseLogoutCombinedReturnType<TVariables>;\n\n/**\n * `useLogout` calls the `logout` method from the {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogout} for more details.\n *\n */\nexport function useLogout<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseLogoutProps<TVariables> | UseLogoutLegacyProps<TVariables> = {}):\n  | UseLogoutLegacyReturnType<TVariables>\n  | UseLogoutReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n  const go = useGo();\n  const { push } = useNavigation();\n  const { open, close } = useNotification();\n  const { logout: legacyLogoutFromContext } = useLegacyAuthContext();\n  const { logout: logoutFromContext } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"logout\").get(preferLegacyKeys),\n    mutationFn: logoutFromContext,\n    onSuccess: async (data, variables) => {\n      const { success, error, redirectTo, successNotification } = data;\n      const { redirectPath } = variables ?? {};\n\n      const redirect = redirectPath ?? redirectTo;\n\n      if (success) {\n        close?.(\"useLogout-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirect !== false) {\n        if (routerType === \"legacy\") {\n          push(redirect ?? \"/login\");\n        } else {\n          if (redirect) {\n            go({ to: redirect });\n          }\n        }\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useLogout\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TLogoutData,\n    Error | RefineError,\n    (TVariables & Variables) | void,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"logout\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyLogoutFromContext,\n    onSuccess: async (data, variables) => {\n      const redirectPath = variables?.redirectPath ?? data;\n\n      if (redirectPath === false) {\n        return;\n      }\n\n      if (redirectPath) {\n        if (routerType === \"legacy\") {\n          push(redirectPath);\n        } else {\n          go({ to: redirectPath });\n        }\n        return;\n      }\n\n      if (routerType === \"legacy\") {\n        push(\"/login\");\n      } else {\n        go({ to: \"/login\" });\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useLogout\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    key: \"useLogout-error\",\n    type: \"error\",\n    message: error?.name || \"Logout Error\",\n    description: error?.message || \"Something went wrong during logout\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"logout-success\",\n    type: \"success\",\n  };\n};\n","import { useKeys } from \"@hooks/useKeys\";\nimport { useQueryClient } from \"@tanstack/react-query\";\n\nexport const useInvalidateAuthStore = () => {\n  const queryClient = useQueryClient();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const invalidate = async () => {\n    await Promise.all(\n      ([\"check\", \"identity\", \"permissions\"] as const).map((action) =>\n        queryClient.invalidateQueries(\n          keys().auth().action(action).get(preferLegacyKeys),\n        ),\n      ),\n    );\n  };\n\n  return invalidate;\n};\n","import React from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\nimport qs from \"qs\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useParsed,\n  useRouterContext,\n  useRouterType,\n} from \"@hooks\";\n\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TLoginData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\n\nexport type UseLoginLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<TLoginData, Error | RefineError, TVariables, unknown>,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseLoginProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLoginCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TLoginData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseLoginLegacyReturnType<TVariables> = UseMutationResult<\n  TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseLoginReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseLoginCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useLogin<TVariables = {}>(\n  props: UseLoginLegacyProps<TVariables>,\n): UseLoginLegacyReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n  props?: UseLoginProps<TVariables>,\n): UseLoginReturnType<TVariables>;\n\nexport function useLogin<TVariables = {}>(\n  props?: UseLoginCombinedProps<TVariables>,\n): UseLoginCombinedReturnType<TVariables>;\n\n/**\n * `useLogin` calls `login` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useLogin} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useLogin<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseLoginProps<TVariables> | UseLoginLegacyProps<TVariables> = {}):\n  | UseLoginLegacyReturnType<TVariables>\n  | UseLoginReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n\n  const go = useGo();\n  const { replace } = useNavigation();\n\n  const parsed = useParsed();\n\n  const { useLocation } = useRouterContext();\n  const { search } = useLocation();\n\n  const { close, open } = useNotification();\n  const { login: legacyLoginFromContext } = useLegacyAuthContext();\n  const { login: loginFromContext } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const to = React.useMemo(() => {\n    if (routerType === \"legacy\") {\n      const legacySearch = qs.parse(search, {\n        ignoreQueryPrefix: true,\n      });\n      return legacySearch.to;\n    }\n    return parsed.params?.to;\n  }, [routerType, parsed.params, search]);\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"login\").get(preferLegacyKeys),\n    mutationFn: loginFromContext,\n    onSuccess: async ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"login-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (to && success) {\n        if (routerType === \"legacy\") {\n          replace(to as string);\n        } else {\n          go({ to: to as string, type: \"replace\" });\n        }\n      } else if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      } else {\n        if (routerType === \"legacy\") {\n          replace(\"/\");\n        }\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useLogin\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TLoginData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"login\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyLoginFromContext,\n    onSuccess: async (redirectPathFromAuth) => {\n      if (to) {\n        replace(to as string);\n      }\n\n      if (redirectPathFromAuth !== false && !to) {\n        if (typeof redirectPathFromAuth === \"string\") {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        } else {\n          if (routerType === \"legacy\") {\n            replace(\"/\");\n          } else {\n            go({ to: \"/\", type: \"replace\" });\n          }\n        }\n      }\n\n      await invalidateAuthStore();\n\n      close?.(\"login-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useLogin\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Login Error\",\n    description: error?.message || \"Invalid credentials\",\n    key: \"login-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"login-success\",\n    type: \"success\",\n  };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useRouterType,\n} from \"@hooks\";\n\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TLoginData,\n  TRegisterData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\nimport { useInvalidateAuthStore } from \"../useInvalidateAuthStore\";\n\nexport type UseRegisterLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<TRegisterData, Error | RefineError, TVariables, unknown>,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseRegisterProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseRegisterCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TRegisterData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseRegisterLegacyReturnType<TVariables> = UseMutationResult<\n  TRegisterData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseRegisterReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseRegisterCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TLoginData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useRegister<TVariables = {}>(\n  props: UseRegisterLegacyProps<TVariables>,\n): UseRegisterLegacyReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n  props?: UseRegisterProps<TVariables>,\n): UseRegisterReturnType<TVariables>;\n\nexport function useRegister<TVariables = {}>(\n  props?: UseRegisterCombinedProps<TVariables>,\n): UseRegisterCombinedReturnType<TVariables>;\n\n/**\n * `useRegister` calls `register` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useRegister} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useRegister<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}: UseRegisterProps<TVariables> | UseRegisterLegacyProps<TVariables> = {}):\n  | UseRegisterReturnType<TVariables>\n  | UseRegisterLegacyReturnType<TVariables> {\n  const invalidateAuthStore = useInvalidateAuthStore();\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n  const { register: legacyRegisterFromContext } = useLegacyAuthContext();\n  const { register: registerFromContext } = useAuthBindingsContext();\n  const { close, open } = useNotification();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"register\").get(preferLegacyKeys),\n    mutationFn: registerFromContext,\n    onSuccess: async ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"register-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      } else {\n        if (routerType === \"legacy\") {\n          replace(\"/\");\n        }\n      }\n\n      await invalidateAuthStore();\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useRegister\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TRegisterData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"register\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyRegisterFromContext,\n    onSuccess: async (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        } else {\n          if (routerType === \"legacy\") {\n            replace(\"/\");\n          } else {\n            go({ to: \"/\", type: \"replace\" });\n          }\n        }\n\n        await invalidateAuthStore();\n\n        close?.(\"register-error\");\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useRegister\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Register Error\",\n    description: error?.message || \"Error while registering\",\n    key: \"register-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"register-success\",\n    type: \"success\",\n  };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useRouterType,\n} from \"@hooks\";\n\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TForgotPasswordData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\n\nexport type UseForgotPasswordLegacyProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TForgotPasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseForgotPasswordProps<TVariables> = {\n  v3LegacyAuthProviderCompatible?: false;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseForgotPasswordCombinedProps<TVariables> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TForgotPasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseForgotPasswordLegacyReturnType<TVariables> = UseMutationResult<\n  TForgotPasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseForgotPasswordReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseForgotPasswordCombinedReturnType<TVariables> = UseMutationResult<\n  AuthActionResponse | TForgotPasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props: UseForgotPasswordLegacyProps<TVariables>,\n): UseForgotPasswordLegacyReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props?: UseForgotPasswordProps<TVariables>,\n): UseForgotPasswordReturnType<TVariables>;\n\nexport function useForgotPassword<TVariables = {}>(\n  props?: UseForgotPasswordCombinedProps<TVariables>,\n): UseForgotPasswordCombinedReturnType<TVariables>;\n\n/**\n * `useForgotPassword` calls `forgotPassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useForgotPassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useForgotPassword<TVariables = {}>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}:\n  | UseForgotPasswordProps<TVariables>\n  | UseForgotPasswordLegacyProps<TVariables> = {}):\n  | UseForgotPasswordReturnType<TVariables>\n  | UseForgotPasswordLegacyReturnType<TVariables> {\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n  const {\n    forgotPassword: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n  } = useLegacyAuthContext();\n  const { forgotPassword: forgotPasswordFromContext } =\n    useAuthBindingsContext();\n  const { close, open } = useNotification();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    AuthActionResponse,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n    mutationFn: forgotPasswordFromContext,\n    onSuccess: ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"forgot-password-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TForgotPasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"forgotPassword\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: v3LegacyAuthProviderCompatibleForgotPasswordFromContext,\n    onSuccess: (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        }\n      }\n      close?.(\"forgot-password-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useForgotPassword\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Forgot Password Error\",\n    description: error?.message || \"Error while resetting password\",\n    key: \"forgot-password-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"forgot-password-success\",\n    type: \"success\",\n  };\n};\n","import React from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\nimport qs from \"qs\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport {\n  useGo,\n  useKeys,\n  useNavigation,\n  useNotification,\n  useParsed,\n  useRouterContext,\n  useRouterType,\n} from \"@hooks\";\n\nimport type { UpdatePasswordFormTypes } from \"../../../components/pages/auth/types\";\nimport type {\n  AuthActionResponse,\n  SuccessNotificationResponse,\n  TUpdatePasswordData,\n} from \"../../../contexts/auth/types\";\nimport type { RefineError } from \"../../../contexts/data/types\";\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\n\nexport type UseUpdatePasswordLegacyProps<\n  TVariables extends UpdatePasswordFormTypes,\n> = {\n  v3LegacyAuthProviderCompatible: true;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      TUpdatePasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n};\n\nexport type UseUpdatePasswordProps<TVariables extends UpdatePasswordFormTypes> =\n  {\n    v3LegacyAuthProviderCompatible?: false;\n    mutationOptions?: Omit<\n      UseMutationOptions<\n        AuthActionResponse,\n        Error | RefineError,\n        TVariables,\n        unknown\n      >,\n      \"mutationFn\"\n    >;\n  };\n\nexport type UseUpdatePasswordCombinedProps<\n  TVariables extends UpdatePasswordFormTypes,\n> = {\n  v3LegacyAuthProviderCompatible: boolean;\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      AuthActionResponse | TUpdatePasswordData,\n      Error | RefineError,\n      TVariables,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n};\n\nexport type UseUpdatePasswordLegacyReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  TUpdatePasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseUpdatePasswordReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  AuthActionResponse,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport type UseUpdatePasswordCombinedReturnType<\n  TVariables extends UpdatePasswordFormTypes,\n> = UseMutationResult<\n  AuthActionResponse | TUpdatePasswordData,\n  Error | RefineError,\n  TVariables,\n  unknown\n>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props: UseUpdatePasswordLegacyProps<TVariables>,\n): UseUpdatePasswordLegacyReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props?: UseUpdatePasswordProps<TVariables>,\n): UseUpdatePasswordReturnType<TVariables>;\n\nexport function useUpdatePassword<TVariables extends UpdatePasswordFormTypes>(\n  props?: UseUpdatePasswordCombinedProps<TVariables>,\n): UseUpdatePasswordCombinedReturnType<TVariables>;\n\n/**\n * `useUpdatePassword` calls `updatePassword` method from {@link https://refine.dev/docs/api-reference/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useUpdatePassword} for more details.\n *\n * @typeParam TData - Result data of the query\n * @typeParam TVariables - Values for mutation function. default `{}`\n *\n */\nexport function useUpdatePassword<\n  TVariables extends UpdatePasswordFormTypes = {},\n>({\n  v3LegacyAuthProviderCompatible,\n  mutationOptions,\n}:\n  | UseUpdatePasswordProps<TVariables>\n  | UseUpdatePasswordLegacyProps<TVariables> = {}):\n  | UseUpdatePasswordReturnType<TVariables>\n  | UseUpdatePasswordLegacyReturnType<TVariables> {\n  const routerType = useRouterType();\n\n  const go = useGo();\n  const { replace } = useNavigation();\n  const { updatePassword: legacyUpdatePasswordFromContext } =\n    useLegacyAuthContext();\n  const { updatePassword: updatePasswordFromContext } =\n    useAuthBindingsContext();\n  const { close, open } = useNotification();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const parsed = useParsed();\n  const { useLocation } = useRouterContext();\n  const { search } = useLocation();\n\n  const params = React.useMemo(() => {\n    if (routerType === \"legacy\") {\n      const queryStrings = qs.parse(search, {\n        ignoreQueryPrefix: true,\n      });\n      return queryStrings ?? {};\n    }\n    return parsed.params ?? {};\n  }, [search, parsed, routerType]);\n\n  const mutation = useMutation<AuthActionResponse, Error, TVariables, unknown>({\n    mutationKey: keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n    mutationFn: async (variables) => {\n      return updatePasswordFromContext?.({\n        ...params,\n        ...variables,\n      }) as Promise<AuthActionResponse>;\n    },\n    onSuccess: ({ success, redirectTo, error, successNotification }) => {\n      if (success) {\n        close?.(\"update-password-error\");\n\n        if (successNotification) {\n          open?.(buildSuccessNotification(successNotification));\n        }\n      }\n\n      if (error || !success) {\n        open?.(buildNotification(error));\n      }\n\n      if (redirectTo) {\n        if (routerType === \"legacy\") {\n          replace(redirectTo);\n        } else {\n          go({ to: redirectTo, type: \"replace\" });\n        }\n      }\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible === true ? {} : mutationOptions?.meta),\n      ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation<\n    TUpdatePasswordData,\n    Error | RefineError,\n    TVariables,\n    unknown\n  >({\n    mutationKey: [\n      ...keys().auth().action(\"updatePassword\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: async (variables) => {\n      return legacyUpdatePasswordFromContext?.({\n        ...params,\n        ...variables,\n      });\n    },\n    onSuccess: (redirectPathFromAuth) => {\n      if (redirectPathFromAuth !== false) {\n        if (redirectPathFromAuth) {\n          if (routerType === \"legacy\") {\n            replace(redirectPathFromAuth);\n          } else {\n            go({ to: redirectPathFromAuth, type: \"replace\" });\n          }\n        }\n      }\n      close?.(\"update-password-error\");\n    },\n    onError: (error: any) => {\n      open?.(buildNotification(error));\n    },\n    ...(v3LegacyAuthProviderCompatible ? mutationOptions : {}),\n    meta: {\n      ...(v3LegacyAuthProviderCompatible ? mutationOptions?.meta : {}),\n      ...getXRay(\"useUpdatePassword\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\nconst buildNotification = (\n  error?: Error | RefineError,\n): OpenNotificationParams => {\n  return {\n    message: error?.name || \"Update Password Error\",\n    description: error?.message || \"Error while updating password\",\n    key: \"update-password-error\",\n    type: \"error\",\n  };\n};\n\nconst buildSuccessNotification = (\n  successNotification: SuccessNotificationResponse,\n): OpenNotificationParams => {\n  return {\n    message: successNotification.message,\n    description: successNotification.description,\n    key: \"update-password-success\",\n    type: \"success\",\n  };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport { type UseQueryResult, useQuery } from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { CheckResponse } from \"../../../contexts/auth/types\";\n\nexport type UseIsAuthenticatedLegacyProps = {\n  v3LegacyAuthProviderCompatible: true;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedProps = {\n  v3LegacyAuthProviderCompatible?: false;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedCombinedProps = {\n  v3LegacyAuthProviderCompatible: boolean;\n  params?: any;\n};\n\nexport type UseIsAuthenticatedLegacyReturnType = UseQueryResult<any, any>;\n\nexport type UseIsAuthenticatedReturnType = UseQueryResult<CheckResponse, any>;\n\nexport type UseIsAuthenticatedCombinedReturnType = UseQueryResult<\n  CheckResponse | any,\n  any\n>;\n\nexport function useIsAuthenticated(\n  props: UseIsAuthenticatedLegacyProps,\n): UseIsAuthenticatedLegacyReturnType;\n\nexport function useIsAuthenticated(\n  props?: UseIsAuthenticatedProps,\n): UseIsAuthenticatedReturnType;\n\nexport function useIsAuthenticated(\n  props?: UseIsAuthenticatedCombinedProps,\n): UseIsAuthenticatedCombinedReturnType;\n\n/**\n *  `useIsAuthenticated` calls the `checkAuth` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated} for more details.\n */\nexport function useIsAuthenticated({\n  v3LegacyAuthProviderCompatible = false,\n  params,\n}: UseIsAuthenticatedProps | UseIsAuthenticatedLegacyProps = {}):\n  | UseIsAuthenticatedReturnType\n  | UseIsAuthenticatedLegacyReturnType {\n  const { checkAuth } = useLegacyAuthContext();\n  const { check } = useAuthBindingsContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery({\n    queryKey: keys()\n      .auth()\n      .action(\"check\")\n      .params(params)\n      .get(preferLegacyKeys),\n    queryFn: async () => (await check?.(params)) ?? {},\n    retry: false,\n    enabled: !v3LegacyAuthProviderCompatible,\n    meta: {\n      ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n    },\n  });\n\n  const legacyQueryResponse = useQuery({\n    queryKey: [\n      ...keys().auth().action(\"check\").params(params).get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    queryFn: async () => (await checkAuth?.(params)) ?? {},\n    retry: false,\n    enabled: v3LegacyAuthProviderCompatible,\n    meta: {\n      ...getXRay(\"useIsAuthenticated\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible ? legacyQueryResponse : queryResponse;\n}\n\n/**\n * @deprecated `useAuthenticated` is deprecated with refine@4, use `useIsAuthenticated` instead, however, we still support `useAuthenticated` for backward compatibility.\n */\nexport const useAuthenticated = useIsAuthenticated;\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport { type UseMutationResult, useMutation } from \"@tanstack/react-query\";\n\nimport { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\nimport { useGo, useLogout, useNavigation, useRouterType } from \"@hooks\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { OnErrorResponse } from \"../../../contexts/auth/types\";\n\nexport type UseOnErrorLegacyProps = {\n  v3LegacyAuthProviderCompatible: true;\n};\n\nexport type UseOnErrorProps = {\n  v3LegacyAuthProviderCompatible?: false;\n};\n\nexport type UseOnErrorCombinedProps = {\n  v3LegacyAuthProviderCompatible: boolean;\n};\n\nexport type UseOnErrorLegacyReturnType = UseMutationResult<\n  void,\n  string | undefined,\n  any,\n  unknown\n>;\n\nexport type UseOnErrorReturnType = UseMutationResult<\n  OnErrorResponse,\n  unknown,\n  unknown,\n  unknown\n>;\nexport type UseOnErrorCombinedReturnType = UseMutationResult<\n  OnErrorResponse | void,\n  unknown,\n  unknown,\n  unknown\n>;\n\nexport function useOnError(\n  props: UseOnErrorLegacyProps,\n): UseOnErrorLegacyReturnType;\n\nexport function useOnError(props?: UseOnErrorProps): UseOnErrorReturnType;\n\nexport function useOnError(\n  props?: UseOnErrorCombinedProps,\n): UseOnErrorCombinedReturnType;\n\n/**\n * `useOnError` calls the `checkError` method from the {@link https://refine.dev/docs/core/providers/auth-provider `authProvider`} under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/auth/useCheckError} for more details.\n *\n */\nexport function useOnError({\n  v3LegacyAuthProviderCompatible = false,\n}: UseOnErrorProps | UseOnErrorLegacyProps = {}):\n  | UseOnErrorReturnType\n  | UseOnErrorLegacyReturnType {\n  const routerType = useRouterType();\n  const go = useGo();\n  const { replace } = useNavigation();\n\n  const { checkError: legacyCheckErrorFromContext } = useLegacyAuthContext();\n  const { onError: onErrorFromContext } = useAuthBindingsContext();\n\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const { mutate: legacyLogout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n  });\n  const { mutate: logout } = useLogout({\n    v3LegacyAuthProviderCompatible: Boolean(v3LegacyAuthProviderCompatible),\n  });\n\n  const mutation = useMutation<OnErrorResponse, unknown, unknown, unknown>({\n    mutationKey: keys().auth().action(\"onError\").get(preferLegacyKeys),\n    ...(onErrorFromContext\n      ? {\n          mutationFn: onErrorFromContext,\n          onSuccess: ({ logout: shouldLogout, redirectTo }) => {\n            if (shouldLogout) {\n              logout({ redirectPath: redirectTo });\n              return;\n            }\n\n            if (redirectTo) {\n              if (routerType === \"legacy\") {\n                replace(redirectTo);\n              } else {\n                go({ to: redirectTo, type: \"replace\" });\n              }\n              return;\n            }\n          },\n        }\n      : {\n          mutationFn: () => ({}) as Promise<OnErrorResponse>,\n        }),\n    meta: {\n      ...getXRay(\"useOnError\", preferLegacyKeys),\n    },\n  });\n\n  const v3LegacyAuthProviderCompatibleMutation = useMutation({\n    mutationKey: [\n      ...keys().auth().action(\"onError\").get(preferLegacyKeys),\n      \"v3LegacyAuthProviderCompatible\",\n    ],\n    mutationFn: legacyCheckErrorFromContext,\n    onError: (redirectPath?: string) => {\n      legacyLogout({ redirectPath });\n    },\n    meta: {\n      ...getXRay(\"useOnError\", preferLegacyKeys),\n    },\n  });\n\n  return v3LegacyAuthProviderCompatible\n    ? v3LegacyAuthProviderCompatibleMutation\n    : mutation;\n}\n\n/**\n * @deprecated `useCheckError` is deprecated with refine@4, use `useOnError` instead, however, we still support `useCheckError` for backward compatibility.\n */\nexport const useCheckError = useOnError;\n","import { useAuthBindingsContext, useLegacyAuthContext } from \"@contexts/auth\";\n\n/**\n * A hook that the UI uses\n * @internal\n */\nexport const useIsExistAuthentication = (): boolean => {\n  const { isProvided: legacyIsProvided } = useLegacyAuthContext();\n  const { isProvided } = useAuthBindingsContext();\n\n  return Boolean(isProvided || legacyIsProvided);\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type QueryObserverResult,\n  type UseQueryOptions,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  handlePaginationParams,\n  pickDataProvider,\n  pickNotDeprecated,\n  prepareQueryContext,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  GetListResponse,\n  HttpError,\n  MetaQuery,\n  Pagination,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport interface UseListConfig {\n  pagination?: Pagination;\n  hasPagination?: boolean;\n  sort?: CrudSort[];\n  filters?: CrudFilter[];\n}\n\nexport type BaseListProps = {\n  /**\n   * Configuration for pagination, sorting and filtering\n   * @type [`UseListConfig`](/docs/api-reference/core/hooks/data/useList/#config-parameters)\n   * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n   */\n  config?: UseListConfig;\n  /**\n   * Pagination properties\n   */\n  pagination?: Pagination;\n  /**\n   * Whether to use server-side pagination or not\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sorter parameters\n   */\n  sorters?: CrudSort[];\n  /**\n   * Filter parameters\n   */\n  filters?: CrudFilter[];\n  /**\n   * Meta data query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n   */\n  dataProviderName?: string;\n};\n\nexport type UseListProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n\n  /**\n   * Tanstack Query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n} & BaseListProps &\n  SuccessErrorNotification<\n    GetListResponse<TData>,\n    TError,\n    Prettify<BaseListProps>\n  > &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useList` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useList = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  config,\n  filters,\n  hasPagination,\n  pagination,\n  sorters,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseListProps<TQueryFnData, TError, TData> = {}): QueryObserverResult<\n  GetListResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n  const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n  const prefferedHasPagination = pickNotDeprecated(\n    hasPagination,\n    config?.hasPagination,\n  );\n  const prefferedPagination = handlePaginationParams({\n    pagination,\n    configPagination: config?.pagination,\n    hasPagination: prefferedHasPagination,\n  });\n  const isServerPagination = prefferedPagination.mode === \"server\";\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  const notificationValues = {\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    filters: prefferedFilters,\n    hasPagination: isServerPagination,\n    pagination: prefferedPagination,\n    sorters: prefferedSorters,\n    config: {\n      ...config,\n      sort: prefferedSorters,\n    },\n  };\n\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const { getList } = dataProvider(pickedDataProvider);\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      pagination: prefferedPagination,\n      hasPagination: isServerPagination,\n      sort: prefferedSorters,\n      sorters: prefferedSorters,\n      filters: prefferedFilters,\n      subscriptionType: \"useList\",\n      ...liveParams,\n    },\n    channel: `resources/${resource?.name}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier ?? \"\")\n      .action(\"list\")\n      .params({\n        ...(preferredMeta || {}),\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        ...(isServerPagination && {\n          pagination: prefferedPagination,\n        }),\n        ...(sorters && {\n          sorters,\n        }),\n        ...(config?.sort && {\n          sort: config?.sort,\n        }),\n      })\n      .get(preferLegacyKeys),\n    queryFn: (context) => {\n      const meta = {\n        ...combinedMeta,\n        queryContext: prepareQueryContext(context),\n      };\n      return getList<TQueryFnData>({\n        resource: resource?.name ?? \"\",\n        pagination: prefferedPagination,\n        hasPagination: isServerPagination,\n        filters: prefferedFilters,\n        sort: prefferedSorters,\n        sorters: prefferedSorters,\n        meta,\n        metaData: meta,\n      });\n    },\n    ...queryOptions,\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : !!resource?.name,\n    select: (rawData) => {\n      let data = rawData;\n\n      const { current, mode, pageSize } = prefferedPagination;\n\n      if (mode === \"client\") {\n        data = {\n          ...data,\n          data: data.data.slice((current - 1) * pageSize, current * pageSize),\n          total: data.total,\n        };\n      }\n\n      if (queryOptions?.select) {\n        return queryOptions?.select?.(data);\n      }\n\n      return data as unknown as GetListResponse<TData>;\n    },\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, notificationValues, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, notificationValues, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${identifier}-useList-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useList\", preferLegacyKeys, resource?.name),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResponse.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { useEffect, useState } from \"react\";\nimport { useRefineContext } from \"..\";\n\nexport type UseLoadingOvertimeRefineContext = Omit<\n  UseLoadingOvertimeCoreProps,\n  \"isLoading\" | \"interval\"\n> &\n  Required<Pick<UseLoadingOvertimeCoreProps, \"interval\">>;\n\nexport type UseLoadingOvertimeOptionsProps = {\n  overtimeOptions?: UseLoadingOvertimeCoreOptions;\n};\n\nexport type UseLoadingOvertimeReturnType = {\n  overtime: {\n    elapsedTime?: number;\n  };\n};\n\ntype UseLoadingOvertimeCoreOptions = Omit<\n  UseLoadingOvertimeCoreProps,\n  \"isLoading\"\n>;\n\ntype UseLoadingOvertimeCoreReturnType = {\n  elapsedTime?: number;\n};\n\nexport type UseLoadingOvertimeCoreProps = {\n  /**\n   * The loading state. If true, the elapsed time will be calculated.\n   */\n  isLoading: boolean;\n\n  /**\n   * The interval in milliseconds. If the loading time exceeds this time, the `onInterval` callback will be called.\n   * If not specified, the `interval` value from the `overtime` option of the `RefineProvider` will be used.\n   *\n   * @default: 1000 (1 second)\n   */\n  interval?: number;\n\n  /**\n   * The callback function that will be called when the loading time exceeds the specified time.\n   * If not specified, the `onInterval` value from the `overtime` option of the `RefineProvider` will be used.\n   *\n   * @param elapsedInterval The elapsed time in milliseconds.\n   */\n  onInterval?: (elapsedInterval: number) => void;\n};\n\n/**\n * if you need to do something when the loading time exceeds the specified time, refine provides the `useLoadingOvertime` hook.\n * It returns the elapsed time in milliseconds.\n *\n * @example\n * const { elapsedTime } = useLoadingOvertime({\n *    isLoading,\n *    interval: 1000,\n *    onInterval(elapsedInterval) {\n *        console.log(\"loading overtime\", elapsedInterval);\n *    },\n * });\n */\nexport const useLoadingOvertime = ({\n  isLoading,\n  interval: intervalProp,\n  onInterval: onIntervalProp,\n}: UseLoadingOvertimeCoreProps): UseLoadingOvertimeCoreReturnType => {\n  const [elapsedTime, setElapsedTime] = useState<number | undefined>(undefined);\n  // get overtime options from refine context\n  const { options } = useRefineContext();\n  const { overtime } = options;\n\n  // pick props or refine context options\n  const interval = intervalProp ?? overtime.interval;\n  const onInterval = onIntervalProp ?? overtime?.onInterval;\n\n  useEffect(() => {\n    let intervalFn: ReturnType<typeof setInterval>;\n\n    if (isLoading) {\n      intervalFn = setInterval(() => {\n        // increase elapsed time\n        setElapsedTime((prevElapsedTime) => {\n          if (prevElapsedTime === undefined) {\n            return interval;\n          }\n\n          return prevElapsedTime + interval;\n        });\n      }, interval);\n    }\n\n    return () => {\n      clearInterval(intervalFn);\n      // reset elapsed time\n      setElapsedTime(undefined);\n    };\n  }, [isLoading, interval]);\n\n  useEffect(() => {\n    // call onInterval callback\n    if (onInterval && elapsedTime) {\n      onInterval(elapsedTime);\n    }\n  }, [elapsedTime]);\n\n  return {\n    elapsedTime,\n  };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type QueryObserverResult,\n  type UseQueryOptions,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  prepareQueryContext,\n  useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  GetOneResponse,\n  HttpError,\n  MetaQuery,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type UseOneProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * id of the item in the resource\n   * @type [`BaseKey`](/docs/api-reference/core/interfaceReferences/#basekey)\n   */\n  id?: BaseKey;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetOneResponse<TQueryFnData>,\n    TError,\n    GetOneResponse<TData>\n  >;\n  /**\n   * Metadata query for `dataProvider`,\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data query for `dataProvider`,\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default `\"default\"``\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  GetOneResponse<TData>,\n  TError,\n  Prettify<{ id?: BaseKey } & MetaQuery>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useOne` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving single items from a `resource`.\n *\n * It uses `getOne` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useOne} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useOne = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  id,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseOneProps<TQueryFnData, TError, TData>): QueryObserverResult<\n  GetOneResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n\n  const { getOne } = dataProvider(pickedDataProvider);\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    channel: `resources/${resource?.name}`,\n    params: {\n      ids: id ? [id] : [],\n      id: id,\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      subscriptionType: \"useOne\",\n      ...liveParams,\n    },\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : typeof resource?.name !== \"undefined\" && typeof id !== \"undefined\",\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetOneResponse<TQueryFnData>,\n    TError,\n    GetOneResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier ?? \"\")\n      .action(\"one\")\n      .id(id ?? \"\")\n      .params({\n        ...(preferredMeta || {}),\n      })\n      .get(preferLegacyKeys),\n    queryFn: (context) =>\n      getOne<TQueryFnData>({\n        resource: resource?.name ?? \"\",\n        id: id!,\n        meta: {\n          ...combinedMeta,\n          queryContext: prepareQueryContext(context),\n        },\n        metaData: {\n          ...combinedMeta,\n          queryContext: prepareQueryContext(context),\n        },\n      }),\n    ...queryOptions,\n    enabled:\n      typeof queryOptions?.enabled !== \"undefined\"\n        ? queryOptions?.enabled\n        : typeof id !== \"undefined\",\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(\n              data,\n              {\n                id,\n                ...combinedMeta,\n              },\n              identifier,\n            )\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(\n              err,\n              {\n                id,\n                ...combinedMeta,\n              },\n              identifier,\n            )\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-getOne-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useOne\", preferLegacyKeys, resource?.name),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResponse.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type QueryObserverResult,\n  type UseQueryOptions,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  prepareQueryContext,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  GetManyResponse,\n  HttpError,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type UseManyProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * ids of the item in the resource\n   * @type [`BaseKey[]`](/docs/api-reference/core/interfaceReferences/#basekey)\n   */\n  ids: BaseKey[];\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetManyResponse<TQueryFnData>,\n    TError,\n    GetManyResponse<TData>\n  >;\n  /**\n   * Metadata query for `dataProvider`,\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for `dataProvider`,\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<GetManyResponse<TData>, TError, BaseKey[]> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for retrieving multiple items from a `resource`.\n *\n * It uses `getMany` method as query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useMany} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useMany = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  ids,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseManyProps<TQueryFnData, TError, TData>): QueryObserverResult<\n  GetManyResponse<TData>,\n  TError\n> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const { getMany, getOne } = dataProvider(pickedDataProvider);\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      ids: ids,\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      subscriptionType: \"useMany\",\n      ...liveParams,\n    },\n    channel: `resources/${resource.name}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...meta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useQuery<\n    GetManyResponse<TQueryFnData>,\n    TError,\n    GetManyResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier)\n      .action(\"many\")\n      .ids(...ids)\n      .params({\n        ...(preferredMeta || {}),\n      })\n      .get(preferLegacyKeys),\n    queryFn: (context) => {\n      const meta = {\n        ...combinedMeta,\n        queryContext: prepareQueryContext(context),\n      };\n\n      if (getMany) {\n        return getMany({\n          resource: resource?.name,\n          ids,\n          meta,\n          metaData: meta,\n        });\n      }\n      return handleMultiple(\n        ids.map((id) =>\n          getOne<TQueryFnData>({\n            resource: resource?.name,\n            id,\n            meta,\n            metaData: meta,\n          }),\n        ),\n      );\n    },\n    ...queryOptions,\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, ids, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, ids, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids[0]}-${identifier}-getMany-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useMany\", preferLegacyKeys, resource?.name),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResponse.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type MutateOptions,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  GetListResponse,\n  GetManyResponse,\n  GetOneResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as UpdateContext,\n  PreviousQuery,\n  UpdateResponse,\n} from \"../../contexts/data/types\";\nimport type { UseMutationResult } from \"../../definitions/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport { ActionTypes } from \"../../contexts/undoableQueue/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type OptimisticUpdateMapType<TData, TVariables> = {\n  list?:\n    | ((\n        previous: GetListResponse<TData> | null | undefined,\n        values: TVariables,\n        id: BaseKey,\n      ) => GetListResponse<TData> | null)\n    | boolean;\n  many?:\n    | ((\n        previous: GetManyResponse<TData> | null | undefined,\n        values: TVariables,\n        id: BaseKey,\n      ) => GetManyResponse<TData> | null)\n    | boolean;\n  detail?:\n    | ((\n        previous: GetOneResponse<TData> | null | undefined,\n        values: TVariables,\n        id: BaseKey,\n      ) => GetOneResponse<TData> | null)\n    | boolean;\n};\n\nexport type UpdateParams<TData, TError, TVariables> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * id for mutation function\n   */\n  id?: BaseKey;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for dataProvider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * You can use it to customize the optimistic update logic.\n   * @default {\n   *   list: true,\n   *   many: true,\n   *   detail: true,\n   * }\n   */\n  optimisticUpdateMap?: OptimisticUpdateMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n  UpdateResponse<TData>,\n  TError,\n  { id: BaseKey; values: TVariables }\n>;\n\nexport type UseUpdateReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  UpdateResponse<TData>,\n  TError,\n  UpdateParams<TData, TError, TVariables>,\n  UpdateContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseUpdateProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      UpdateResponse<TData>,\n      TError,\n      UpdateParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n    \"mutationFn\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps &\n  UpdateParams<TData, TError, TVariables>;\n\n/**\n * `useUpdate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for update mutations.\n *\n * It uses `update` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdate = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  id: idFromProps,\n  resource: resourceFromProps,\n  values: valuesFromProps,\n  dataProviderName: dataProviderNameFromProps,\n  successNotification: successNotificationFromProps,\n  errorNotification: errorNotificationFromProps,\n  meta: metaFromProps,\n  metaData: metaDataFromProps,\n  mutationMode: mutationModeFromProps,\n  undoableTimeout: undoableTimeoutFromProps,\n  onCancel: onCancelFromProps,\n  optimisticUpdateMap: optimisticUpdateMapFromProps,\n  invalidates: invalidatesFromProps,\n  mutationOptions,\n  overtimeOptions,\n}: UseUpdateProps<TData, TError, TVariables> = {}): UseUpdateReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const dataProvider = useDataProvider();\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const publish = usePublish();\n  const { log } = useLog();\n  const { notificationDispatch } = useCancelNotification();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutationResult = useMutation<\n    UpdateResponse<TData>,\n    TError,\n    UpdateParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n  >({\n    mutationFn: ({\n      id = idFromProps,\n      values = valuesFromProps,\n      resource: resourceName = resourceFromProps,\n      mutationMode = mutationModeFromProps,\n      undoableTimeout = undoableTimeoutFromProps,\n      onCancel = onCancelFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      dataProviderName = dataProviderNameFromProps,\n    }) => {\n      if (!id) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return dataProvider(\n          pickDataProvider(identifier, dataProviderName, resources),\n        ).update<TData, TVariables>({\n          resource: resource.name,\n          id,\n          variables: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n      }\n      const updatePromise = new Promise<UpdateResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            dataProvider(\n              pickDataProvider(identifier, dataProviderName, resources),\n            )\n              .update<TData, TVariables>({\n                resource: resource.name,\n                id,\n                variables: values,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n              })\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: id,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      resource: resourceName = resourceFromProps,\n      id = idFromProps,\n      mutationMode = mutationModeFromProps,\n      values = valuesFromProps,\n      dataProviderName = dataProviderNameFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      optimisticUpdateMap = optimisticUpdateMapFromProps ?? {\n        list: true,\n        many: true,\n        detail: true,\n      },\n    }) => {\n      if (!id) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        if (optimisticUpdateMap.list) {\n          // Set the previous queries to the new ones:\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"list\")\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetListResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.list === \"function\") {\n                return optimisticUpdateMap.list(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (record.id?.toString() === id?.toString()) {\n                  return {\n                    id,\n                    ...record,\n                    ...values,\n                  } as unknown as TData;\n                }\n                return record;\n              });\n\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.many) {\n          queryClient.setQueriesData(\n            resourceKeys.action(\"many\").get(preferLegacyKeys),\n            (previous?: GetManyResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.many === \"function\") {\n                return optimisticUpdateMap.many(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (record.id?.toString() === id?.toString()) {\n                  record = {\n                    id,\n                    ...record,\n                    ...values,\n                  } as unknown as TData;\n                }\n                return record;\n              });\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.detail) {\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"one\")\n              .id(id)\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetOneResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.detail === \"function\") {\n                return optimisticUpdateMap.detail(previous, values, id);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              return {\n                ...previous,\n                data: {\n                  ...previous.data,\n                  ...values,\n                },\n              };\n            },\n          );\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (data, error, variables, context) => {\n      const {\n        id = idFromProps,\n        resource: resourceName = resourceFromProps,\n        dataProviderName = dataProviderNameFromProps,\n        invalidates = invalidatesFromProps ?? [\"list\", \"many\", \"detail\"],\n      } = variables;\n      if (!id) throw missingIdError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n        id,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id, resource: identifier },\n      });\n\n      mutationOptions?.onSettled?.(data, error, variables, context);\n    },\n    onSuccess: (data, variables, context) => {\n      const {\n        id = idFromProps,\n        resource: resourceName = resourceFromProps,\n        successNotification = successNotificationFromProps,\n        dataProviderName: dataProviderNameFromProp = dataProviderNameFromProps,\n        values = valuesFromProps,\n        meta = metaFromProps,\n        metaData = metaDataFromProps,\n      } = variables;\n      if (!id) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, { id, values }, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Successful\"),\n        message: translate(\n          \"notifications.editSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully updated ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"updated\",\n        payload: {\n          ids: data.data?.id ? [data.data.id] : undefined,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      let previousData: any;\n      if (context) {\n        const queryData = queryClient.getQueryData<UpdateResponse<TData>>(\n          context.queryKey.detail(id),\n        );\n\n        previousData = Object.keys(values || {}).reduce<any>((acc, item) => {\n          acc[item] = queryData?.data?.[item];\n          return acc;\n        }, {});\n      }\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"update\",\n        resource: resource.name,\n        data: values,\n        previousData,\n        meta: {\n          id,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      mutationOptions?.onSuccess?.(data, variables, context);\n    },\n    onError: (err: TError, variables, context) => {\n      const {\n        id = idFromProps,\n        resource: resourceName = resourceFromProps,\n        errorNotification = errorNotificationFromProps,\n        values = valuesFromProps,\n      } = variables;\n      if (!id) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError?.(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, { id, values }, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${id}-${identifier}-notification`,\n          message: translate(\n            \"notifications.editError\",\n            {\n              resource: translate(\n                `${identifier}.${identifier}`,\n                resourceSingular,\n              ),\n              statusCode: err.statusCode,\n            },\n            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n\n      mutationOptions?.onError?.(err, variables, context);\n    },\n    mutationKey: keys().data().mutation(\"update\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useUpdate\", preferLegacyKeys),\n    },\n  });\n  const { mutate, mutateAsync, ...mutation } = mutationResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutation = (\n    variables?: UpdateParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      UpdateResponse<TData>,\n      TError,\n      UpdateParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n  ) => {\n    return mutate(variables || {}, options);\n  };\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutateAsync = (\n    variables?: UpdateParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      UpdateResponse<TData>,\n      TError,\n      UpdateParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n  ) => {\n    return mutateAsync(variables || {}, options);\n  };\n\n  return {\n    ...mutation,\n    mutate: handleMutation,\n    mutateAsync: handleMutateAsync,\n    overtime: { elapsedTime },\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useUpdate]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingIdError = new Error(\n  \"[useUpdate]: `id` is not defined but is required in edit and clone actions\",\n);\n\nconst missingValuesError = new Error(\n  \"[useUpdate]: `values` is not provided but is required\",\n);\n","import type { BaseKey } from \"../data/types\";\n\nexport enum ActionTypes {\n  ADD = \"ADD\",\n  REMOVE = \"REMOVE\",\n  DECREASE_NOTIFICATION_SECOND = \"DECREASE_NOTIFICATION_SECOND\",\n}\n\nexport interface IUndoableQueue {\n  id: BaseKey;\n  resource: string;\n  cancelMutation: () => void;\n  doMutation: () => void;\n  seconds: number;\n  isRunning: boolean;\n  isSilent: boolean;\n}\n\nexport interface IUndoableQueueContext {\n  notifications: IUndoableQueue[];\n  notificationDispatch: React.Dispatch<any>;\n}\n","import {\n  pickDataProvider,\n  pickNotDeprecated,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type MutateOptions,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CreateResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { UseMutationResult } from \"../../definitions/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type UseCreateParams<TData, TError, TVariables> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n  /**\n   * Meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n  /**\n   * You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateResponse<TData>, TError, TVariables>;\n\nexport type UseCreateReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateResponse<TData>,\n  TError,\n  UseCreateParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCreateProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateResponse<TData>,\n      TError,\n      UseCreateParams<TData, TError, TVariables>,\n      unknown\n    >,\n    \"mutationFn\"\n  >;\n} & UseLoadingOvertimeOptionsProps &\n  UseCreateParams<TData, TError, TVariables>;\n\n/**\n * `useCreate` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses `create` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreate} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCreate = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  resource: resourceFromProps,\n  values: valuesFromProps,\n  dataProviderName: dataProviderNameFromProps,\n  successNotification: successNotificationFromProps,\n  errorNotification: errorNotificationFromProps,\n  invalidates: invalidatesFromProps,\n  meta: metaFromProps,\n  metaData: metaDataFromProps,\n  mutationOptions,\n  overtimeOptions,\n}: UseCreateProps<TData, TError, TVariables> = {}): UseCreateReturnType<\n  TData,\n  TError,\n  TVariables\n> &\n  UseLoadingOvertimeReturnType => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const dataProvider = useDataProvider();\n  const invalidateStore = useInvalidate();\n  const { resources, select } = useResource();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const { log } = useLog();\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutationResult = useMutation<\n    CreateResponse<TData>,\n    TError,\n    UseCreateParams<TData, TError, TVariables>,\n    unknown\n  >({\n    mutationFn: ({\n      resource: resourceName = resourceFromProps,\n      values = valuesFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      dataProviderName = dataProviderNameFromProps,\n    }: UseCreateParams<TData, TError, TVariables>) => {\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      return dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      ).create<TData, TVariables>({\n        resource: resource.name,\n        variables: values,\n        meta: combinedMeta,\n        metaData: combinedMeta,\n      });\n    },\n    onSuccess: (data, variables, context) => {\n      const {\n        resource: resourceName = resourceFromProps,\n        successNotification:\n          successNotificationFromProp = successNotificationFromProps,\n        dataProviderName: dataProviderNameFromProp = dataProviderNameFromProps,\n        invalidates = invalidatesFromProps ?? [\"list\", \"many\"],\n        values = valuesFromProps,\n        meta = metaFromProps,\n        metaData = metaDataFromProps,\n      } = variables;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotificationFromProp === \"function\"\n          ? successNotificationFromProp(data, values, identifier)\n          : successNotificationFromProp;\n\n      handleNotification(notificationConfig, {\n        key: `create-${identifier}-notification`,\n        message: translate(\n          \"notifications.createSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully created ${resourceSingular}`,\n        ),\n        description: translate(\"notifications.success\", \"Success\"),\n        type: \"success\",\n      });\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName,\n        invalidates,\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"created\",\n        payload: {\n          ids: data?.data?.id ? [data.data.id] : undefined,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"create\",\n        resource: resource.name,\n        data: values,\n        meta: {\n          dataProviderName,\n          id: data?.data?.id ?? undefined,\n          ...rest,\n        },\n      });\n\n      mutationOptions?.onSuccess?.(data, variables, context);\n    },\n    onError: (err: TError, variables, context) => {\n      const {\n        resource: resourceName = resourceFromProps,\n        errorNotification:\n          errorNotificationFromProp = errorNotificationFromProps,\n        values = valuesFromProps,\n      } = variables;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      checkError(err);\n\n      const { identifier } = select(resourceName);\n\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const notificationConfig =\n        typeof errorNotificationFromProp === \"function\"\n          ? errorNotificationFromProp(err, values, identifier)\n          : errorNotificationFromProp;\n\n      handleNotification(notificationConfig, {\n        key: `create-${identifier}-notification`,\n        description: err.message,\n        message: translate(\n          \"notifications.createError\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n            statusCode: err.statusCode,\n          },\n          `There was an error creating ${resourceSingular} (status code: ${err.statusCode})`,\n        ),\n        type: \"error\",\n      });\n\n      mutationOptions?.onError?.(err, variables, context);\n    },\n    mutationKey: keys().data().mutation(\"create\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useCreate\", preferLegacyKeys),\n    },\n  });\n  const { mutate, mutateAsync, ...mutation } = mutationResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutation = (\n    variables?: UseCreateParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      CreateResponse<TData>,\n      TError,\n      UseCreateParams<TData, TError, TVariables>,\n      unknown\n    >,\n  ) => {\n    return mutate(variables || {}, options);\n  };\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutateAsync = (\n    variables?: UseCreateParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      CreateResponse<TData>,\n      TError,\n      UseCreateParams<TData, TError, TVariables>,\n      unknown\n    >,\n  ) => {\n    return mutateAsync(variables || {}, options);\n  };\n\n  return {\n    ...mutation,\n    mutate: handleMutation,\n    mutateAsync: handleMutateAsync,\n    overtime: { elapsedTime },\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useCreate]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingValuesError = new Error(\n  \"[useCreate]: `values` is not provided but is required\",\n);\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  DeleteOneResponse,\n  GetListResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as DeleteContext,\n  PreviousQuery,\n} from \"../../contexts/data/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport { ActionTypes } from \"../../contexts/undoableQueue/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteParams<TData, TError, TVariables> = {\n  /**\n   * id for mutation function\n   */\n  id: BaseKey;\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n} & SuccessErrorNotification<DeleteOneResponse<TData>, TError, BaseKey>;\n\nexport type UseDeleteReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  DeleteOneResponse<TData>,\n  TError,\n  DeleteParams<TData, TError, TVariables>,\n  DeleteContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseDeleteProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      DeleteOneResponse<TData>,\n      TError,\n      DeleteParams<TData, TError, TVariables>,\n      DeleteContext<TData>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDelete` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for delete mutations.\n *\n * It uses `deleteOne` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDelete} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDelete = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseDeleteProps<TData, TError, TVariables> = {}): UseDeleteReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const dataProvider = useDataProvider();\n\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n\n  const { notificationDispatch } = useCancelNotification();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const { log } = useLog();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    DeleteOneResponse<TData>,\n    TError,\n    DeleteParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n  >({\n    mutationFn: ({\n      id,\n      mutationMode,\n      undoableTimeout,\n      resource: resourceName,\n      onCancel,\n      meta,\n      metaData,\n      dataProviderName,\n      values,\n    }) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return dataProvider(\n          pickDataProvider(identifier, dataProviderName, resources),\n        ).deleteOne<TData, TVariables>({\n          resource: resource.name,\n          id,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n          variables: values,\n        });\n      }\n\n      const deletePromise = new Promise<DeleteOneResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            dataProvider(\n              pickDataProvider(identifier, dataProviderName, resources),\n            )\n              .deleteOne<TData, TVariables>({\n                resource: resource.name,\n                id,\n                meta: combinedMeta,\n                metaData: combinedMeta,\n                variables: values,\n              })\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return deletePromise;\n    },\n    onMutate: async ({\n      id,\n      resource: resourceName,\n      mutationMode,\n      dataProviderName,\n      meta,\n      metaData,\n    }) => {\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        // Set the previous queries to the new ones:\n        queryClient.setQueriesData(\n          resourceKeys\n            .action(\"list\")\n            .params(preferredMeta ?? {})\n            .get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n            const data = previous.data.filter(\n              (record: TData) => record.id?.toString() !== id.toString(),\n            );\n\n            return {\n              data,\n              total: previous.total - 1,\n            };\n          },\n        );\n\n        queryClient.setQueriesData(\n          resourceKeys.action(\"many\").get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n            const data = previous.data.filter((record: TData) => {\n              return record.id?.toString() !== id?.toString();\n            });\n\n            return {\n              ...previous,\n              data,\n            };\n          },\n        );\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (\n      _data,\n      _error,\n      {\n        id,\n        resource: resourceName,\n        dataProviderName,\n        invalidates = [\"list\", \"many\"],\n      },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id, resource: identifier },\n      });\n    },\n    onSuccess: (\n      _data,\n      {\n        id,\n        resource: resourceName,\n        successNotification,\n        dataProviderName: dataProviderNameFromProp,\n        meta,\n        metaData,\n      },\n      context,\n    ) => {\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      // Remove the queries from the cache:\n      queryClient.removeQueries(context?.queryKey.detail(id));\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(_data, id, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${id}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Success\"),\n        message: translate(\n          \"notifications.deleteSuccess\",\n          {\n            resource: translate(\n              `${identifier}.${identifier}`,\n              resourceSingular,\n            ),\n          },\n          `Successfully deleted a ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"deleted\",\n        payload: {\n          ids: [id],\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"delete\",\n        resource: resource.name,\n        meta: {\n          id,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      // Remove the queries from the cache:\n      queryClient.removeQueries(context?.queryKey.detail(id));\n    },\n    onError: (\n      err: TError,\n      { id, resource: resourceName, errorNotification },\n      context,\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, id, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${id}-${identifier}-notification`,\n          message: translate(\n            \"notifications.deleteError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    mutationKey: keys().data().mutation(\"delete\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useDelete\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type MutateOptions,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n} from \"@definitions\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CreateManyResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { UseMutationResult } from \"../../definitions/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type UseCreateManyParams<TData, TError, TVariables> = {\n  resource?: string;\n  values?: TVariables[];\n  meta?: MetaQuery;\n  metaData?: MetaQuery;\n  dataProviderName?: string;\n  invalidates?: Array<keyof IQueryKeys>;\n} & SuccessErrorNotification<CreateManyResponse<TData>, TError, TVariables[]>;\n\nexport type UseCreateManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateManyResponse<TData>,\n  TError,\n  UseCreateManyParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCreateManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateManyResponse<TData>,\n      TError,\n      UseCreateManyParams<TData, TError, TVariables>\n    >,\n    \"mutationFn\"\n  >;\n} & UseLoadingOvertimeOptionsProps &\n  UseCreateManyParams<TData, TError, TVariables>;\n\n/**\n * `useCreateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple create mutations.\n *\n * It uses `createMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCreateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useCreateMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  resource: resourceFromProps,\n  values: valuesFromProps,\n  dataProviderName: dataProviderNameFromProps,\n  successNotification: successNotificationFromProps,\n  errorNotification: errorNotificationFromProps,\n  meta: metaFromProps,\n  metaData: metaDataFromProps,\n  invalidates: invalidatesFromProps,\n  mutationOptions,\n  overtimeOptions,\n}: UseCreateManyProps<TData, TError, TVariables> = {}): UseCreateManyReturnType<\n  TData,\n  TError,\n  TVariables\n> &\n  UseLoadingOvertimeReturnType => {\n  const dataProvider = useDataProvider();\n  const { resources, select } = useResource();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutationResult = useMutation<\n    CreateManyResponse<TData>,\n    TError,\n    UseCreateManyParams<TData, TError, TVariables>\n  >({\n    mutationFn: ({\n      resource: resourceName = resourceFromProps,\n      values = valuesFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      dataProviderName = dataProviderNameFromProps,\n    }: UseCreateManyParams<TData, TError, TVariables>) => {\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      if (selectedDataProvider.createMany) {\n        return selectedDataProvider.createMany<TData, TVariables>({\n          resource: resource.name,\n          variables: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n      }\n      return handleMultiple(\n        values.map((val) =>\n          selectedDataProvider.create<TData, TVariables>({\n            resource: resource.name,\n            variables: val,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n          }),\n        ),\n      );\n    },\n    onSuccess: (response, variables, context) => {\n      const {\n        resource: resourceName = resourceFromProps,\n        successNotification = successNotificationFromProps,\n        dataProviderName: dataProviderNameFromProp = dataProviderNameFromProps,\n        invalidates = invalidatesFromProps ?? [\"list\", \"many\"],\n        values = valuesFromProps,\n        meta = metaFromProps,\n        metaData = metaDataFromProps,\n      } = variables;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n      const resourcePlural = textTransformers.plural(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(response, values, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `createMany-${identifier}-notification`,\n        message: translate(\n          \"notifications.createSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully created ${resourcePlural}`,\n        ),\n        description: translate(\"notifications.success\", \"Success\"),\n        type: \"success\",\n      });\n\n      invalidateStore({\n        resource: identifier,\n        dataProviderName,\n        invalidates,\n      });\n\n      const ids = response?.data\n        .filter((item) => item?.id !== undefined)\n        .map((item) => item.id!);\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"created\",\n        payload: {\n          ids,\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"createMany\",\n        resource: resource.name,\n        data: values,\n        meta: {\n          dataProviderName,\n          ids,\n          ...rest,\n        },\n      });\n\n      mutationOptions?.onSuccess?.(response, variables, context);\n    },\n    onError: (err: TError, variables, context) => {\n      const {\n        resource: resourceName = resourceFromProps,\n        errorNotification = errorNotificationFromProps,\n        values = valuesFromProps,\n      } = variables;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, values, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `createMany-${identifier}-notification`,\n        description: err.message,\n        message: translate(\n          \"notifications.createError\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n            statusCode: err.statusCode,\n          },\n          `There was an error creating ${identifier} (status code: ${err.statusCode}`,\n        ),\n        type: \"error\",\n      });\n\n      mutationOptions?.onError?.(err, variables, context);\n    },\n    mutationKey: keys().data().mutation(\"createMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useCreateMany\", preferLegacyKeys),\n    },\n  });\n  const { mutate, mutateAsync, ...mutation } = mutationResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutation = (\n    variables?: UseCreateManyParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      CreateManyResponse<TData>,\n      TError,\n      UseCreateManyParams<TData, TError, TVariables>,\n      unknown\n    >,\n  ) => {\n    return mutate(variables || {}, options);\n  };\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutateAsync = (\n    variables?: UseCreateManyParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      CreateManyResponse<TData>,\n      TError,\n      UseCreateManyParams<TData, TError, TVariables>,\n      unknown\n    >,\n  ) => {\n    return mutateAsync(variables || {}, options);\n  };\n\n  return {\n    ...mutation,\n    mutate: handleMutation,\n    mutateAsync: handleMutateAsync,\n    overtime: { elapsedTime },\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useCreateMany]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingValuesError = new Error(\n  \"[useCreateMany]: `values` is not provided but is required\",\n);\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type MutateOptions,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  GetListResponse,\n  GetManyResponse,\n  GetOneResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as UpdateContext,\n  QueryResponse,\n  UpdateManyResponse,\n} from \"../../contexts/data/types\";\nimport type { UseMutationResult } from \"../../definitions/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport { ActionTypes } from \"../../contexts/undoableQueue/types\";\n\nexport type OptimisticUpdateManyMapType<TData, TVariables> = {\n  list?:\n    | ((\n        previous: GetListResponse<TData> | null | undefined,\n        values: TVariables,\n        ids: BaseKey[],\n      ) => GetListResponse<TData> | null)\n    | boolean;\n  many?:\n    | ((\n        previous: GetManyResponse<TData> | null | undefined,\n        values: TVariables,\n        ids: BaseKey[],\n      ) => GetManyResponse<TData> | null)\n    | boolean;\n  detail?:\n    | ((\n        previous: GetOneResponse<TData> | null | undefined,\n        values: TVariables,\n        id: BaseKey,\n      ) => GetOneResponse<TData> | null)\n    | boolean;\n};\n\nexport type UpdateManyParams<TData, TError, TVariables> = {\n  /**\n   * ids for mutation function\n   */\n  ids?: BaseKey[];\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n  /**\n   * meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * You can use it to manage the invalidations that will occur at the end of the mutation.\n   * @default {\n   *   list: true,\n   *   many: true,\n   *   detail: true,\n   * }\n   */\n  optimisticUpdateMap?: OptimisticUpdateManyMapType<TData, TVariables>;\n} & SuccessErrorNotification<\n  UpdateManyResponse<TData>,\n  TError,\n  { ids: BaseKey[]; values: TVariables }\n>;\n\nexport type UseUpdateManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  UpdateManyResponse<TData>,\n  TError,\n  UpdateManyParams<TData, TError, TVariables>,\n  UpdateContext<TData>\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseUpdateManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      UpdateManyResponse<TData>,\n      TError,\n      UpdateManyParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n    \"mutationFn\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps &\n  UpdateManyParams<TData, TError, TVariables>;\n\n/**\n * `useUpdateMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple update mutations.\n *\n * It uses `updateMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useUpdateMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useUpdateMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  ids: idsFromProps,\n  resource: resourceFromProps,\n  values: valuesFromProps,\n  dataProviderName: dataProviderNameFromProps,\n  successNotification: successNotificationFromProps,\n  errorNotification: errorNotificationFromProps,\n  meta: metaFromProps,\n  metaData: metaDataFromProps,\n  mutationMode: mutationModeFromProps,\n  undoableTimeout: undoableTimeoutFromProps,\n  onCancel: onCancelFromProps,\n  optimisticUpdateMap: optimisticUpdateMapFromProps,\n  invalidates: invalidatesFromProps,\n  mutationOptions,\n  overtimeOptions,\n}: UseUpdateManyProps<TData, TError, TVariables> = {}): UseUpdateManyReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const { notificationDispatch } = useCancelNotification();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutationResult = useMutation<\n    UpdateManyResponse<TData>,\n    TError,\n    UpdateManyParams<TData, TError, TVariables>,\n    UpdateContext<TData>\n  >({\n    mutationFn: ({\n      ids = idsFromProps,\n      values = valuesFromProps,\n      resource: resourceName = resourceFromProps,\n      onCancel = onCancelFromProps,\n      mutationMode = mutationModeFromProps,\n      undoableTimeout = undoableTimeoutFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      dataProviderName = dataProviderNameFromProps,\n    }: UpdateManyParams<TData, TError, TVariables>) => {\n      if (!ids) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      const mutationFn = () => {\n        if (selectedDataProvider.updateMany) {\n          return selectedDataProvider.updateMany<TData, TVariables>({\n            resource: resource.name,\n            ids,\n            variables: values,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n          });\n        }\n        return handleMultiple(\n          ids.map((id) =>\n            selectedDataProvider.update<TData, TVariables>({\n              resource: resource.name,\n              id,\n              variables: values,\n              meta: combinedMeta,\n              metaData: combinedMeta,\n            }),\n          ),\n        );\n      };\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return mutationFn();\n      }\n\n      const updatePromise = new Promise<UpdateManyResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            mutationFn()\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: ids,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      resource: resourceName = resourceFromProps,\n      ids = idsFromProps,\n      values = valuesFromProps,\n      mutationMode = mutationModeFromProps,\n      dataProviderName = dataProviderNameFromProps,\n      meta = metaFromProps,\n      metaData = metaDataFromProps,\n      optimisticUpdateMap = optimisticUpdateMapFromProps ?? {\n        list: true,\n        many: true,\n        detail: true,\n      },\n    }) => {\n      if (!ids) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries = queryClient.getQueriesData<QueryResponse<TData>>(\n        resourceKeys.get(preferLegacyKeys),\n      );\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        if (optimisticUpdateMap.list) {\n          // Set the previous queries to the new ones:\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"list\")\n              .params(preferredMeta ?? {})\n              .get(preferLegacyKeys),\n            (previous?: GetListResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.list === \"function\") {\n                return optimisticUpdateMap.list(previous, values, ids);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (\n                  record.id !== undefined &&\n                  ids\n                    .filter((id) => id !== undefined)\n                    .map(String)\n                    .includes(record.id.toString())\n                ) {\n                  return {\n                    ...record,\n                    ...values,\n                  };\n                }\n\n                return record;\n              });\n\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.many) {\n          queryClient.setQueriesData(\n            resourceKeys.action(\"many\").get(preferLegacyKeys),\n            (previous?: GetManyResponse<TData> | null) => {\n              if (typeof optimisticUpdateMap.many === \"function\") {\n                return optimisticUpdateMap.many(previous, values, ids);\n              }\n\n              if (!previous) {\n                return null;\n              }\n\n              const data = previous.data.map((record: TData) => {\n                if (\n                  record.id !== undefined &&\n                  ids\n                    .filter((id) => id !== undefined)\n                    .map(String)\n                    .includes(record.id.toString())\n                ) {\n                  return {\n                    ...record,\n                    ...values,\n                  };\n                }\n                return record;\n              });\n              return {\n                ...previous,\n                data,\n              };\n            },\n          );\n        }\n\n        if (optimisticUpdateMap.detail) {\n          for (const id of ids) {\n            queryClient.setQueriesData(\n              resourceKeys\n                .action(\"one\")\n                .id(id)\n                .params(preferredMeta ?? {})\n                .get(preferLegacyKeys),\n              (previous?: GetOneResponse<TData> | null) => {\n                if (typeof optimisticUpdateMap.detail === \"function\") {\n                  return optimisticUpdateMap.detail(previous, values, id);\n                }\n\n                if (!previous) {\n                  return null;\n                }\n\n                const data = {\n                  ...previous.data,\n                  ...values,\n                };\n                return {\n                  ...previous,\n                  data,\n                };\n              },\n            );\n          }\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    onSettled: (data, error, variables, context) => {\n      const {\n        ids = idsFromProps,\n        resource: resourceName = resourceFromProps,\n        dataProviderName = dataProviderNameFromProps,\n        invalidates = invalidatesFromProps,\n      } = variables;\n      if (!ids) throw missingIdError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        invalidates: invalidates ?? [\"list\", \"many\"],\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n      });\n\n      ids.forEach((id) =>\n        invalidateStore({\n          resource: identifier,\n          invalidates: invalidates ?? [\"detail\"],\n          dataProviderName: pickDataProvider(\n            identifier,\n            dataProviderName,\n            resources,\n          ),\n          id,\n        }),\n      );\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id: ids, resource: identifier },\n      });\n\n      mutationOptions?.onSettled?.(data, error, variables, context);\n    },\n    onSuccess: (data, variables, context) => {\n      const {\n        ids = idsFromProps,\n        resource: resourceName = resourceFromProps,\n        values = valuesFromProps,\n        meta = metaFromProps,\n        metaData = metaDataFromProps,\n        dataProviderName: dataProviderNameFromProp = dataProviderNameFromProps,\n        successNotification = successNotificationFromProps,\n      } = variables;\n      if (!ids) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { resource, identifier } = select(resourceName);\n      const resourceSingular = textTransformers.singular(identifier);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, { ids, values }, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Successful\"),\n        message: translate(\n          \"notifications.editSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully updated ${resourceSingular}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"updated\",\n        payload: {\n          ids: ids.map(String),\n        },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const previousData: any[] = [];\n      if (context) {\n        ids.forEach((id) => {\n          const queryData = queryClient.getQueryData<UpdateManyResponse<TData>>(\n            context.queryKey.detail(id),\n          );\n\n          previousData.push(\n            Object.keys(values || {}).reduce<any>((acc, item: any) => {\n              acc[item] = queryData?.data?.[item];\n              return acc;\n            }, {}),\n          );\n        });\n      }\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"updateMany\",\n        resource: resource.name,\n        data: values,\n        previousData,\n        meta: {\n          ids,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      mutationOptions?.onSuccess?.(data, variables, context);\n    },\n    onError: (err: TError, variables, context) => {\n      const {\n        ids = idsFromProps,\n        resource: resourceName = resourceFromProps,\n        errorNotification = errorNotificationFromProps,\n        values = valuesFromProps,\n      } = variables;\n      if (!ids) throw missingIdError;\n      if (!values) throw missingValuesError;\n      if (!resourceName) throw missingResourceError;\n\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError?.(err);\n\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, { ids, values }, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${ids}-${identifier}-updateMany-error-notification`,\n          message: translate(\n            \"notifications.editError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error when updating ${resourceSingular} (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n\n      mutationOptions?.onError?.(err, variables, context);\n    },\n    mutationKey: keys().data().mutation(\"updateMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useUpdateMany\", preferLegacyKeys),\n    },\n  });\n  const { mutate, mutateAsync, ...mutation } = mutationResult;\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutation = (\n    variables?: UpdateManyParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      UpdateManyResponse<TData>,\n      TError,\n      UpdateManyParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n  ) => {\n    return mutate(variables || {}, options);\n  };\n\n  // this function is used to make the `variables` parameter optional\n  const handleMutateAsync = (\n    variables?: UpdateManyParams<TData, TError, TVariables>,\n    options?: MutateOptions<\n      UpdateManyResponse<TData>,\n      TError,\n      UpdateManyParams<TData, TError, TVariables>,\n      UpdateContext<TData>\n    >,\n  ) => {\n    return mutateAsync(variables || {}, options);\n  };\n\n  return {\n    ...mutation,\n    mutate: handleMutation,\n    mutateAsync: handleMutateAsync,\n    overtime: { elapsedTime },\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useUpdateMany]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingIdError = new Error(\n  \"[useUpdateMany]: `id` is not defined but is required in edit and clone actions\",\n);\n\nconst missingValuesError = new Error(\n  \"[useUpdateMany]: `values` is not provided but is required\",\n);\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport {\n  handleMultiple,\n  pickDataProvider,\n  pickNotDeprecated,\n  queryKeysReplacement,\n  useActiveAuthProvider,\n} from \"@definitions\";\nimport {\n  useCancelNotification,\n  useDataProvider,\n  useHandleNotification,\n  useInvalidate,\n  useKeys,\n  useLog,\n  useMeta,\n  useMutationMode,\n  useOnError,\n  usePublish,\n  useRefineContext,\n  useResource,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseRecord,\n  DeleteManyResponse,\n  GetListResponse,\n  HttpError,\n  IQueryKeys,\n  MetaQuery,\n  MutationMode,\n  PrevContext as DeleteContext,\n  PreviousQuery,\n} from \"../../contexts/data/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport { ActionTypes } from \"../../contexts/undoableQueue/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type DeleteManyParams<TData, TError, TVariables> = {\n  /**\n   * ids for mutation function\n   */\n  ids: BaseKey[];\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * [Determines when mutations are executed](/advanced-tutorials/mutation-mode.md)\n   */\n  mutationMode?: MutationMode;\n  /**\n   * Duration in ms to wait before executing the mutation when `mutationMode = \"undoable\"`\n   */\n  undoableTimeout?: number;\n  /**\n   * Provides a function to cancel the mutation when `mutationMode = \"undoable\"`\n   */\n  onCancel?: (cancelMutation: () => void) => void;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default \"default\"\n   */\n  dataProviderName?: string;\n  /**\n   *  You can use it to manage the invalidations that will occur at the end of the mutation.\n   */\n  invalidates?: Array<keyof IQueryKeys>;\n  /**\n   * Values for mutation function\n   */\n  values?: TVariables;\n} & SuccessErrorNotification<DeleteManyResponse<TData>, TError, BaseKey[]>;\n\nexport type UseDeleteManyReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  DeleteManyResponse<TData>,\n  TError,\n  DeleteManyParams<TData, TError, TVariables>,\n  unknown\n> &\n  UseLoadingOvertimeReturnType;\n\nexport type UseDeleteManyProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      DeleteManyResponse<TData>,\n      TError,\n      DeleteManyParams<TData, TError, TVariables>,\n      DeleteContext<TData>\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\" | \"onSettled\" | \"onMutate\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useDeleteMany` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for multiple delete mutations.\n *\n * It uses `deleteMany` method as mutation function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useDeleteMany} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n *\n */\nexport const useDeleteMany = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseDeleteManyProps<TData, TError, TVariables> = {}): UseDeleteManyReturnType<\n  TData,\n  TError,\n  TVariables\n> => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const {\n    mutationMode: mutationModeContext,\n    undoableTimeout: undoableTimeoutContext,\n  } = useMutationMode();\n  const dataProvider = useDataProvider();\n  const { notificationDispatch } = useCancelNotification();\n  const translate = useTranslate();\n  const publish = usePublish();\n  const handleNotification = useHandleNotification();\n  const invalidateStore = useInvalidate();\n  const { log } = useLog();\n  const { resources, select } = useResource();\n  const queryClient = useQueryClient();\n  const getMeta = useMeta();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    DeleteManyResponse<TData>,\n    TError,\n    DeleteManyParams<TData, TError, TVariables>,\n    DeleteContext<TData>\n  >({\n    mutationFn: ({\n      resource: resourceName,\n      ids,\n      mutationMode,\n      undoableTimeout,\n      onCancel,\n      meta,\n      metaData,\n      dataProviderName,\n      values,\n    }: DeleteManyParams<TData, TError, TVariables>) => {\n      const { resource, identifier } = select(resourceName);\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      const undoableTimeoutPropOrContext =\n        undoableTimeout ?? undoableTimeoutContext;\n\n      const selectedDataProvider = dataProvider(\n        pickDataProvider(identifier, dataProviderName, resources),\n      );\n\n      const mutationFn = () => {\n        if (selectedDataProvider.deleteMany) {\n          return selectedDataProvider.deleteMany<TData, TVariables>({\n            resource: resource.name,\n            ids,\n            meta: combinedMeta,\n            metaData: combinedMeta,\n            variables: values,\n          });\n        }\n        return handleMultiple(\n          ids.map((id) =>\n            selectedDataProvider.deleteOne<TData, TVariables>({\n              resource: resource.name,\n              id,\n              meta: combinedMeta,\n              metaData: combinedMeta,\n              variables: values,\n            }),\n          ),\n        );\n      };\n\n      if (!(mutationModePropOrContext === \"undoable\")) {\n        return mutationFn();\n      }\n\n      const updatePromise = new Promise<DeleteManyResponse<TData>>(\n        (resolve, reject) => {\n          const doMutation = () => {\n            mutationFn()\n              .then((result) => resolve(result))\n              .catch((err) => reject(err));\n          };\n\n          const cancelMutation = () => {\n            reject({ message: \"mutationCancelled\" });\n          };\n\n          if (onCancel) {\n            onCancel(cancelMutation);\n          }\n\n          notificationDispatch({\n            type: ActionTypes.ADD,\n            payload: {\n              id: ids,\n              resource: identifier,\n              cancelMutation: cancelMutation,\n              doMutation: doMutation,\n              seconds: undoableTimeoutPropOrContext,\n              isSilent: !!onCancel,\n            },\n          });\n        },\n      );\n      return updatePromise;\n    },\n    onMutate: async ({\n      ids,\n      resource: resourceName,\n      mutationMode,\n      dataProviderName,\n      meta,\n      metaData,\n    }) => {\n      const { identifier } = select(resourceName);\n\n      const {\n        gqlMutation: _,\n        gqlQuery: __,\n        ...preferredMeta\n      } = pickNotDeprecated(meta, metaData) ?? {};\n\n      const queryKey = queryKeysReplacement(preferLegacyKeys)(\n        identifier,\n        pickDataProvider(identifier, dataProviderName, resources),\n        preferredMeta,\n      );\n\n      const resourceKeys = keys()\n        .data(pickDataProvider(identifier, dataProviderName, resources))\n        .resource(identifier);\n\n      const mutationModePropOrContext = mutationMode ?? mutationModeContext;\n\n      await queryClient.cancelQueries(\n        resourceKeys.get(preferLegacyKeys),\n        undefined,\n        {\n          silent: true,\n        },\n      );\n\n      const previousQueries: PreviousQuery<TData>[] =\n        queryClient.getQueriesData(resourceKeys.get(preferLegacyKeys));\n\n      if (mutationModePropOrContext !== \"pessimistic\") {\n        // Set the previous queries to the new ones:\n        queryClient.setQueriesData(\n          resourceKeys\n            .action(\"list\")\n            .params(preferredMeta ?? {})\n            .get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n\n            const data = previous.data.filter(\n              (item) =>\n                item.id && !ids.map(String).includes(item.id.toString()),\n            );\n\n            return {\n              data,\n              total: previous.total - 1,\n            };\n          },\n        );\n\n        queryClient.setQueriesData(\n          resourceKeys.action(\"many\").get(preferLegacyKeys),\n          (previous?: GetListResponse<TData> | null) => {\n            if (!previous) {\n              return null;\n            }\n\n            const data = previous.data.filter((record: TData) => {\n              if (record.id) {\n                return !ids.map(String).includes(record.id.toString());\n              }\n              return false;\n            });\n\n            return {\n              ...previous,\n              data,\n            };\n          },\n        );\n\n        for (const id of ids) {\n          queryClient.setQueriesData(\n            resourceKeys\n              .action(\"one\")\n              .id(id)\n              .params(preferredMeta)\n              .get(preferLegacyKeys),\n            (previous?: any | null) => {\n              if (!previous || previous.data.id === id) {\n                return null;\n              }\n              return {\n                ...previous,\n              };\n            },\n          );\n        }\n      }\n\n      return {\n        previousQueries,\n        queryKey,\n      };\n    },\n    // Always refetch after error or success:\n    onSettled: (\n      _data,\n      _error,\n      {\n        resource: resourceName,\n        ids,\n        dataProviderName,\n        invalidates = [\"list\", \"many\"],\n      },\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // invalidate the cache for the list and many queries:\n      invalidateStore({\n        resource: identifier,\n        dataProviderName: pickDataProvider(\n          identifier,\n          dataProviderName,\n          resources,\n        ),\n        invalidates,\n      });\n\n      notificationDispatch({\n        type: ActionTypes.REMOVE,\n        payload: { id: ids, resource: identifier },\n      });\n    },\n    onSuccess: (\n      _data,\n      {\n        ids,\n        resource: resourceName,\n        meta,\n        metaData,\n        dataProviderName: dataProviderNameFromProp,\n        successNotification,\n      },\n      context,\n    ) => {\n      const { resource, identifier } = select(resourceName);\n\n      const dataProviderName = pickDataProvider(\n        identifier,\n        dataProviderNameFromProp,\n        resources,\n      );\n\n      const combinedMeta = getMeta({\n        resource,\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      // Remove the queries from the cache:\n      ids.forEach((id) =>\n        queryClient.removeQueries(context?.queryKey.detail(id)),\n      );\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(_data, ids, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${ids}-${identifier}-notification`,\n        description: translate(\"notifications.success\", \"Success\"),\n        message: translate(\n          \"notifications.deleteSuccess\",\n          {\n            resource: translate(`${identifier}.${identifier}`, identifier),\n          },\n          `Successfully deleted ${identifier}`,\n        ),\n        type: \"success\",\n      });\n\n      publish?.({\n        channel: `resources/${resource.name}`,\n        type: \"deleted\",\n        payload: { ids },\n        date: new Date(),\n        meta: {\n          ...combinedMeta,\n          dataProviderName,\n        },\n      });\n\n      const {\n        fields: _fields,\n        operation: _operation,\n        variables: _variables,\n        ...rest\n      } = combinedMeta || {};\n      log?.mutate({\n        action: \"deleteMany\",\n        resource: resource.name,\n        meta: {\n          ids,\n          dataProviderName,\n          ...rest,\n        },\n      });\n\n      // Remove the queries from the cache:\n      ids.forEach((id) =>\n        queryClient.removeQueries(context?.queryKey.detail(id)),\n      );\n    },\n    onError: (\n      err,\n      { ids, resource: resourceName, errorNotification },\n      context,\n    ) => {\n      const { identifier } = select(resourceName);\n\n      // set back the queries to the context:\n      if (context) {\n        for (const query of context.previousQueries) {\n          queryClient.setQueryData(query[0], query[1]);\n        }\n      }\n\n      if (err.message !== \"mutationCancelled\") {\n        checkError(err);\n        const resourceSingular = textTransformers.singular(identifier);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, ids, identifier)\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${ids}-${identifier}-notification`,\n          message: translate(\n            \"notifications.deleteError\",\n            {\n              resource: resourceSingular,\n              statusCode: err.statusCode,\n            },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      }\n    },\n    mutationKey: keys().data().mutation(\"deleteMany\").get(preferLegacyKeys),\n    ...mutationOptions,\n    meta: {\n      ...mutationOptions?.meta,\n      ...getXRay(\"useDeleteMany\", preferLegacyKeys),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { pickNotDeprecated } from \"@definitions/index\";\nimport { useDataProvider, useResource } from \"@hooks\";\n\nexport const useApiUrl = (dataProviderName?: string): string => {\n  const dataProvider = useDataProvider();\n  const { resource } = useResource();\n\n  const { getApiUrl } = dataProvider(\n    dataProviderName ??\n      pickNotDeprecated(resource?.meta, resource?.options)?.dataProviderName,\n  );\n\n  return getApiUrl();\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type QueryObserverResult,\n  type UseQueryOptions,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  pickNotDeprecated,\n  useActiveAuthProvider,\n  prepareQueryContext,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  CustomResponse,\n  HttpError,\n  MetaQuery,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\ninterface UseCustomConfig<TQuery, TPayload> {\n  /**\n   * @deprecated `sort` is deprecated, use `sorters` instead.\n   */\n  sort?: CrudSort[];\n  sorters?: CrudSort[];\n  filters?: CrudFilter[];\n  query?: TQuery;\n  payload?: TPayload;\n  headers?: {};\n}\n\nexport type UseCustomProps<TQueryFnData, TError, TQuery, TPayload, TData> = {\n  /**\n   * request's URL\n   */\n  url: string;\n  /**\n   * request's method (`GET`, `POST`, etc.)\n   */\n  method: \"get\" | \"delete\" | \"head\" | \"options\" | \"post\" | \"put\" | \"patch\";\n  /**\n   * The config of your request. You can send headers, payload, query, filters and sorters using this field\n   */\n  config?: UseCustomConfig<TQuery, TPayload>;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\"\n   */\n  queryOptions?: UseQueryOptions<\n    CustomResponse<TQueryFnData>,\n    TError,\n    CustomResponse<TData>\n  >;\n  /**\n   * meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  CustomResponse<TData>,\n  TError,\n  Prettify<UseCustomConfig<TQuery, TPayload> & MetaQuery>\n> &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustom` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`} used for custom requests.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustom} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TQuery - Values for query params\n * @typeParam TPayload - Values for params\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useCustom = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TQuery = unknown,\n  TPayload = unknown,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  url,\n  method,\n  config,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  dataProviderName,\n  overtimeOptions,\n}: UseCustomProps<\n  TQueryFnData,\n  TError,\n  TQuery,\n  TPayload,\n  TData\n>): QueryObserverResult<CustomResponse<TData>, TError> &\n  UseLoadingOvertimeReturnType => {\n  const dataProvider = useDataProvider();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const translate = useTranslate();\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n\n  const { custom } = dataProvider(dataProviderName);\n\n  const combinedMeta = getMeta({ meta: preferredMeta });\n\n  if (custom) {\n    const queryResponse = useQuery<\n      CustomResponse<TQueryFnData>,\n      TError,\n      CustomResponse<TData>\n    >({\n      queryKey: keys()\n        .data(dataProviderName)\n        .mutation(\"custom\")\n        .params({\n          method,\n          url,\n          ...config,\n          ...(preferredMeta || {}),\n        })\n        .get(preferLegacyKeys),\n      queryFn: (context) =>\n        custom<TQueryFnData>({\n          url,\n          method,\n          ...config,\n          meta: {\n            ...combinedMeta,\n            queryContext: prepareQueryContext(context),\n          },\n          metaData: {\n            ...combinedMeta,\n            queryContext: prepareQueryContext(context),\n          },\n        }),\n      ...queryOptions,\n      onSuccess: (data) => {\n        queryOptions?.onSuccess?.(data);\n\n        const notificationConfig =\n          typeof successNotification === \"function\"\n            ? successNotification(data, {\n                ...config,\n                ...combinedMeta,\n              })\n            : successNotification;\n\n        handleNotification(notificationConfig);\n      },\n      onError: (err: TError) => {\n        checkError(err);\n        queryOptions?.onError?.(err);\n\n        const notificationConfig =\n          typeof errorNotification === \"function\"\n            ? errorNotification(err, {\n                ...config,\n                ...combinedMeta,\n              })\n            : errorNotification;\n\n        handleNotification(notificationConfig, {\n          key: `${method}-notification`,\n          message: translate(\n            \"notifications.error\",\n            { statusCode: err.statusCode },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      },\n      meta: {\n        ...queryOptions?.meta,\n        ...getXRay(\"useCustom\", preferLegacyKeys),\n      },\n    });\n    const { elapsedTime } = useLoadingOvertime({\n      isLoading: queryResponse.isFetching,\n      interval: overtimeOptions?.interval,\n      onInterval: overtimeOptions?.onInterval,\n    });\n\n    return { ...queryResponse, overtime: { elapsedTime } };\n  }\n  throw Error(\"Not implemented custom on data provider.\");\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n} from \"@tanstack/react-query\";\n\nimport { pickNotDeprecated, useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CreateResponse,\n  HttpError,\n  MetaQuery,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\ninterface UseCustomMutationConfig {\n  headers?: {};\n}\n\ntype useCustomMutationParams<TData, TError, TVariables> = {\n  url: string;\n  method: \"post\" | \"put\" | \"patch\" | \"delete\";\n  values: TVariables;\n  /**\n   * Meta data for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   * Meta data for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  dataProviderName?: string;\n  config?: UseCustomMutationConfig;\n} & SuccessErrorNotification<\n  CreateResponse<TData>,\n  TError,\n  Prettify<UseCustomMutationConfig & MetaQuery>\n>;\n\nexport type UseCustomMutationReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = UseMutationResult<\n  CreateResponse<TData>,\n  TError,\n  useCustomMutationParams<TData, TError, TVariables>,\n  unknown\n>;\n\nexport type UseCustomMutationProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  mutationOptions?: Omit<\n    UseMutationOptions<\n      CreateResponse<TData>,\n      TError,\n      useCustomMutationParams<TData, TError, TVariables>,\n      unknown\n    >,\n    \"mutationFn\" | \"onError\" | \"onSuccess\"\n  >;\n} & UseLoadingOvertimeOptionsProps;\n\n/**\n * `useCustomMutation` is a modified version of `react-query`'s {@link https://react-query.tanstack.com/reference/useMutation `useMutation`} for create mutations.\n *\n * It uses the `custom` method from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useCustomMutation} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\n\nexport const useCustomMutation = <\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n>({\n  mutationOptions,\n  overtimeOptions,\n}: UseCustomMutationProps<\n  TData,\n  TError,\n  TVariables\n> = {}): UseCustomMutationReturnType<TData, TError, TVariables> &\n  UseLoadingOvertimeReturnType => {\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const mutation = useMutation<\n    CreateResponse<TData>,\n    TError,\n    useCustomMutationParams<TData, TError, TVariables>,\n    unknown\n  >(\n    ({\n      url,\n      method,\n      values,\n      meta,\n      metaData,\n      dataProviderName,\n      config,\n    }: useCustomMutationParams<TData, TError, TVariables>) => {\n      const combinedMeta = getMeta({\n        meta: pickNotDeprecated(meta, metaData),\n      });\n\n      const { custom } = dataProvider(dataProviderName);\n\n      if (custom) {\n        return custom<TData>({\n          url,\n          method,\n          payload: values,\n          meta: combinedMeta,\n          metaData: combinedMeta,\n          headers: { ...config?.headers },\n        });\n      }\n\n      throw Error(\"Not implemented custom on data provider.\");\n    },\n    {\n      onSuccess: (\n        data,\n        {\n          successNotification: successNotificationFromProp,\n          config,\n          meta,\n          metaData,\n        },\n      ) => {\n        const notificationConfig =\n          typeof successNotificationFromProp === \"function\"\n            ? successNotificationFromProp(data, {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n              })\n            : successNotificationFromProp;\n\n        handleNotification(notificationConfig);\n      },\n      onError: (\n        err: TError,\n        {\n          errorNotification: errorNotificationFromProp,\n          method,\n          config,\n          meta,\n          metaData,\n        },\n      ) => {\n        checkError(err);\n\n        const notificationConfig =\n          typeof errorNotificationFromProp === \"function\"\n            ? errorNotificationFromProp(err, {\n                ...config,\n                ...(pickNotDeprecated(meta, metaData) || {}),\n              })\n            : errorNotificationFromProp;\n\n        handleNotification(notificationConfig, {\n          key: `${method}-notification`,\n          message: translate(\n            \"notifications.error\",\n            { statusCode: err.statusCode },\n            `Error (status code: ${err.statusCode})`,\n          ),\n          description: err.message,\n          type: \"error\",\n        });\n      },\n      mutationKey: keys()\n        .data()\n        .mutation(\"customMutation\")\n        .get(preferLegacyKeys),\n      ...mutationOptions,\n      meta: {\n        ...mutationOptions?.meta,\n        ...getXRay(\"useCustomMutation\", preferLegacyKeys),\n      },\n    },\n  );\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: mutation.isLoading,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...mutation, overtime: { elapsedTime } };\n};\n","import { useCallback, useContext } from \"react\";\n\nimport { DataContext } from \"@contexts/data\";\nimport { type DataProvider, IDataContext } from \"../../contexts/data/types\";\nexport const useDataProvider = (): ((\n  /**\n   * The name of the `data provider` you want to access\n   */\n  dataProviderName?: string,\n) => DataProvider) => {\n  const context = useContext(DataContext);\n\n  const handleDataProvider = useCallback(\n    (dataProviderName?: string) => {\n      if (dataProviderName) {\n        const dataProvider = context?.[dataProviderName];\n        if (!dataProvider) {\n          throw new Error(`\"${dataProviderName}\" Data provider not found`);\n        }\n\n        if (dataProvider && !context?.default) {\n          throw new Error(\n            \"If you have multiple data providers, you must provide default data provider property\",\n          );\n        }\n\n        return context[dataProviderName];\n      }\n\n      if (context.default) {\n        return context.default;\n      }\n\n      throw new Error(\n        `There is no \"default\" data provider. Please pass dataProviderName.`,\n      );\n    },\n    [context],\n  );\n\n  return handleDataProvider;\n};\n","import React, { type PropsWithChildren } from \"react\";\n\nimport type { DataProvider, DataProviders, IDataContext } from \"./types\";\n\nexport const defaultDataProvider: DataProviders = {\n  default: {} as DataProvider,\n};\n\nexport const DataContext =\n  React.createContext<IDataContext>(defaultDataProvider);\n\ntype Props = PropsWithChildren<{\n  dataProvider?: DataProvider | DataProviders;\n}>;\n\nexport const DataContextProvider: React.FC<Props> = ({\n  children,\n  dataProvider,\n}) => {\n  let providerValue = defaultDataProvider;\n\n  if (dataProvider) {\n    if (\n      !(\"default\" in dataProvider) &&\n      (\"getList\" in dataProvider || \"getOne\" in dataProvider)\n    ) {\n      providerValue = {\n        default: dataProvider,\n      };\n    } else {\n      providerValue = dataProvider;\n    }\n  }\n\n  return (\n    <DataContext.Provider value={providerValue}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n","import { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type InfiniteData,\n  type InfiniteQueryObserverResult,\n  type UseInfiniteQueryOptions,\n  useInfiniteQuery,\n} from \"@tanstack/react-query\";\n\nimport {\n  getNextPageParam,\n  getPreviousPageParam,\n  handlePaginationParams,\n  pickDataProvider,\n  pickNotDeprecated,\n  prepareQueryContext,\n  useActiveAuthProvider,\n} from \"@definitions/helpers\";\nimport {\n  useDataProvider,\n  useHandleNotification,\n  useKeys,\n  useMeta,\n  useOnError,\n  useResource,\n  useResourceSubscription,\n  useTranslate,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  GetListResponse,\n  HttpError,\n  MetaQuery,\n  Pagination,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport interface UseInfiniteListConfig {\n  pagination?: Pagination;\n  hasPagination?: boolean;\n  sort?: CrudSort[];\n  filters?: CrudFilter[];\n}\n\ntype BaseInfiniteListProps = {\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   *  @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * Configuration for pagination, sorting and filtering\n   * @type [`useInfiniteListConfig`](/docs/api-reference/core/hooks/data/useInfiniteList/#config-parameters)\n   * @deprecated `config` property is deprecated. Use `pagination`, `hasPagination`, `sorters` and `filters` instead.\n   */\n  config?: UseInfiniteListConfig;\n  /**\n   * Pagination properties\n   */\n  pagination?: Pagination;\n  /**\n   * Whether to use server-side pagination or not\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sorter parameters\n   */\n  sorters?: CrudSort[];\n  /**\n   * Filter parameters\n   */\n  filters?: CrudFilter[];\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use\n   */\n  dataProviderName?: string;\n};\n\nexport type UseInfiniteListProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * Tanstack Query's [useInfiniteQuery](https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery) options\n   */\n  queryOptions?: UseInfiniteQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n} & BaseInfiniteListProps &\n  SuccessErrorNotification<\n    InfiniteData<GetListResponse<TData>>,\n    TError,\n    Prettify<BaseInfiniteListProps>\n  > &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\n/**\n * `useInfiniteList` is a modified version of `react-query`'s {@link https://tanstack.com/query/latest/docs/react/guides/infinite-queries `useInfiniteQuery`} used for retrieving items from a `resource` with pagination, sort, and filter configurations.\n *\n * It uses the `getList` method as the query function from the `dataProvider` which is passed to `<Refine>`.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/data/useInfiniteList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useInfiniteList = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  config,\n  filters,\n  hasPagination,\n  pagination,\n  sorters,\n  queryOptions,\n  successNotification,\n  errorNotification,\n  meta,\n  metaData,\n  liveMode,\n  onLiveEvent,\n  liveParams,\n  dataProviderName,\n  overtimeOptions,\n}: UseInfiniteListProps<\n  TQueryFnData,\n  TError,\n  TData\n>): InfiniteQueryObserverResult<GetListResponse<TData>, TError> &\n  UseLoadingOvertimeReturnType => {\n  const { resources, resource, identifier } = useResource(resourceFromProp);\n\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const authProvider = useActiveAuthProvider();\n  const { mutate: checkError } = useOnError({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n  const handleNotification = useHandleNotification();\n  const getMeta = useMeta();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const pickedDataProvider = pickDataProvider(\n    identifier,\n    dataProviderName,\n    resources,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n  const prefferedFilters = pickNotDeprecated(filters, config?.filters);\n  const prefferedSorters = pickNotDeprecated(sorters, config?.sort);\n  const prefferedHasPagination = pickNotDeprecated(\n    hasPagination,\n    config?.hasPagination,\n  );\n  const prefferedPagination = handlePaginationParams({\n    pagination,\n    configPagination: config?.pagination,\n    hasPagination: prefferedHasPagination,\n  });\n  const isServerPagination = prefferedPagination.mode === \"server\";\n  const notificationValues = {\n    meta: preferredMeta,\n    metaData: preferredMeta,\n    filters: prefferedFilters,\n    hasPagination: isServerPagination,\n    pagination: prefferedPagination,\n    sorters: prefferedSorters,\n    config: {\n      ...config,\n      sort: prefferedSorters,\n    },\n  };\n\n  const isEnabled =\n    queryOptions?.enabled === undefined || queryOptions?.enabled === true;\n\n  const combinedMeta = getMeta({ resource, meta: preferredMeta });\n\n  const { getList } = dataProvider(pickedDataProvider);\n\n  useResourceSubscription({\n    resource: identifier,\n    types: [\"*\"],\n    params: {\n      meta: combinedMeta,\n      metaData: combinedMeta,\n      pagination: prefferedPagination,\n      hasPagination: isServerPagination,\n      sort: prefferedSorters,\n      sorters: prefferedSorters,\n      filters: prefferedFilters,\n      subscriptionType: \"useList\",\n      ...liveParams,\n    },\n    channel: `resources/${resource.name}`,\n    enabled: isEnabled,\n    liveMode,\n    onLiveEvent,\n    dataProviderName: pickedDataProvider,\n    meta: {\n      ...combinedMeta,\n      dataProviderName,\n    },\n  });\n\n  const queryResponse = useInfiniteQuery<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >({\n    queryKey: keys()\n      .data(pickedDataProvider)\n      .resource(identifier)\n      .action(\"infinite\")\n      .params({\n        ...(preferredMeta || {}),\n        filters: prefferedFilters,\n        hasPagination: isServerPagination,\n        ...(isServerPagination && {\n          pagination: prefferedPagination,\n        }),\n        ...(sorters && {\n          sorters,\n        }),\n        ...(config?.sort && {\n          sort: config?.sort,\n        }),\n      })\n      .get(preferLegacyKeys),\n    queryFn: (context) => {\n      const paginationProperties = {\n        ...prefferedPagination,\n        current: context.pageParam,\n      };\n\n      const meta = {\n        ...combinedMeta,\n        queryContext: prepareQueryContext(context),\n      };\n\n      return getList<TQueryFnData>({\n        resource: resource.name,\n        pagination: paginationProperties,\n        hasPagination: isServerPagination,\n        filters: prefferedFilters,\n        sort: prefferedSorters,\n        sorters: prefferedSorters,\n        meta,\n        metaData: meta,\n      }).then(({ data, total, ...rest }) => {\n        return {\n          data,\n          total,\n          pagination: paginationProperties,\n          ...rest,\n        };\n      });\n    },\n    getNextPageParam: (lastPage) => getNextPageParam(lastPage),\n    getPreviousPageParam: (lastPage) => getPreviousPageParam(lastPage),\n    ...queryOptions,\n    onSuccess: (data) => {\n      queryOptions?.onSuccess?.(data);\n\n      const notificationConfig =\n        typeof successNotification === \"function\"\n          ? successNotification(data, notificationValues, identifier)\n          : successNotification;\n\n      handleNotification(notificationConfig);\n    },\n    onError: (err: TError) => {\n      checkError(err);\n      queryOptions?.onError?.(err);\n\n      const notificationConfig =\n        typeof errorNotification === \"function\"\n          ? errorNotification(err, notificationValues, identifier)\n          : errorNotification;\n\n      handleNotification(notificationConfig, {\n        key: `${identifier}-useInfiniteList-notification`,\n        message: translate(\n          \"notifications.error\",\n          { statusCode: err.statusCode },\n          `Error (status code: ${err.statusCode})`,\n        ),\n        description: err.message,\n        type: \"error\",\n      });\n    },\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useInfiniteList\", preferLegacyKeys, resource?.name),\n    },\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResponse.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return { ...queryResponse, overtime: { elapsedTime } };\n};\n","import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport { RefineContext } from \"@contexts/refine\";\nimport { useInvalidate } from \"@hooks/invalidate\";\nimport { useResource } from \"@hooks/resource\";\n\nimport type {\n  BaseKey,\n  CrudFilter,\n  CrudSort,\n  MetaQuery,\n  Pagination,\n} from \"../../../contexts/data/types\";\nimport type { LiveEvent, LiveModeProps } from \"../../../contexts/live/types\";\nimport type { IRefineContext } from \"../../../contexts/refine/types\";\n\nexport type UseResourceSubscriptionProps = {\n  channel: string;\n  params?: {\n    ids?: BaseKey[];\n    id?: BaseKey;\n    /**\n     * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    pagination?: Pagination;\n    /**\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * @deprecated `sort` is deprecated. Use `sorters` instead.\n     */\n    sort?: CrudSort[];\n    sorters?: CrudSort[];\n    filters?: CrudFilter[];\n    subscriptionType: \"useList\" | \"useOne\" | \"useMany\";\n    [key: string]: any;\n  };\n  types: LiveEvent[\"type\"][];\n  resource?: string;\n  enabled?: boolean;\n  /**\n   * @deprecated use `meta.dataProviderName` instead.\n   */\n  dataProviderName?: string;\n  meta?: MetaQuery & { dataProviderName?: string };\n} & LiveModeProps;\n\nexport type PublishType = (event: LiveEvent) => void;\n\nexport const useResourceSubscription = ({\n  resource: resourceFromProp,\n  params,\n  channel,\n  types,\n  enabled = true,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  dataProviderName: dataProviderNameFromProps,\n  meta,\n}: UseResourceSubscriptionProps): void => {\n  const { resource, identifier } = useResource(resourceFromProp);\n\n  const { liveProvider } = useContext(LiveContext);\n  const {\n    liveMode: liveModeFromContext,\n    onLiveEvent: onLiveEventContextCallback,\n  } = useContext<IRefineContext>(RefineContext);\n\n  const liveMode = liveModeFromProp ?? liveModeFromContext;\n\n  const invalidate = useInvalidate();\n\n  const dataProviderName =\n    dataProviderNameFromProps ??\n    meta?.dataProviderName ??\n    resource?.meta?.dataProviderName;\n\n  useEffect(() => {\n    let subscription: any;\n\n    const callback = (event: LiveEvent) => {\n      if (liveMode === \"auto\") {\n        invalidate({\n          resource: identifier,\n          dataProviderName,\n          invalidates: [\"resourceAll\"],\n          invalidationFilters: {\n            type: \"active\",\n            refetchType: \"active\",\n          },\n          invalidationOptions: { cancelRefetch: false },\n        });\n      }\n\n      onLiveEvent?.(event);\n      onLiveEventContextCallback?.(event);\n    };\n\n    if (liveMode && liveMode !== \"off\" && enabled) {\n      subscription = liveProvider?.subscribe({\n        channel,\n        params: {\n          resource: resource?.name,\n          ...params,\n        },\n        types,\n        callback,\n        dataProviderName,\n        meta: {\n          ...meta,\n          dataProviderName,\n        },\n      });\n    }\n\n    return () => {\n      if (subscription) {\n        liveProvider?.unsubscribe(subscription);\n      }\n    };\n  }, [enabled]);\n};\n","import React, { type PropsWithChildren } from \"react\";\n\nimport type { ILiveContext } from \"./types\";\n\nexport const LiveContext = React.createContext<ILiveContext>({});\n\nexport const LiveContextProvider: React.FC<PropsWithChildren<ILiveContext>> = ({\n  liveProvider,\n  children,\n}) => {\n  return (\n    <LiveContext.Provider value={{ liveProvider }}>\n      {children}\n    </LiveContext.Provider>\n  );\n};\n","import { useCallback } from \"react\";\n\nimport {\n  type InvalidateOptions,\n  type InvalidateQueryFilters,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { pickDataProvider } from \"@definitions\";\nimport { useKeys, useResource } from \"@hooks\";\n\nimport type { BaseKey, IQueryKeys } from \"../../contexts/data/types\";\n\nexport type UseInvalidateProp = {\n  resource?: string;\n  id?: BaseKey;\n  dataProviderName?: string;\n  invalidates: Array<keyof IQueryKeys> | false;\n  invalidationFilters?: InvalidateQueryFilters;\n  invalidationOptions?: InvalidateOptions;\n};\n\nexport const useInvalidate = (): ((\n  props: UseInvalidateProp,\n) => Promise<void>) => {\n  const { resources } = useResource();\n  const queryClient = useQueryClient();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const invalidate = useCallback(\n    async ({\n      resource,\n      dataProviderName,\n      invalidates,\n      id,\n      invalidationFilters = { type: \"all\", refetchType: \"active\" },\n      invalidationOptions = { cancelRefetch: false },\n    }: UseInvalidateProp) => {\n      if (invalidates === false) {\n        return;\n      }\n      const dp = pickDataProvider(resource, dataProviderName, resources);\n\n      const queryKey = keys()\n        .data(dp)\n        .resource(resource ?? \"\");\n\n      await Promise.all(\n        invalidates.map((key) => {\n          switch (key) {\n            case \"all\":\n              return queryClient.invalidateQueries(\n                keys().data(dp).get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"list\":\n              return queryClient.invalidateQueries(\n                queryKey.action(\"list\").get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"many\":\n              return queryClient.invalidateQueries(\n                queryKey.action(\"many\").get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"resourceAll\":\n              return queryClient.invalidateQueries(\n                queryKey.get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            case \"detail\":\n              return queryClient.invalidateQueries(\n                queryKey\n                  .action(\"one\")\n                  .id(id || \"\")\n                  .get(preferLegacyKeys),\n                invalidationFilters,\n                invalidationOptions,\n              );\n            default:\n              return;\n          }\n        }),\n      );\n\n      return;\n    },\n    [],\n  );\n\n  return invalidate;\n};\n","import { useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport { useResourceWithRoute, useRouterContext } from \"@hooks\";\n\nimport type { BaseKey } from \"../../../contexts/data/types\";\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { ResourceRouterParams } from \"../../../contexts/router/legacy/types\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { pickResource } from \"../../../definitions/helpers/pick-resource\";\nimport { useParsed } from \"../../router/use-parsed\";\n\nexport type UseResourceLegacyProps = {\n  /**\n   * Determines which resource to use for redirection\n   * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n   */\n  resourceName?: string;\n  /**\n   * Determines which resource to use for redirection\n   * @default Resource name that it reads from route\n   */\n  resourceNameOrRouteName?: string;\n  /**\n   * Adds id to the end of the URL\n   * @deprecated resourceName deprecated. Use resourceNameOrRouteName instead # https://github.com/refinedev/refine/issues/1618\n   */\n  recordItemId?: BaseKey;\n};\n\n/**\n * Matches the resource by identifier.\n * If not provided, the resource from the route will be returned.\n * If your resource does not explicitly define an identifier, the resource name will be used.\n */\nexport type UseResourceParam = string | undefined;\n\ntype SelectReturnType<T extends boolean> = T extends true\n  ? { resource: IResourceItem; identifier: string }\n  : { resource: IResourceItem; identifier: string } | undefined;\n\nexport type UseResourceReturnType = {\n  resources: IResourceItem[];\n  resource?: IResourceItem;\n  /**\n   * @deprecated Use `resource.name` instead when you need to get the resource name.\n   */\n  resourceName?: string;\n  /**\n   * @deprecated This value may not always reflect the correct \"id\" value. Use `useResourceParams` to obtain the calculated \"id\"` or `useParsed` to obtain the id from the route instead.\n   */\n  id?: BaseKey;\n  /**\n   * @deprecated This value may not always reflect the correct \"action\" value. Use `useResourceParams` to obtain the calculated \"action\" or `useParsed` to obtain the action from the route instead.\n   */\n  action?: Action;\n  select: <T extends boolean = true>(\n    resourceName: string,\n    force?: T,\n  ) => SelectReturnType<T>;\n  identifier?: string;\n};\n\ntype UseResourceReturnTypeWithResource = UseResourceReturnType & {\n  resource: IResourceItem;\n  identifier: string;\n};\n\n/**\n * @deprecated Use `useResource` with `identifier` property instead. (`identifier` does not check by route name in new router)\n */\nexport function useResource(\n  props: UseResourceLegacyProps,\n): UseResourceReturnType;\nexport function useResource(): UseResourceReturnType;\nexport function useResource<TIdentifier = UseResourceParam>(\n  identifier: TIdentifier,\n): TIdentifier extends NonNullable<UseResourceParam>\n  ? UseResourceReturnTypeWithResource\n  : UseResourceReturnType;\n/**\n * `useResource` is used to get `resources` that are defined as property of the `<Refine>` component.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/resource/useResource} for more details.\n */\nexport function useResource(\n  args?: UseResourceLegacyProps | UseResourceParam,\n): UseResourceReturnType {\n  const { resources } = useContext(ResourceContext);\n\n  const routerType = useRouterType();\n\n  const params = useParsed();\n\n  const oldProps = {\n    resourceName: args && typeof args !== \"string\" ? args.resourceName : args,\n    resourceNameOrRouteName:\n      args && typeof args !== \"string\" ? args.resourceNameOrRouteName : args,\n    recordItemId:\n      args && typeof args !== \"string\" ? args.recordItemId : undefined,\n  };\n\n  const select = <T extends boolean = true>(\n    resourceName: string,\n    force = true,\n  ): SelectReturnType<T> => {\n    const isLegacy = routerType === \"legacy\";\n    const pickedResource = pickResource(resourceName, resources, isLegacy);\n\n    if (pickedResource) {\n      return {\n        resource: pickedResource,\n        identifier: pickedResource.identifier ?? pickedResource.name,\n      } as SelectReturnType<T>;\n    }\n\n    if (force) {\n      const resource: IResourceItem = {\n        name: resourceName,\n        identifier: resourceName,\n      };\n\n      const identifier = resource.identifier ?? resource.name;\n\n      return {\n        resource,\n        identifier,\n      } as SelectReturnType<T>;\n    }\n\n    return undefined as SelectReturnType<T>;\n  };\n\n  /**\n   * Legacy Router - Start\n   *\n   * using `useParams` and `route` to match resource and get params.\n   */\n  const resourceWithRoute = useResourceWithRoute();\n\n  const { useParams } = useRouterContext();\n\n  const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n  if (routerType === \"legacy\") {\n    const resourceKeyToCheck = oldProps.resourceNameOrRouteName\n      ? oldProps.resourceNameOrRouteName\n      : legacyParams.resource;\n\n    const legacyResource = resourceKeyToCheck\n      ? resourceWithRoute(resourceKeyToCheck)\n      : undefined;\n    const legacyId = oldProps?.recordItemId ?? legacyParams.id;\n    const legacyAction = legacyParams.action;\n    const legacyResourceName = oldProps?.resourceName ?? legacyResource?.name;\n    const legacyIdentifier = legacyResource?.identifier ?? legacyResource?.name;\n\n    return {\n      resources,\n      resource: legacyResource,\n      resourceName: legacyResourceName,\n      id: legacyId,\n      action: legacyAction,\n      select,\n      identifier: legacyIdentifier,\n    };\n  }\n  /** Legacy Router - End */\n\n  /** New Router */\n  let resource: IResourceItem | undefined = undefined;\n  // we try to pick the resource from props first\n  const identifier =\n    typeof args === \"string\" ? args : oldProps?.resourceNameOrRouteName;\n  if (identifier) {\n    const pickedFromProps = pickResource(identifier, resources);\n    if (pickedFromProps) {\n      resource = pickedFromProps;\n    } else {\n      resource = {\n        name: identifier as string,\n      };\n    }\n  } else if (params?.resource) {\n    resource = params.resource;\n  }\n\n  return {\n    resources,\n    resource,\n    resourceName: resource?.name,\n    id: params.id,\n    action: params.action,\n    select,\n    identifier: resource?.identifier ?? resource?.name,\n  };\n}\n","import React from \"react\";\n\nimport { legacyResourceTransform } from \"@definitions/helpers\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\n\nimport type { IResourceContext, IResourceItem, ResourceProps } from \"./types\";\n\nexport const ResourceContext = React.createContext<IResourceContext>({\n  resources: [],\n});\n\nexport const ResourceContextProvider: React.FC<\n  React.PropsWithChildren<{ resources: ResourceProps[] }>\n> = ({ resources: providedResources, children }) => {\n  const resources: IResourceItem[] = useDeepMemo(() => {\n    return legacyResourceTransform(providedResources ?? []);\n  }, [providedResources]);\n\n  return (\n    <ResourceContext.Provider value={{ resources }}>\n      {children}\n    </ResourceContext.Provider>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useMemoized } from \"@hooks/memoized\";\n\n/**\n * Hook that memoizes the given dependency array and checks the consecutive calls with deep equality and returns the same value as the first call if dependencies are not changed.\n * @internal\n */\nexport const useDeepMemo = <T,>(\n  fn: () => T,\n  dependencies: React.DependencyList,\n): T => {\n  const memoizedDependencies = useMemoized(dependencies);\n\n  const value = useMemo(fn, memoizedDependencies);\n\n  return value;\n};\n","import { useRef } from \"react\";\nimport isEqual from \"lodash-es/isEqual.js\";\n\n/**\n * Hook that memoizes the given value with deep equality.\n * @internal\n */\nexport const useMemoized = <T = unknown>(value: T): T => {\n  const ref = useRef(value);\n\n  if (!isEqual(ref.current, value)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n};\n","import React from \"react\";\n\n/**\n * This context is used to determine which router to use.\n *\n * This is a temporary solution until we remove the legacy router.\n */\n\nexport const RouterPickerContext = React.createContext<\"legacy\" | \"new\">(\"new\");\n\nexport const RouterPickerProvider = RouterPickerContext.Provider;\n\n/**\n * This is a temporary hook to determine which router to use.\n * It will be removed once the legacy router is removed.\n * @internal This is an internal hook.\n */\nexport const useRouterType = () => {\n  const value = React.useContext(RouterPickerContext);\n  return value;\n};\n","import React from \"react\";\nimport { useParse } from \"../use-parse\";\n\nexport const useParsed = <\n  TParams extends Record<string, any> = Record<string, any>,\n>() => {\n  const parse = useParse();\n\n  const parsed = React.useMemo(() => parse<TParams>(), [parse]);\n\n  return parsed;\n};\n","import React, { createContext, type PropsWithChildren } from \"react\";\nimport type { RouterProvider } from \"./types\";\n\nconst defaultRouterProvider = {};\n\nexport const RouterContext = createContext<RouterProvider>(\n  defaultRouterProvider,\n);\n\nexport const RouterContextProvider: React.FC<\n  PropsWithChildren<{ router?: RouterProvider }>\n> = ({ children, router }) => {\n  return (\n    <RouterContext.Provider value={router ?? defaultRouterProvider}>\n      {children}\n    </RouterContext.Provider>\n  );\n};\n","import { RouterContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\nimport type {\n  ParseFunction,\n  ParseResponse,\n} from \"../../../contexts/router/types\";\n\ntype UseParseType = () => <\n  TParams extends Record<string, any> = Record<string, any>,\n>() => ParseResponse<TParams>;\n\nexport const useParse: UseParseType = () => {\n  const routerContext = useContext(RouterContext);\n\n  const useParse = React.useMemo(\n    () =>\n      routerContext?.parse ??\n      (() =>\n        (() => {\n          return {};\n        }) as ParseFunction),\n    [routerContext?.parse],\n  );\n\n  const parse = useParse();\n\n  return parse as ReturnType<UseParseType>;\n};\n","import { useCallback, useContext } from \"react\";\n\nimport { ResourceContext } from \"@contexts/resource\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\n\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\n\nexport type UseResourceWithRouteReturnType = (route: string) => IResourceItem;\n\n/**\n * @deprecated Use `useResource` hook instead.\n * @internal This hook is for internal use only. And is kept for backward compatibility.\n */\nexport const useResourceWithRoute = (): UseResourceWithRouteReturnType => {\n  const { resources } = useContext(ResourceContext);\n\n  const resourceWithRoute = useCallback(\n    (route: string) => {\n      const picked = pickResource(route, resources, true);\n      if (picked) {\n        return picked;\n      }\n      return { name: route, route: route } as IResourceItem;\n    },\n    [resources],\n  );\n\n  return resourceWithRoute;\n};\n","import { useContext } from \"react\";\n\nimport { RefineContext } from \"@contexts/refine\";\n\nimport type { LiveModeProps } from \"../../../contexts/live/types\";\nimport type { IRefineContext } from \"../../../contexts/refine/types\";\n\nexport const useLiveMode = (\n  liveMode: LiveModeProps[\"liveMode\"],\n): LiveModeProps[\"liveMode\"] => {\n  const { liveMode: liveModeFromContext } =\n    useContext<IRefineContext>(RefineContext);\n\n  return liveMode ?? liveModeFromContext;\n};\n","import { useContext, useEffect } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\n\nimport type {\n  BaseKey,\n  CrudFilter,\n  CrudSort,\n  MetaQuery,\n  Pagination,\n} from \"../../../contexts/data/types\";\nimport type { LiveEvent } from \"../../../contexts/live/types\";\n\nexport type UseSubscriptionProps = {\n  /**\n   * Channel name to subscribe.\n   */\n  channel: string;\n  /**\n   * Callback that is run when new events from subscription arrive.\n   */\n  onLiveEvent: (event: LiveEvent) => void;\n  /**\n   * Type of events to subscribe. `\"*\"` means all events.\n   * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n   */\n  types?: LiveEvent[\"type\"][];\n  /**\n   * Determines subscription should subscribe or not.\n   * @type Array<\"deleted\" | \"updated\" | \"created\" | \"*\" | string>\n   */\n  enabled?: boolean;\n  params?: {\n    ids?: BaseKey[];\n    id?: BaseKey;\n    /**\n     * @deprecated `params.meta` is depcerated. Use `meta` directly from the root level instead.\n     */\n    meta?: MetaQuery;\n    /**\n     * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n     */\n    metaData?: MetaQuery;\n    pagination?: Pagination;\n    /**\n     * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n     */\n    hasPagination?: boolean;\n    /**\n     * @deprecated `sort` is deprecated, use `sorters` instead.\n     */\n    sort?: CrudSort[];\n    sorters?: CrudSort[];\n    filters?: CrudFilter[];\n    subscriptionType?: \"useList\" | \"useOne\" | \"useMany\";\n    resource?: string;\n    [key: string]: any;\n  };\n  /**\n   * @deprecated use `meta.dataProviderName` instead.\n   */\n  dataProviderName?: string;\n  meta?: MetaQuery & { dataProviderName?: string };\n};\n\nexport const useSubscription = ({\n  params,\n  channel,\n  types = [\"*\"],\n  enabled = true,\n  onLiveEvent,\n  dataProviderName = \"default\",\n  meta,\n}: UseSubscriptionProps): void => {\n  const { liveProvider } = useContext(LiveContext);\n\n  useEffect(() => {\n    let subscription: any;\n\n    if (enabled) {\n      subscription = liveProvider?.subscribe({\n        channel,\n        params,\n        types,\n        callback: onLiveEvent,\n        dataProviderName,\n        meta: {\n          ...meta,\n          dataProviderName,\n        },\n      });\n    }\n\n    return () => {\n      if (subscription) {\n        liveProvider?.unsubscribe(subscription);\n      }\n    };\n  }, [enabled]);\n};\n","import { useContext } from \"react\";\n\nimport { LiveContext } from \"@contexts/live\";\nimport type { LiveProvider } from \"../../../contexts/live/types\";\n\nexport const usePublish: () => NonNullable<LiveProvider>[\"publish\"] = () => {\n  const { liveProvider } = useContext(LiveContext);\n\n  return liveProvider?.publish;\n};\n","import { useContext } from \"react\";\n\nimport { UndoableQueueContext } from \"@contexts/undoableQueue\";\nimport type { IUndoableQueue } from \"../../../contexts/undoableQueue/types\";\n\nexport type UseCancelNotificationType = () => {\n  notifications: IUndoableQueue[];\n  notificationDispatch: React.Dispatch<any>;\n};\n\nexport const useCancelNotification: UseCancelNotificationType = () => {\n  const { notifications, notificationDispatch } =\n    useContext(UndoableQueueContext);\n\n  return { notifications, notificationDispatch };\n};\n","import React, {\n  createContext,\n  useReducer,\n  type PropsWithChildren,\n} from \"react\";\n\nimport isEqual from \"lodash-es/isEqual.js\";\n\nimport { UndoableQueue } from \"../../components\";\nimport {\n  ActionTypes,\n  type IUndoableQueue,\n  type IUndoableQueueContext,\n} from \"./types\";\n\nexport const UndoableQueueContext = createContext<IUndoableQueueContext>({\n  notifications: [],\n  notificationDispatch: () => false,\n});\n\nconst initialState: IUndoableQueue[] = [];\n\nexport const undoableQueueReducer = (state: IUndoableQueue[], action: any) => {\n  switch (action.type) {\n    case ActionTypes.ADD: {\n      const newState = state.filter((notificationItem: IUndoableQueue) => {\n        return !(\n          isEqual(notificationItem.id, action.payload.id) &&\n          notificationItem.resource === action.payload.resource\n        );\n      });\n\n      return [\n        ...newState,\n        {\n          ...action.payload,\n          isRunning: true,\n        },\n      ];\n    }\n    case ActionTypes.REMOVE:\n      return state.filter(\n        (notificationItem: IUndoableQueue) =>\n          !(\n            isEqual(notificationItem.id, action.payload.id) &&\n            notificationItem.resource === action.payload.resource\n          ),\n      );\n    case ActionTypes.DECREASE_NOTIFICATION_SECOND:\n      return state.map((notificationItem: IUndoableQueue) => {\n        if (\n          isEqual(notificationItem.id, action.payload.id) &&\n          notificationItem.resource === action.payload.resource\n        ) {\n          return {\n            ...notificationItem,\n            seconds: action.payload.seconds - 1000,\n          };\n        }\n        return notificationItem;\n      });\n    default:\n      return state;\n  }\n};\n\nexport const UndoableQueueContextProvider: React.FC<PropsWithChildren> = ({\n  children,\n}) => {\n  const [notifications, notificationDispatch] = useReducer(\n    undoableQueueReducer,\n    initialState,\n  );\n\n  const notificationData = { notifications, notificationDispatch };\n\n  return (\n    <UndoableQueueContext.Provider value={notificationData}>\n      {children}\n      {typeof window !== \"undefined\"\n        ? notifications.map((notification) => (\n            <UndoableQueue\n              key={`${notification.id}-${notification.resource}-queue`}\n              notification={notification}\n            />\n          ))\n        : null}\n    </UndoableQueueContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\n\nimport { NotificationContext } from \"@contexts/notification\";\nimport type { INotificationContext } from \"../../../contexts/notification/types\";\n\nexport const useNotification = (): INotificationContext => {\n  const { open, close } = useContext(NotificationContext);\n\n  return { open, close };\n};\n","import React, { createContext, type PropsWithChildren } from \"react\";\n\nimport type { INotificationContext } from \"./types\";\n\n/** @deprecated default value for notification context has no use and is an empty object.  */\nexport const defaultNotificationProvider: INotificationContext = {};\n\nexport const NotificationContext = createContext<INotificationContext>({});\n\nexport const NotificationContextProvider: React.FC<\n  PropsWithChildren<INotificationContext>\n> = ({ open, close, children }) => {\n  return (\n    <NotificationContext.Provider value={{ open, close }}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n","import { useCallback } from \"react\";\n\nimport { useNotification } from \"@hooks\";\n\nimport type { OpenNotificationParams } from \"../../../contexts/notification/types\";\n\nexport const useHandleNotification = (): typeof handleNotification => {\n  const { open } = useNotification();\n\n  const handleNotification = useCallback(\n    (\n      notification: OpenNotificationParams | false | undefined,\n      fallbackNotification?: OpenNotificationParams,\n    ) => {\n      if (notification !== false) {\n        if (notification) {\n          open?.(notification);\n        } else if (fallbackNotification) {\n          open?.(fallbackNotification);\n        }\n      }\n    },\n    [],\n  );\n\n  return handleNotification;\n};\n","import { useCallback, useContext } from \"react\";\n\nimport { I18nContext } from \"@contexts/i18n\";\n\n/**\n * If you need to change the locale at runtime, refine provides the `useSetLocale` hook.\n * It returns the changeLocale method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useSetLocale} for more details.\n */\nexport const useSetLocale = () => {\n  const { i18nProvider } = useContext(I18nContext);\n\n  return useCallback((lang: string) => i18nProvider?.changeLocale(lang), []);\n};\n","import React, { type PropsWithChildren } from \"react\";\n\nimport type { I18nProvider, II18nContext } from \"./types\";\n\n/** @deprecated default value for translation context has no use and is an empty object.  */\nexport const defaultProvider: Partial<I18nProvider> = {};\n\nexport const I18nContext = React.createContext<II18nContext>({});\n\nexport const I18nContextProvider: React.FC<PropsWithChildren<II18nContext>> = ({\n  children,\n  i18nProvider,\n}) => {\n  return (\n    <I18nContext.Provider\n      value={{\n        i18nProvider,\n      }}\n    >\n      {children}\n    </I18nContext.Provider>\n  );\n};\n","import { useContext, useMemo } from \"react\";\n\nimport { I18nContext } from \"@contexts/i18n\";\n\n/**\n * If you need to translate the texts in your own components, refine provides the `useTranslate` hook.\n * It returns the translate method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useTranslate} for more details.\n */\nexport const useTranslate = () => {\n  const { i18nProvider } = useContext(I18nContext);\n\n  const fn = useMemo(() => {\n    function translate(\n      key: string,\n      options?: any,\n      defaultMessage?: string,\n    ): string;\n    function translate(key: string, defaultMessage?: string): string;\n\n    function translate(\n      key: string,\n      options?: string | any,\n      defaultMessage?: string,\n    ) {\n      return (\n        i18nProvider?.translate(key, options, defaultMessage) ??\n        defaultMessage ??\n        (typeof options === \"string\" && typeof defaultMessage === \"undefined\"\n          ? options\n          : key)\n      );\n    }\n\n    return translate;\n  }, [i18nProvider]);\n\n  return fn;\n};\n","import { useCallback, useContext } from \"react\";\n\nimport { I18nContext } from \"@contexts/i18n\";\n\nexport type UseGetLocaleType = () => () => string | undefined;\n\n/**\n * If you need to know the current locale, refine provides the `useGetLocale` hook.\n * It returns the `getLocale` method from `i18nProvider` under the hood.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/translate/useGetLocale} for more details.\n */\nexport const useGetLocale: UseGetLocaleType = () => {\n  const { i18nProvider } = useContext(I18nContext);\n\n  return useCallback(() => i18nProvider?.getLocale(), []);\n};\n","import { useGetLocale } from \"./useGetLocale\";\nimport { useSetLocale } from \"./useSetLocale\";\nimport { useTranslate } from \"./useTranslate\";\n\n/**\n * It combines `useTranslate`, `useSetLocale` and `useGetLocale` hooks for a better developer experience.\n * It returns `i18nProvider` methods under the hood.\n * @returns `translate` method to translate the texts.\n * @returns `changeLocale` method to change the locale\n * @returns `getLocale` method to get the current locale.\n *\n * @see {@link https://refine.dev/docs/i18n/i18n-provider/} for more details.\n */\nexport const useTranslation = () => {\n  const translate = useTranslate();\n  const changeLocale = useSetLocale();\n  const getLocale = useGetLocale();\n\n  return {\n    translate,\n    changeLocale,\n    getLocale,\n  };\n};\n","import { useState } from \"react\";\n\nimport papaparse from \"papaparse\";\nimport warnOnce from \"warn-once\";\n\nimport {\n  downloadInBrowser,\n  pickDataProvider,\n  pickNotDeprecated,\n  useUserFriendlyName,\n} from \"@definitions\";\nimport { useDataProvider, useMeta, useResource } from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { MapDataFn } from \"./types\";\n\n// Old options interface taken from export-to-csv-fix-source-map@0.2.1\n// Kept here to ensure backward compatibility\nexport interface ExportOptions {\n  filename?: string;\n  fieldSeparator?: string;\n  quoteStrings?: string;\n  decimalSeparator?: string;\n  showLabels?: boolean;\n  showTitle?: boolean;\n  title?: string;\n  useTextFile?: boolean;\n  useBom?: boolean;\n  headers?: string[];\n  useKeysAsHeaders?: boolean;\n}\n\ntype UseExportOptionsType<\n  TData extends BaseRecord = BaseRecord,\n  TVariables = any,\n> = {\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   * @deprecated `resourceName` is deprecated. Use `resource` instead.\n   */\n  resourceName?: string;\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * A mapping function that runs for every record. Mapped data will be included in the file contents\n   */\n  mapData?: MapDataFn<TData, TVariables>;\n  /**\n   *  Sorts records\n   *  @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter?: CrudSort[];\n  /**\n   *  Sorts records\n   */\n  sorters?: CrudSort[];\n  /**\n   *  Filters records\n   */\n  filters?: CrudFilter[];\n  maxItemCount?: number;\n  /**\n   *  Requests to fetch data are made as batches by page size. By default, it is 20. Used for `getList` method of `DataProvider`\n   */\n  pageSize?: number;\n  /**\n   *  Used for exporting options\n   *  @type [Options](https://github.com/alexcaza/export-to-csv)\n   * @deprecated `exportOptions` is deprecated. Use `unparseConfig` instead.\n   */\n  exportOptions?: ExportOptions;\n  /**\n   *  Used for exporting options\n   *  @type [UnparseConfig](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/papaparse)\n   */\n  unparseConfig?: papaparse.UnparseConfig;\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n  /**\n   *  Callback to handle error events of this hook\n   */\n  onError?: (error: any) => void;\n  /**\n   *  Whether to generate download of the CSV in browser environments, defaults to true.\n   */\n  download?: boolean;\n};\n\ntype UseExportReturnType = {\n  isLoading: boolean;\n  triggerExport: () => Promise<string | undefined>;\n};\n\n/**\n * `useExport` hook allows you to make your resources exportable.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useExport} for more details.\n *\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TVariables - Values for params.\n *\n */\nexport const useExport = <\n  TData extends BaseRecord = BaseRecord,\n  TVariables = any,\n>({\n  resourceName,\n  resource: resourceFromProps,\n  sorter,\n  sorters,\n  filters,\n  maxItemCount,\n  pageSize = 20,\n  mapData = (item) => item as any,\n  exportOptions,\n  unparseConfig,\n  meta,\n  metaData,\n  dataProviderName,\n  onError,\n  download,\n}: UseExportOptionsType<TData, TVariables> = {}): UseExportReturnType => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dataProvider = useDataProvider();\n  const getMeta = useMeta();\n  const { resource, resources, identifier } = useResource(\n    pickNotDeprecated(resourceFromProps, resourceName),\n  );\n  const getFriendlyName = useUserFriendlyName();\n\n  const filename = `${getFriendlyName(\n    identifier,\n    \"plural\",\n  )}-${new Date().toLocaleString()}`;\n\n  const { getList } = dataProvider(\n    pickDataProvider(identifier, dataProviderName, resources),\n  );\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  const triggerExport = async () => {\n    setIsLoading(true);\n\n    let rawData: BaseRecord[] = [];\n\n    let current = 1;\n    let preparingData = true;\n    while (preparingData) {\n      try {\n        const { data, total } = await getList<TData>({\n          resource: resource?.name ?? \"\",\n          filters,\n          sort: pickNotDeprecated(sorters, sorter),\n          sorters: pickNotDeprecated(sorters, sorter),\n          pagination: {\n            current,\n            pageSize,\n            mode: \"server\",\n          },\n          meta: combinedMeta,\n          metaData: combinedMeta,\n        });\n\n        current++;\n\n        rawData.push(...data);\n\n        if (maxItemCount && rawData.length >= maxItemCount) {\n          rawData = rawData.slice(0, maxItemCount);\n          preparingData = false;\n        }\n\n        if (total === rawData.length) {\n          preparingData = false;\n        }\n      } catch (error) {\n        setIsLoading(false);\n        preparingData = false;\n\n        onError?.(error);\n\n        return;\n      }\n    }\n\n    const hasUnparseConfig =\n      typeof unparseConfig !== \"undefined\" && unparseConfig !== null;\n\n    warnOnce(\n      hasUnparseConfig &&\n        typeof exportOptions !== \"undefined\" &&\n        exportOptions !== null,\n      `[useExport]: resource: \"${identifier}\" \\n\\nBoth \\`unparseConfig\\` and \\`exportOptions\\` are set, \\`unparseConfig\\` will take precedence`,\n    );\n\n    const options: ExportOptions = {\n      filename,\n      useKeysAsHeaders: true,\n      useBom: true, // original default\n      title: \"My Generated Report\", // original default\n      quoteStrings: '\"', // original default\n      ...exportOptions,\n    };\n\n    warnOnce(\n      exportOptions?.decimalSeparator !== undefined,\n      `[useExport]: resource: \"${identifier}\" \\n\\nUse of \\`decimalSeparator\\` no longer supported, please use \\`mapData\\` instead.\\n\\nSee https://refine.dev/docs/api-reference/core/hooks/import-export/useExport/`,\n    );\n\n    if (!hasUnparseConfig) {\n      unparseConfig = {\n        // useKeysAsHeaders takes priority over options.headers\n        columns: options.useKeysAsHeaders ? undefined : options.headers,\n        delimiter: options.fieldSeparator,\n        header: options.showLabels || options.useKeysAsHeaders,\n        quoteChar: options.quoteStrings,\n        quotes: true,\n      };\n    } else {\n      unparseConfig = {\n        // Set to force quote for better compatibility\n        quotes: true,\n        ...unparseConfig,\n      };\n    }\n\n    let csv = papaparse.unparse(rawData.map(mapData as any), unparseConfig);\n    if (options.showTitle) {\n      csv = `${options.title}\\r\\n\\n${csv}`;\n    }\n\n    // Backward compatibility support for downloadInBrowser of the exported file, only works for browsers.\n    if (typeof window !== \"undefined\" && csv.length > 0 && (download ?? true)) {\n      const fileExtension = options.useTextFile ? \".txt\" : \".csv\";\n      const fileType = `text/${\n        options.useTextFile ? \"plain\" : \"csv\"\n      };charset=utf8;`;\n      const downloadFilename = `${(options.filename ?? \"download\").replace(\n        / /g,\n        \"_\",\n      )}${fileExtension}`;\n\n      downloadInBrowser(\n        downloadFilename,\n        `${options?.useBom ? \"\\ufeff\" : \"\"}${csv}`,\n        fileType,\n      );\n    }\n\n    setIsLoading(false);\n    return csv;\n  };\n\n  return {\n    isLoading,\n    triggerExport,\n  };\n};\n","import React from \"react\";\nimport warnOnce from \"warn-once\";\n\nimport {\n  useMeta,\n  useOne,\n  useCreate,\n  useUpdate,\n  useResourceParams,\n  useInvalidate,\n  useMutationMode,\n  useRefineOptions,\n  useLoadingOvertime,\n  useWarnAboutChange,\n  useRedirectionAfterSubmission,\n} from \"@hooks\";\n\nimport {\n  redirectPage,\n  asyncDebounce,\n  deferExecution,\n  pickNotDeprecated,\n} from \"@definitions/helpers\";\n\nimport type { UpdateParams } from \"../data/useUpdate\";\nimport type { UseCreateParams } from \"../data/useCreate\";\nimport type { UseFormProps, UseFormReturnType } from \"./types\";\nimport type {\n  BaseKey,\n  BaseRecord,\n  CreateResponse,\n  HttpError,\n  UpdateResponse,\n} from \"../../contexts/data/types\";\n\nexport type {\n  ActionParams,\n  UseFormProps,\n  UseFormReturnType,\n  AutoSaveIndicatorElements,\n  AutoSaveProps,\n  AutoSaveReturnType,\n  FormAction,\n  RedirectAction,\n  RedirectionTypes,\n  FormWithSyncWithLocationParams,\n} from \"./types\";\n\n/**\n * This hook orchestrates Refine's data hooks to create, edit, and clone data. It also provides a set of features to make it easier for users to implement their real world needs and handle edge cases such as redirects, invalidation, auto-save and more.\n *\n * @see {@link https://refine.dev/docs/data/hooks/use-form} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interface-references/#httperror `HttpError`}\n * @typeParam TVariables - Values for params. default `{}`\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n * @typeParam TResponse - Result data returned by the mutation function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}. Defaults to `TData`\n * @typeParam TResponseError - Custom error object that extends {@link https://refine.dev/docs/core/interface-references/#httperror `HttpError`}. Defaults to `TError`\n *\n */\nexport const useForm = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n  TData extends BaseRecord = TQueryFnData,\n  TResponse extends BaseRecord = TData,\n  TResponseError extends HttpError = TError,\n>(\n  props: UseFormProps<\n    TQueryFnData,\n    TError,\n    TVariables,\n    TData,\n    TResponse,\n    TResponseError\n  > = {},\n): UseFormReturnType<\n  TQueryFnData,\n  TError,\n  TVariables,\n  TData,\n  TResponse,\n  TResponseError\n> => {\n  const getMeta = useMeta();\n  const invalidate = useInvalidate();\n  const { redirect: defaultRedirect } = useRefineOptions();\n  const { mutationMode: defaultMutationMode } = useMutationMode();\n\n  const { setWarnWhen } = useWarnAboutChange();\n  const handleSubmitWithRedirect = useRedirectionAfterSubmission();\n\n  const pickedMeta = pickNotDeprecated(props.meta, props.metaData);\n  const mutationMode = props.mutationMode ?? defaultMutationMode;\n\n  const {\n    id,\n    setId,\n    resource,\n    identifier,\n    formAction: action,\n  } = useResourceParams({\n    resource: props.resource,\n    id: props.id,\n    action: props.action,\n  });\n\n  const [autosaved, setAutosaved] = React.useState(false);\n\n  const isEdit = action === \"edit\";\n  const isClone = action === \"clone\";\n  const isCreate = action === \"create\";\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickedMeta,\n  });\n\n  const isIdRequired = (isEdit || isClone) && Boolean(props.resource);\n  const isIdDefined = typeof props.id !== \"undefined\";\n  const isQueryDisabled = props.queryOptions?.enabled === false;\n\n  /**\n   * When a custom resource is provided through props, `id` will not be inferred from the URL to avoid any potential faulty requests.\n   * In this case, `id` is required to be passed through props.\n   * If `id` is not handled, a warning will be thrown in development mode.\n   */\n  warnOnce(\n    isIdRequired && !isIdDefined && !isQueryDisabled,\n    idWarningMessage(action, identifier, id),\n  );\n\n  /**\n   * Target action to redirect after form submission.\n   */\n  const redirectAction = redirectPage({\n    redirectFromProps: props.redirect,\n    action,\n    redirectOptions: defaultRedirect,\n  });\n\n  /**\n   * Redirection function to be used in internal redirects and to be provided to the user.\n   */\n  const redirect: UseFormReturnType[\"redirect\"] = (\n    redirect = isEdit ? \"list\" : \"edit\",\n    redirectId = id,\n    routeParams = {},\n  ) => {\n    handleSubmitWithRedirect({\n      redirect: redirect,\n      resource,\n      id: redirectId,\n      meta: { ...pickedMeta, ...routeParams },\n    });\n  };\n\n  const queryResult = useOne<TQueryFnData, TError, TData>({\n    resource: identifier,\n    id,\n    queryOptions: {\n      // Only enable the query if it's not a create action and the `id` is defined\n      enabled: !isCreate && id !== undefined,\n      ...props.queryOptions,\n    },\n    liveMode: props.liveMode,\n    onLiveEvent: props.onLiveEvent,\n    liveParams: props.liveParams,\n    meta: { ...combinedMeta, ...props.queryMeta },\n    dataProviderName: props.dataProviderName,\n  });\n\n  const createMutation = useCreate<TResponse, TResponseError, TVariables>({\n    mutationOptions: props.createMutationOptions,\n  });\n\n  const updateMutation = useUpdate<TResponse, TResponseError, TVariables>({\n    mutationOptions: props.updateMutationOptions,\n  });\n\n  const mutationResult = isEdit ? updateMutation : createMutation;\n  const isMutationLoading = mutationResult.isLoading;\n  const formLoading = isMutationLoading || queryResult.isFetching;\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: formLoading,\n    interval: props.overtimeOptions?.interval,\n    onInterval: props.overtimeOptions?.onInterval,\n  });\n\n  React.useEffect(() => {\n    // After `autosaved` is set to `true`, it won't be set to `false` again.\n    // Therefore, the `invalidate` function will be called only once at the end of the hooks lifecycle.\n    return () => {\n      if (\n        props.autoSave?.invalidateOnUnmount &&\n        autosaved &&\n        identifier &&\n        typeof id !== \"undefined\"\n      ) {\n        invalidate({\n          id,\n          invalidates: props.invalidates || [\"list\", \"many\", \"detail\"],\n          dataProviderName: props.dataProviderName,\n          resource: identifier,\n        });\n      }\n    };\n  }, [props.autoSave?.invalidateOnUnmount, autosaved]);\n\n  const onFinish = async (\n    values: TVariables,\n    { isAutosave = false }: { isAutosave?: boolean } = {},\n  ) => {\n    const isPessimistic = mutationMode === \"pessimistic\";\n\n    // Disable warning trigger when the form is being submitted\n    setWarnWhen(false);\n\n    // Redirect after a successful form submission\n    const onSuccessRedirect = (id?: BaseKey) => redirect(redirectAction, id);\n\n    const submissionPromise = new Promise<\n      CreateResponse<TResponse> | UpdateResponse<TResponse> | void\n    >((resolve, reject) => {\n      // Reject the mutation if the resource is not defined\n      if (!resource) return reject(missingResourceError);\n      // Reject the mutation if the `id` is not defined in edit action\n      // This line is commented out because the `id` might not be set for some cases and edit is done on a resource.\n      // if (isEdit && !id) return reject(missingIdError);\n      // Reject the mutation if the `id` is not defined in clone action\n      if (isClone && !id) return reject(missingIdError);\n      // Reject the mutation if there's no `values` passed\n      if (!values) return reject(missingValuesError);\n      // Auto Save is only allowed in edit action\n      if (isAutosave && !isEdit) return reject(autosaveOnNonEditError);\n\n      if (!isPessimistic && !isAutosave) {\n        // If the mutation mode is not pessimistic, handle the redirect immediately in an async manner\n        // `setWarnWhen` blocks the redirects until set to `false`\n        // If redirect is done before the value is properly set, it will be blocked.\n        // We're deferring the execution of the redirect to ensure that the value is set properly.\n        deferExecution(() => onSuccessRedirect());\n        // Resolve the promise immediately\n        resolve();\n      }\n\n      const variables:\n        | UpdateParams<TResponse, TResponseError, TVariables>\n        | UseCreateParams<TResponse, TResponseError, TVariables> = {\n        values,\n        resource: identifier ?? resource.name,\n        meta: { ...combinedMeta, ...props.mutationMeta },\n        metaData: { ...combinedMeta, ...props.mutationMeta },\n        dataProviderName: props.dataProviderName,\n        invalidates: isAutosave ? [] : props.invalidates,\n        successNotification: isAutosave ? false : props.successNotification,\n        errorNotification: isAutosave ? false : props.errorNotification,\n        // Update specific variables\n        ...(isEdit\n          ? {\n              id: id ?? \"\",\n              mutationMode,\n              undoableTimeout: props.undoableTimeout,\n              optimisticUpdateMap: props.optimisticUpdateMap,\n            }\n          : {}),\n      };\n\n      const { mutateAsync } = isEdit ? updateMutation : createMutation;\n\n      mutateAsync(variables as any, {\n        // Call user-defined `onMutationSuccess` and `onMutationError` callbacks if provided\n        // These callbacks will not have an effect on the submission promise\n        onSuccess: props.onMutationSuccess\n          ? (data, _, context) => {\n              props.onMutationSuccess?.(data, values, context, isAutosave);\n            }\n          : undefined,\n        onError: props.onMutationError\n          ? (error: TResponseError, _, context) => {\n              props.onMutationError?.(error, values, context, isAutosave);\n            }\n          : undefined,\n      })\n        // If the mutation mode is pessimistic, resolve the promise after the mutation is succeeded\n        .then((data) => {\n          if (isPessimistic && !isAutosave) {\n            deferExecution(() => onSuccessRedirect(data?.data?.id));\n          }\n          if (isAutosave) {\n            setAutosaved(true);\n          }\n          resolve(data);\n        })\n        // If the mutation mode is pessimistic, reject the promise after the mutation is failed\n        .catch(reject);\n    });\n\n    return submissionPromise;\n  };\n\n  const onFinishAutoSave = asyncDebounce(\n    (values: TVariables) => onFinish(values, { isAutosave: true }),\n    props.autoSave?.debounce || 1000,\n    \"Cancelled by debounce\",\n  );\n\n  const overtime = {\n    elapsedTime,\n  };\n\n  const autoSaveProps = {\n    status: updateMutation.status,\n    data: updateMutation.data,\n    error: updateMutation.error,\n  };\n\n  return {\n    onFinish,\n    onFinishAutoSave,\n    formLoading,\n    mutationResult,\n    mutation: mutationResult,\n    queryResult,\n    query: queryResult,\n    autoSaveProps,\n    id,\n    setId,\n    redirect,\n    overtime,\n  };\n};\n\nconst missingResourceError = new Error(\n  \"[useForm]: `resource` is not defined or not matched but is required\",\n);\n\nconst missingIdError = new Error(\n  \"[useForm]: `id` is not defined but is required in edit and clone actions\",\n);\n\nconst missingValuesError = new Error(\n  \"[useForm]: `values` is not provided but is required\",\n);\n\nconst autosaveOnNonEditError = new Error(\n  \"[useForm]: `autoSave` is only allowed in edit action\",\n);\n\nconst idWarningMessage = (action?: string, identifier?: string, id?: BaseKey) =>\n  `[useForm]: action: \"${action}\", resource: \"${identifier}\", id: ${id}\n\nIf you don't use the \\`setId\\` method to set the \\`id\\`, you should pass the \\`id\\` prop to \\`useForm\\`. Otherwise, \\`useForm\\` will not be able to infer the \\`id\\` from the current URL with custom resource provided.\n\nSee https://refine.dev/docs/data/hooks/use-form/#id-`;\n","import { useCallback } from \"react\";\n\nimport { useNavigation } from \"@hooks\";\n\nimport type { BaseKey, MetaDataQuery } from \"../../contexts/data/types\";\nimport type { IResourceItem } from \"../../contexts/resource/types\";\nimport type { RedirectAction } from \"../form/types\";\n\nexport type UseRedirectionAfterSubmissionType = () => (options: {\n  redirect: RedirectAction;\n  resource?: IResourceItem;\n  id?: BaseKey;\n  meta?: MetaDataQuery;\n}) => void;\n\nexport const useRedirectionAfterSubmission: UseRedirectionAfterSubmissionType =\n  () => {\n    const { show, edit, list, create } = useNavigation();\n\n    const handleSubmitWithRedirect = useCallback(\n      ({\n        redirect,\n        resource,\n        id,\n        meta = {},\n      }: {\n        redirect: RedirectAction;\n        resource?: IResourceItem;\n        id?: BaseKey;\n        meta?: MetaDataQuery;\n      }) => {\n        if (redirect && resource) {\n          if (!!resource.show && redirect === \"show\" && id) {\n            return show(resource, id, undefined, meta);\n          }\n\n          if (!!resource.edit && redirect === \"edit\" && id) {\n            return edit(resource, id, undefined, meta);\n          }\n\n          if (!!resource.create && redirect === \"create\") {\n            return create(resource, undefined, meta);\n          }\n\n          return list(resource, \"push\", meta);\n        }\n        return;\n      },\n      [],\n    );\n\n    return handleSubmitWithRedirect;\n  };\n","import { RouterContext } from \"@contexts/router\";\nimport React, { useContext } from \"react\";\n\nexport const useBack = () => {\n  const routerContext = useContext(RouterContext);\n\n  const useBack = React.useMemo(\n    () => routerContext?.back ?? (() => () => undefined),\n    [routerContext?.back],\n  );\n\n  const back = useBack();\n\n  return back;\n};\n","import React, { useCallback, useContext } from \"react\";\n\nimport { RouterContext } from \"@contexts/router\";\nimport { useResource } from \"@hooks/resource\";\n\nimport type { BaseKey } from \"../../../contexts/data/types\";\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type {\n  Action,\n  GoConfig as GoConfigBase,\n} from \"../../../contexts/router/types\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype ResourceWithoutId = {\n  /**\n   *  The name or identifier of the resource.\n   */\n  resource: string;\n  action: Extract<Action, \"create\" | \"list\">;\n  id?: never;\n  meta?: Record<string, unknown>;\n};\n\ntype ResourceWithId = {\n  /**\n   *  The name or identifier of the resource.\n   */\n  resource: string;\n  action: Extract<Action, \"edit\" | \"show\" | \"clone\">;\n  id: BaseKey;\n  meta?: Record<string, unknown>;\n};\n\nexport type Resource = ResourceWithoutId | ResourceWithId;\n\nexport type GoConfigWithResource = Omit<GoConfigBase, \"to\"> & {\n  to?: GoConfigBase[\"to\"] | Resource;\n};\n\nexport const useGo = () => {\n  const routerContext = useContext(RouterContext);\n  const { select: resourceSelect } = useResource();\n  const getToPath = useGetToPath();\n\n  const useGo = React.useMemo(\n    () => routerContext?.go ?? (() => () => undefined),\n    [routerContext?.go],\n  );\n\n  const goFromRouter = useGo();\n\n  const go = useCallback(\n    (config: GoConfigWithResource | GoConfigBase) => {\n      if (typeof config.to !== \"object\") {\n        return goFromRouter({ ...config, to: config.to });\n      }\n\n      // when config.to is an object, it means that we want to go to a resource.\n      // so we need to find the path for the resource.\n      const { resource } = resourceSelect(config.to.resource);\n      handleResourceErrors(config.to, resource);\n      const newTo = getToPath({\n        resource,\n        action: config.to.action,\n        meta: {\n          id: config.to.id,\n          ...config.to.meta,\n        },\n      });\n\n      return goFromRouter({\n        ...config,\n        to: newTo,\n      });\n    },\n    [resourceSelect, goFromRouter],\n  );\n\n  return go;\n};\n\n/**\n * handle errors for resource\n * @internal\n */\nexport const handleResourceErrors = (to: Resource, resource: IResourceItem) => {\n  if (!to?.action || !to?.resource) {\n    throw new Error(`[useGo]: \"action\" or \"resource\" is required.`);\n  }\n\n  if ([\"edit\", \"show\", \"clone\"].includes(to?.action) && !to.id) {\n    throw new Error(\n      `[useGo]: [action: ${to.action}] requires an \"id\" for resource [resource: ${to.resource}]`,\n    );\n  }\n\n  const actionUrl = resource[to.action];\n  if (!actionUrl) {\n    throw new Error(\n      `[useGo]: [action: ${to.action}] is not defined for [resource: ${to.resource}]`,\n    );\n  }\n};\n","import React from \"react\";\n\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { getActionRoutesFromResource } from \"../../../definitions/helpers/router\";\nimport { composeRoute } from \"../../../definitions/helpers/router/compose-route\";\nimport { useResource } from \"../../resource\";\nimport { useParsed } from \"../use-parsed\";\n\ntype UseToPathParams = {\n  resource?: IResourceItem;\n  action: Action;\n  meta?: Record<string, unknown>;\n  legacy?: boolean;\n};\n\ntype GetToPathFn = (params: UseToPathParams) => string | undefined;\n\n/**\n * Returns a function to get the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useGetToPath = (): GetToPathFn => {\n  const routerType = useRouterType();\n  const { resource: resourceFromRoute, resources } = useResource();\n  const parsed = useParsed();\n\n  const fn = React.useCallback(\n    ({ resource, action, meta }: UseToPathParams): string | undefined => {\n      const selectedResource = resource || resourceFromRoute;\n\n      if (!selectedResource) {\n        return undefined;\n      }\n\n      const actionRoutes = getActionRoutesFromResource(\n        selectedResource,\n        resources,\n        routerType === \"legacy\",\n      );\n\n      const actionRoute = actionRoutes.find(\n        (item) => item.action === action,\n      )?.route;\n\n      if (!actionRoute) {\n        return undefined;\n      }\n\n      const composed = composeRoute(\n        actionRoute,\n        selectedResource?.meta,\n        parsed,\n        meta,\n      );\n\n      return composed;\n    },\n    [resources, resourceFromRoute, parsed],\n  );\n\n  return fn;\n};\n","import { useRouterType } from \"@contexts/router/picker\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useResource, useRouterContext } from \"@hooks\";\nimport { useBack } from \"@hooks/router/use-back\";\nimport { useGo } from \"@hooks/router/use-go\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nimport type { BaseKey, MetaDataQuery } from \"../../contexts/data/types\";\nimport type { IResourceItem } from \"../../contexts/resource/types\";\n\nexport type HistoryType = \"push\" | \"replace\";\n\n/**\n * `refine` uses {@link https://reactrouter.com/en/main/hooks/use-navigate#usenavigate `React Router`} and comes with all redirects out of the box.\n * It allows you to manage your routing operations in refine.\n * Using this hook, you can manage all the routing operations of your application very easily.\n *\n * @internal This is an internal hook of refine. Do not use it directly.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/navigation/useNavigation} for more details.\n */\nexport const useNavigation = () => {\n  const { resources } = useResource();\n  const routerType = useRouterType();\n  const { useHistory } = useRouterContext();\n  const history = useHistory();\n  const parsed = useParsed();\n  const go = useGo();\n  const back = useBack();\n\n  const handleUrl = (url: string, type: HistoryType = \"push\") => {\n    if (routerType === \"legacy\") {\n      history[type](url);\n    } else {\n      go({ to: url, type });\n    }\n  };\n\n  const createUrl = (\n    resource: string | IResourceItem,\n    meta: MetaDataQuery = {},\n  ) => {\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const createActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"create\");\n\n      if (!createActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(\n        createActionRoute.route,\n        resourceItem?.meta,\n        parsed,\n        meta,\n      );\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const createActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"create\")?.route;\n\n    if (!createActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(createActionRoute, resourceItem?.meta, parsed, meta),\n      type: \"path\",\n    }) as string;\n  };\n\n  const editUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const editActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"edit\");\n\n      if (!editActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(editActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const editActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"edit\")?.route;\n\n    if (!editActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(editActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n    }) as string;\n  };\n\n  const cloneUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const cloneActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"clone\");\n\n      if (!cloneActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(cloneActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const cloneActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"clone\")?.route;\n\n    if (!cloneActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(cloneActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n    }) as string;\n  };\n\n  const showUrl = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    meta: MetaDataQuery = {},\n  ) => {\n    const encodedId = encodeURIComponent(id);\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const showActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"show\");\n\n      if (!showActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(showActionRoute.route, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      });\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const showActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"show\")?.route;\n\n    if (!showActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(showActionRoute, resourceItem?.meta, parsed, {\n        ...meta,\n        id: encodedId,\n      }),\n      type: \"path\",\n    }) as string;\n  };\n\n  const listUrl = (\n    resource: string | IResourceItem,\n    meta: MetaDataQuery = {},\n  ) => {\n    if (routerType === \"legacy\") {\n      const resourceItem =\n        typeof resource === \"string\"\n          ? pickResource(resource, resources, true) ?? {\n              name: resource,\n              route: resource,\n            }\n          : resource;\n\n      const listActionRoute = getActionRoutesFromResource(\n        resourceItem,\n        resources,\n        true,\n      ).find((r) => r.action === \"list\");\n\n      if (!listActionRoute) {\n        return \"\";\n      }\n\n      return composeRoute(\n        listActionRoute.route,\n        resourceItem?.meta,\n        parsed,\n        meta,\n      );\n    }\n    const resourceItem =\n      typeof resource === \"string\"\n        ? pickResource(resource, resources) ?? { name: resource }\n        : resource;\n\n    const listActionRoute = getActionRoutesFromResource(\n      resourceItem,\n      resources,\n    ).find((r) => r.action === \"list\")?.route;\n\n    if (!listActionRoute) {\n      return \"\";\n    }\n\n    return go({\n      to: composeRoute(listActionRoute, resourceItem?.meta, parsed, meta),\n      type: \"path\",\n    }) as string;\n  };\n\n  const create = (\n    resource: string | IResourceItem,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(createUrl(resource, meta), type);\n  };\n\n  const edit = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(editUrl(resource, id, meta), type);\n  };\n\n  const clone = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(cloneUrl(resource, id, meta), type);\n  };\n\n  const show = (\n    resource: string | IResourceItem,\n    id: BaseKey,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(showUrl(resource, id, meta), type);\n  };\n\n  const list = (\n    resource: string | IResourceItem,\n    type: HistoryType = \"push\",\n    meta: MetaDataQuery = {},\n  ) => {\n    handleUrl(listUrl(resource, meta), type);\n  };\n\n  /**\n   * @deprecated Please use `useGo` hook instead.\n   */\n  const push = (path: string, ...rest: unknown[]) => {\n    if (routerType === \"legacy\") {\n      history.push(path, ...rest);\n    } else {\n      go({ to: path, type: \"push\" });\n    }\n  };\n\n  /**\n   * @deprecated Please use `useGo` hook instead.\n   */\n  const replace = (path: string, ...rest: unknown[]) => {\n    if (routerType === \"legacy\") {\n      history.replace(path, ...rest);\n    } else {\n      go({ to: path, type: \"replace\" });\n    }\n  };\n\n  /**\n   * @deprecated Please use `useBack` hook instead.\n   */\n  const goBack = () => {\n    if (routerType === \"legacy\") {\n      history.goBack();\n    } else {\n      back();\n    }\n  };\n\n  return {\n    create,\n    createUrl,\n    edit,\n    editUrl,\n    clone,\n    cloneUrl,\n    show,\n    showUrl,\n    list,\n    listUrl,\n    push,\n    replace,\n    goBack,\n  };\n};\n","import warnOnce from \"warn-once\";\nimport { useMeta, useOne, useResourceParams, useLoadingOvertime } from \"@hooks\";\nimport { pickNotDeprecated } from \"@definitions/helpers\";\n\nimport type { UseShowProps, UseShowReturnType } from \"./types\";\nimport type { BaseKey, BaseRecord, HttpError } from \"../../contexts/data/types\";\n\nexport type {\n  UseShowProps,\n  UseShowReturnType,\n  useShowProps,\n  useShowReturnType,\n} from \"./types\";\n\n/**\n * `useShow` hook allows you to fetch the desired record.\n * It uses `getOne` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/core/refine-component `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/data/hooks/use-show} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/core/interface-references/#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/core/interface-references/#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\nexport const useShow = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  resource: resourceFromProp,\n  id,\n  meta,\n  metaData,\n  queryOptions,\n  overtimeOptions,\n  ...useOneProps\n}: UseShowProps<TQueryFnData, TError, TData> = {}): UseShowReturnType<\n  TData,\n  TError\n> => {\n  const {\n    resource,\n    identifier,\n    id: showId,\n    setId: setShowId,\n  } = useResourceParams({\n    id,\n    resource: resourceFromProp,\n  });\n\n  const getMeta = useMeta();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  warnOnce(\n    Boolean(resourceFromProp) && !showId,\n    idWarningMessage(identifier, showId),\n  );\n\n  const queryResult = useOne<TQueryFnData, TError, TData>({\n    resource: identifier,\n    id: showId ?? \"\",\n    queryOptions: {\n      enabled: showId !== undefined,\n      ...queryOptions,\n    },\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    ...useOneProps,\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResult.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return {\n    queryResult,\n    query: queryResult,\n    showId,\n    setShowId,\n    overtime: { elapsedTime },\n  };\n};\n\nconst idWarningMessage = (identifier?: string, id?: BaseKey) =>\n  `[useShow]: resource: \"${identifier}\", id: ${id} \\n\\nIf you don't use the \\`setShowId\\` method to set the \\`showId\\`, you should pass the \\`id\\` prop to \\`useShow\\`. Otherwise, \\`useShow\\` will not be able to infer the \\`id\\` from the current URL. \\n\\nSee https://refine.dev/docs/data/hooks/use-show/#resource`;\n","import { useEffect, useState } from \"react\";\n\nimport chunk from \"lodash-es/chunk.js\";\nimport papaparse from \"papaparse\";\n\nimport {\n  importCSVMapper,\n  pickNotDeprecated,\n  sequentialPromises,\n} from \"@definitions\";\nimport { useCreate, useCreateMany, useMeta, useResource } from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  HttpError,\n  MetaQuery,\n} from \"../../contexts/data/types\";\nimport type { UseCreateReturnType } from \"../../hooks/data/useCreate\";\nimport type { UseCreateManyReturnType } from \"../../hooks/data/useCreateMany\";\nimport type { MapDataFn } from \"../export/types\";\n\nexport type ImportSuccessResult<TVariables, TData> = {\n  request: TVariables[];\n  type: \"success\";\n  response: TData[];\n};\n\nexport type ImportErrorResult<TVariables> = {\n  request: TVariables[];\n  type: \"error\";\n  response: HttpError[];\n};\n\nexport type OnFinishParams<TVariables, TData> = {\n  succeeded: ImportSuccessResult<TVariables, TData>[];\n  errored: ImportErrorResult<TVariables>[];\n};\n\nexport type OnProgressParams = {\n  totalAmount: number;\n  processedAmount: number;\n};\n\nexport type ImportOptions<\n  TItem,\n  TVariables = any,\n  TData extends BaseRecord = BaseRecord,\n> = {\n  /**\n   * Resource name for API data interactions.\n   * @default Resource name that it reads from route\n   * @deprecated `resourceName` is deprecated. Use `resource` instead.\n   */\n  resourceName?: string;\n  /**\n   * Resource name for API data interactions.\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * A mapping function that runs for every record. Mapped data will be included in the file contents.\n   */\n  mapData?: MapDataFn<TItem, TVariables>;\n  /**\n   * Custom Papa Parse options.\n   * @type [`ParseConfig`](https://www.papaparse.com/docs)\n   */\n  paparseOptions?: papaparse.ParseConfig;\n  /**\n   * Requests batch size. If it is 1, all records are sent one by one. By default, it is [`Number.MAX_SAFE_INTEGER`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER) to send all records in one batch. If it is more than 1, `createMany` should be implemented on DataProvider.\n   */\n  batchSize?: number;\n  /**\n   * Called with errors and successful responses when all requests are sent.\n   */\n  onFinish?: (results: OnFinishParams<TVariables, TData>) => void;\n  /**\n   *  Metadata query for `dataProvider`\n   */\n  meta?: MetaQuery;\n  /**\n   *  Metadata query for `dataProvider`\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   *  A callback function that returns a current state of uploading process.\n   *\n   *  Ex: `percentage = onProgressParams.processedAmount / onProgressParams.totalAmount * 100`\n   */\n  onProgress?: (onProgressParams: OnProgressParams) => void;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n};\n\nexport type CreatedValuesType<TVariables, TData> =\n  | ImportSuccessResult<TVariables, TData>\n  | ImportErrorResult<TVariables>;\n\nexport type HandleChangeType<TVariables, TData> = (onChangeParams: {\n  file: Partial<File>;\n}) => Promise<CreatedValuesType<TVariables, TData>[]>;\n\nexport type UseImportInputPropsType = {\n  type: \"file\";\n  accept: string;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type UseImportReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TVariables = {},\n  TError extends HttpError = HttpError,\n> = {\n  inputProps: UseImportInputPropsType;\n  mutationResult:\n    | UseCreateReturnType<TData, TError, TVariables>\n    | UseCreateManyReturnType<TData, TError, TVariables>;\n  isLoading: boolean;\n  handleChange: HandleChangeType<TVariables, TData>;\n};\n\n/**\n * `useImport` hook allows you to handle your csv import logic easily.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/import-export/useImport} for more details.\n *\n * @typeParam TItem - Interface of parsed csv data\n * @typeParam TData - Result data of the query extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences/#httperror `HttpError`}\n * @typeParam TVariables - Values for mutation function\n *\n */\nexport const useImport = <\n  TItem = any,\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = any,\n>({\n  resourceName,\n  resource: resourceFromProps,\n  mapData = (item) => item as unknown as TVariables,\n  paparseOptions,\n  batchSize = Number.MAX_SAFE_INTEGER,\n  onFinish,\n  meta,\n  metaData,\n  onProgress,\n  dataProviderName,\n}: ImportOptions<TItem, TVariables, TData> = {}): UseImportReturnType<\n  TData,\n  TVariables,\n  TError\n> => {\n  const [processedAmount, setProcessedAmount] = useState<number>(0);\n  const [totalAmount, setTotalAmount] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { resource, identifier } = useResource(\n    resourceFromProps ?? resourceName,\n  );\n\n  const getMeta = useMeta();\n\n  const createMany = useCreateMany<TData, TError, TVariables>();\n  const create = useCreate<TData, TError, TVariables>();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  let mutationResult:\n    | UseCreateReturnType<TData, TError, TVariables>\n    | UseCreateManyReturnType<TData, TError, TVariables>;\n\n  if (batchSize === 1) {\n    mutationResult = create;\n  } else {\n    mutationResult = createMany;\n  }\n\n  const handleCleanup = () => {\n    setTotalAmount(0);\n    setProcessedAmount(0);\n    setIsLoading(false);\n  };\n\n  const handleFinish = (\n    createdValues: CreatedValuesType<TVariables, TData>[],\n  ) => {\n    const result = {\n      succeeded: createdValues.filter(\n        (item) => item.type === \"success\",\n      ) as unknown as ImportSuccessResult<TVariables, TData>[],\n      errored: createdValues.filter(\n        (item) => item.type === \"error\",\n      ) as unknown as ImportErrorResult<TVariables>[],\n    };\n\n    onFinish?.(result);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    onProgress?.({ totalAmount, processedAmount });\n  }, [totalAmount, processedAmount]);\n\n  const handleChange: HandleChangeType<TVariables, TData> = ({ file }) => {\n    handleCleanup();\n    return new Promise<CreatedValuesType<TVariables, TData>[]>((resolve) => {\n      setIsLoading(true);\n      papaparse.parse(file as any, {\n        complete: async ({ data }: { data: unknown[][] }) => {\n          const values = importCSVMapper(data, mapData);\n\n          setTotalAmount(values.length);\n\n          if (batchSize === 1) {\n            // Create Processor Functions\n            const valueFns = values.map((value) => {\n              const fn = async () => {\n                const response = await create.mutateAsync({\n                  resource: identifier ?? \"\",\n                  values: value,\n                  successNotification: false,\n                  errorNotification: false,\n                  dataProviderName,\n                  meta: combinedMeta,\n                  metaData: combinedMeta,\n                });\n\n                return { response, value };\n              };\n              return fn;\n            });\n            // Sequentially run processor functions and process resolves/rejects\n            const createdValues = await sequentialPromises(\n              valueFns,\n              ({ response, value }) => {\n                setProcessedAmount((currentAmount) => {\n                  return currentAmount + 1;\n                });\n\n                return {\n                  response: [response.data],\n                  type: \"success\",\n                  request: [value],\n                } as ImportSuccessResult<TVariables, TData>;\n              },\n              (error: HttpError, index) => {\n                return {\n                  response: [error],\n                  type: \"error\",\n                  request: [values[index]],\n                } as ImportErrorResult<TVariables>;\n              },\n            );\n            // Resolve with created values\n            resolve(createdValues);\n          } else {\n            // Create Chunks\n            const chunks = chunk(values, batchSize);\n            // Create Chunk Processor Functions\n            const chunkedFns = chunks.map((chunkedValues) => {\n              const fn = async () => {\n                const response = await createMany.mutateAsync({\n                  resource: identifier ?? \"\",\n                  values: chunkedValues,\n                  successNotification: false,\n                  errorNotification: false,\n                  dataProviderName,\n                  meta: combinedMeta,\n                  metaData: combinedMeta,\n                });\n\n                return {\n                  response,\n                  value: chunkedValues,\n                  currentBatchLength: chunkedValues.length,\n                };\n              };\n\n              return fn;\n            });\n            // Sequentially run chunked functions and process resolves/rejects\n            const createdValues = await sequentialPromises(\n              chunkedFns,\n              ({ response, currentBatchLength, value }) => {\n                setProcessedAmount((currentAmount) => {\n                  return currentAmount + currentBatchLength;\n                });\n\n                return {\n                  response: response.data,\n                  type: \"success\",\n                  request: value,\n                } as ImportSuccessResult<TVariables, TData>;\n              },\n              (error: HttpError, index) => {\n                return {\n                  response: [error],\n                  type: \"error\",\n                  request: chunks[index],\n                } as ImportErrorResult<TVariables>;\n              },\n            );\n            // resolve with all created values\n            resolve(createdValues);\n          }\n        },\n\n        ...paparseOptions,\n      });\n    }).then((createdValues) => {\n      handleFinish(createdValues);\n      return createdValues;\n    });\n  };\n\n  return {\n    inputProps: {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files.length > 0) {\n          handleChange({ file: event.target.files[0] });\n        }\n      },\n    },\n    mutationResult,\n    isLoading,\n    handleChange,\n  };\n};\n","import { useCallback, useState } from \"react\";\n\nexport type useModalReturnType = {\n  visible: boolean;\n  show: () => void;\n  close: () => void;\n};\n\nexport type useModalProps = {\n  /**\n   * Initial state of the modal\n   */\n  defaultVisible?: boolean;\n};\n\nexport const useModal = ({\n  defaultVisible = false,\n}: useModalProps = {}): useModalReturnType => {\n  const [visible, setVisible] = useState(defaultVisible);\n\n  const show = useCallback(() => setVisible(true), [visible]);\n  const close = useCallback(() => setVisible(false), [visible]);\n\n  return {\n    visible,\n    show,\n    close,\n  };\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { useGetToPath } from \"../use-get-to-path\";\n\ntype UseToPathParams = {\n  resource?: IResourceItem;\n  action: Action;\n  meta?: Record<string, unknown>;\n  legacy?: boolean;\n};\n\n/**\n * Returns the route for a given action and resource.\n * If resource is not provided, it will use the resource from the route.\n * If the resource is not found, it will return undefined.\n * If the action is not found, it will return undefined.\n * `meta` can be provided to compose the routes with parameters. (Can be used for nested routes.)\n */\nexport const useToPath = ({\n  resource,\n  action,\n  meta,\n  legacy,\n}: UseToPathParams): string | undefined => {\n  const getToPath = useGetToPath();\n\n  return getToPath({ resource, action, meta, legacy });\n};\n","import React, { type Ref, forwardRef, useContext } from \"react\";\nimport { useGo } from \"@hooks/router\";\nimport { RouterContext } from \"@contexts/router\";\nimport type { GoConfigWithResource } from \"../../hooks/router/use-go\";\nimport warnOnce from \"warn-once\";\n\ntype LinkPropsWithGo = {\n  go: Omit<GoConfigWithResource, \"type\">;\n};\n\ntype LinkPropsWithTo = {\n  to: string;\n};\n\nexport type LinkProps<TProps = {}> = React.PropsWithChildren<\n  (LinkPropsWithGo | LinkPropsWithTo) & TProps\n>;\n\n/**\n * @param to The path to navigate to.\n * @param go The useGo.go params to navigate to. If `to` provided, this will be ignored.\n * @returns routerProvider.Link if it is provided, otherwise an anchor tag.\n */\nconst LinkComponent = <TProps = {}>(\n  props: LinkProps<TProps>,\n  ref: Ref<Element>,\n) => {\n  const routerContext = useContext(RouterContext);\n  const LinkFromContext = routerContext?.Link;\n\n  const goFunction = useGo();\n\n  let resolvedTo = \"\";\n  if (\"go\" in props) {\n    if (!routerContext?.go) {\n      warnOnce(\n        true,\n        \"[Link]: `routerProvider` is not found. To use `go`, Please make sure that you have provided the `routerProvider` for `<Refine />` https://refine.dev/docs/routing/router-provider/ \\n\",\n      );\n    }\n    resolvedTo = goFunction({ ...props.go, type: \"path\" }) as string;\n  }\n  if (\"to\" in props) {\n    resolvedTo = props.to;\n  }\n\n  if (LinkFromContext) {\n    return (\n      <LinkFromContext\n        ref={ref}\n        {...props}\n        to={resolvedTo}\n        // This is a workaround to avoid passing `go` to the Link component.\n        go={undefined}\n      />\n    );\n  }\n  return (\n    <a\n      ref={ref}\n      href={resolvedTo}\n      {...props}\n      // This is a workaround to avoid passing `go` and `to` to the anchor tag.\n      to={undefined}\n      go={undefined}\n    />\n  );\n};\n\nexport const Link = forwardRef(LinkComponent) as <T = {}>(\n  props: LinkProps<T> & { ref?: Ref<Element> },\n) => ReturnType<typeof LinkComponent>;\n","import { Link } from \"../../../components/link\";\n\nexport const useLink = () => {\n  return Link;\n};\n","import { useContext } from \"react\";\n\nimport { LegacyRouterContext, defaultProvider } from \"@contexts/router/legacy\";\n\nexport const useRouterContext = () => {\n  const routerContextValues = useContext(LegacyRouterContext);\n\n  const { useHistory, useLocation, useParams, Prompt, Link, routes } =\n    routerContextValues ?? defaultProvider;\n\n  return {\n    useHistory,\n    useLocation,\n    useParams,\n    Prompt,\n    Link,\n    routes,\n  };\n};\n","import React, { type PropsWithChildren } from \"react\";\n\nimport type { ILegacyRouterContext } from \"./types\";\n\nexport const defaultProvider: ILegacyRouterContext = {\n  useHistory: () => false,\n  useLocation: () => false,\n  useParams: () => ({}) as any,\n  Prompt: () => null,\n  Link: () => null,\n};\n\nexport const LegacyRouterContext =\n  React.createContext<ILegacyRouterContext>(defaultProvider);\n\nexport const LegacyRouterContextProvider: React.FC<\n  PropsWithChildren<Partial<ILegacyRouterContext>>\n> = ({\n  children,\n  useHistory,\n  useLocation,\n  useParams,\n  Prompt,\n  Link,\n  routes,\n}) => {\n  return (\n    <LegacyRouterContext.Provider\n      value={{\n        useHistory: useHistory ?? defaultProvider.useHistory,\n        useLocation: useLocation ?? defaultProvider.useLocation,\n        useParams: useParams ?? defaultProvider.useParams,\n        Prompt: Prompt ?? defaultProvider.Prompt,\n        Link: Link ?? defaultProvider.Link,\n        routes: routes ?? defaultProvider.routes,\n      }}\n    >\n      {children}\n    </LegacyRouterContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseQueryOptions,\n  type UseQueryResult,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { useKeys } from \"@hooks/useKeys\";\nimport type {\n  CanParams,\n  CanReturnType,\n} from \"../../../contexts/accessControl/types\";\n\nexport type UseCanProps = CanParams & {\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\n/**\n * `useCan` uses the `can` as the query function for `react-query`'s {@link https://react-query.tanstack.com/guides/queries `useQuery`}. It takes the parameters that `can` takes. It can also be configured with `queryOptions` for `useQuery`. Returns the result of `useQuery`.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/accessControl/useCan} for more details.\n *\n * @typeParam CanParams {@link https://refine.dev/docs/core/interfaceReferences#canparams}\n * @typeParam CanReturnType {@link https://refine.dev/docs/core/interfaceReferences#canreturntype}\n *\n */\nexport const useCan = ({\n  action,\n  resource,\n  params,\n  queryOptions: hookQueryOptions,\n}: UseCanProps): UseQueryResult<CanReturnType> => {\n  const { can, options: globalOptions } = useContext(AccessControlContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const { queryOptions: globalQueryOptions } = globalOptions || {};\n\n  const mergedQueryOptions = {\n    ...globalQueryOptions,\n    ...hookQueryOptions,\n  };\n\n  /**\n   * Since `react-query` stringifies the query keys, it will throw an error for a circular dependency if we include `React.ReactNode` elements inside the keys.\n   * The feature in #2220(https://github.com/refinedev/refine/issues/2220) includes such change and to fix this, we need to remove `icon` property in the `resource`\n   */\n  const { resource: _resource, ...paramsRest } = params ?? {};\n\n  const sanitizedResource = sanitizeResource(_resource);\n\n  const queryResponse = useQuery<CanReturnType>({\n    queryKey: keys()\n      .access()\n      .resource(resource)\n      .action(action)\n      .params({\n        params: { ...paramsRest, resource: sanitizedResource },\n        enabled: mergedQueryOptions?.enabled,\n      })\n      .get(preferLegacyKeys),\n    // Enabled check for `can` is enough to be sure that it's defined in the query function but TS is not smart enough to know that.\n    queryFn: () =>\n      can?.({\n        action,\n        resource,\n        params: { ...paramsRest, resource: sanitizedResource },\n      }) ?? Promise.resolve({ can: true }),\n    enabled: typeof can !== \"undefined\",\n    ...mergedQueryOptions,\n    meta: {\n      ...mergedQueryOptions?.meta,\n      ...getXRay(\"useCan\", preferLegacyKeys, resource, [\n        \"useButtonCanAccess\",\n        \"useNavigationButton\",\n      ]),\n    },\n    retry: false,\n  });\n\n  return typeof can === \"undefined\"\n    ? ({ data: { can: true } } as typeof queryResponse)\n    : queryResponse;\n};\n","import React, { type PropsWithChildren } from \"react\";\n\nimport type {\n  IAccessControlContext,\n  IAccessControlContextReturnType,\n} from \"./types\";\n\n/** @deprecated default value for access control context has no use and is an empty object. */\nexport const defaultAccessControlContext = {} as IAccessControlContext;\n\nexport const AccessControlContext =\n  React.createContext<IAccessControlContextReturnType>({\n    options: {\n      buttons: { enableAccessControl: true, hideIfUnauthorized: false },\n    },\n  });\n\nexport const AccessControlContextProvider: React.FC<\n  PropsWithChildren<IAccessControlContext>\n> = ({ can, children, options }) => {\n  return (\n    <AccessControlContext.Provider\n      value={{\n        can,\n        options: options\n          ? {\n              ...options,\n              buttons: {\n                enableAccessControl: true,\n                hideIfUnauthorized: false,\n                ...options.buttons,\n              },\n            }\n          : {\n              buttons: {\n                enableAccessControl: true,\n                hideIfUnauthorized: false,\n              },\n              queryOptions: undefined,\n            },\n      }}\n    >\n      {children}\n    </AccessControlContext.Provider>\n  );\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\n\n/**\n * Remove all properties that are non-serializable from a resource object.\n */\nexport const sanitizeResource = (\n  resource?: Partial<IResourceItem> &\n    Required<Pick<IResourceItem, \"name\">> & { children?: unknown },\n):\n  | (Partial<IResourceItem> & Required<Pick<IResourceItem, \"name\">>)\n  | undefined => {\n  if (!resource) {\n    return undefined;\n  }\n\n  const {\n    icon,\n    list,\n    edit,\n    create,\n    show,\n    clone,\n    children,\n    meta,\n    options,\n    ...restResource\n  } = resource;\n\n  const { icon: _metaIcon, ...restMeta } = meta ?? {};\n  const { icon: _optionsIcon, ...restOptions } = options ?? {};\n\n  return {\n    ...restResource,\n    ...(meta ? { meta: restMeta } : {}),\n    ...(options ? { options: restOptions } : {}),\n  };\n};\n","import React from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\n\nimport type { IAccessControlContext } from \"../../contexts/accessControl/types\";\n\nexport const useCanWithoutCache = (): IAccessControlContext => {\n  const { can: canFromContext } = React.useContext(AccessControlContext);\n\n  const can = React.useMemo(() => {\n    if (!canFromContext) {\n      return undefined;\n    }\n\n    const canWithSanitizedResource: NonNullable<typeof canFromContext> =\n      async ({ params, ...rest }) => {\n        const sanitizedResource = params?.resource\n          ? sanitizeResource(params.resource)\n          : undefined;\n\n        return canFromContext({\n          ...rest,\n          ...(params\n            ? {\n                params: {\n                  ...params,\n                  resource: sanitizedResource,\n                },\n              }\n            : {}),\n        });\n      };\n\n    return canWithSanitizedResource;\n  }, [canFromContext]);\n\n  return { can };\n};\n","import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\n\nimport type {\n  QueryObserverResult,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport debounce from \"lodash-es/debounce.js\";\nimport get from \"lodash-es/get.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\n\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport { useList, useMany, useMeta } from \"@hooks\";\n\nimport type {\n  BaseKey,\n  BaseOption,\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  GetListResponse,\n  GetManyResponse,\n  HttpError,\n  MetaQuery,\n  Pagination,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport type { BaseListProps } from \"../data/useList\";\nimport { useResource } from \"../resource/useResource/index\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\nexport type SelectedOptionsOrder = \"in-place\" | \"selected-first\";\n\nexport type UseSelectProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource: string;\n  /**\n   * Set the option's label value\n   * @default `\"title\"`\n   */\n  optionLabel?:\n    | (keyof TData extends string ? keyof TData : never)\n    | ((item: TData) => string);\n  /**\n   * Set the option's value\n   * @default `\"id\"`\n   */\n  optionValue?:\n    | (keyof TData extends string ? keyof TData : never)\n    | ((item: TData) => string);\n  /**\n   * Field name to search for.\n   * @description If provided `optionLabel` is a string, uses `optionLabel`'s value.\n   * @default `\"title\"`\n   * @example\n   * // when optionLabel is string.\n   * useSelect({ optionLabel: \"name\" })\n   * // uses `name` field.\n   * @example\n   * // when optionLabel is function.\n   * useSelect({ optionLabel: (field) => field.description })\n   * // uses `title`, since `optionLabel` is a function.\n   */\n  searchField?: keyof TData extends string ? keyof TData : never;\n  /**\n   * Allow us to sort the options\n   * @deprecated Use `sorters` instead\n   */\n  sort?: CrudSort[];\n  /**\n   * Allow us to sort the options\n   */\n  sorters?: CrudSort[];\n  /**\n   * Resource name for API data interactions\n   */\n  filters?: CrudFilter[];\n  /**\n   * Adds extra `options`\n   */\n  defaultValue?: BaseKey | BaseKey[];\n  /**\n   * Allow us to sort the selection options\n   * @default `in-place`\n   */\n  selectedOptionsOrder?: SelectedOptionsOrder;\n  /**\n   * The number of milliseconds to delay\n   * @default `300`\n   */\n  debounce?: number;\n  /**\n   * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n  /**\n   * Pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n   * @type {  current?: number; pageSize?: number;}\n   * @default `undefined`\n   */\n  pagination?: Prettify<\n    Omit<Pagination, \"mode\"> & {\n      /**\n       * Whether to use server side pagination or not.\n       * @default \"off\"\n       */\n      mode?: Pagination[\"mode\"];\n    }\n  >;\n  /**\n   * Disabling pagination option from [`useList()`](/docs/api-reference/core/hooks/data/useList/)\n   * @type boolean\n   * @default `false`\n   * @deprecated `hasPagination` is deprecated, use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * react-query [useQuery](https://react-query.tanstack.com/reference/useQuery) options\n   */\n  defaultValueQueryOptions?: UseQueryOptions<\n    GetManyResponse<TQueryFnData>,\n    TError\n  >;\n  /**\n   * If defined, this callback allows us to override all filters for every search request.\n   * @default `undefined`\n   */\n  onSearch?: (value: string) => CrudFilter[];\n  /**\n   * Additional meta data to pass to the `useMany` from the data provider\n   */\n  meta?: MetaQuery;\n  /**\n   * Additional meta data to pass to the `useMany` from the data provider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   * @default `default`\n   */\n  dataProviderName?: string;\n  /**\n   * Amount of records to fetch in select box list.\n   * @deprecated use [`pagination`](https://refine.dev/docs/api-reference/core/interfaceReferences/#pagination) instead\n   * @default `undefined`\n   */\n  fetchSize?: number;\n} & SuccessErrorNotification<\n  GetListResponse<TData>,\n  TError,\n  Prettify<BaseListProps>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\nexport type UseSelectReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TOption extends BaseOption = BaseOption,\n> = {\n  query: QueryObserverResult<GetListResponse<TData>, TError>;\n  defaultValueQuery: QueryObserverResult<GetManyResponse<TData>>;\n  /**\n   * @deprecated Use `query` instead\n   */\n  queryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n  /**\n   * @deprecated Use `defaultValueQuery` instead\n   */\n  defaultValueQueryResult: QueryObserverResult<GetManyResponse<TData>>;\n  onSearch: (value: string) => void;\n  options: TOption[];\n} & UseLoadingOvertimeReturnType;\n\n/**\n * `useSelect` hook is used to fetch data from the dataProvider and return the options for the select box.\n *\n * It uses `getList` method as query function from the dataProvider that is\n * passed to {@link https://refine.dev/docs/api-reference/core/components/refine-config/ `<Refine>`}.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useSelect} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nexport const useSelect = <\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n  TOption extends BaseOption = BaseOption,\n>(\n  props: UseSelectProps<TQueryFnData, TError, TData>,\n): UseSelectReturnType<TData, TError, TOption> => {\n  const [search, setSearch] = useState<CrudFilter[]>([]);\n  const [options, setOptions] = useState<TOption[]>([]);\n  const [selectedOptions, setSelectedOptions] = useState<TOption[]>([]);\n\n  const {\n    resource: resourceFromProps,\n    sort,\n    sorters,\n    filters = [],\n    optionLabel = \"title\",\n    optionValue = \"id\",\n    searchField = typeof optionLabel === \"string\" ? optionLabel : \"title\",\n    debounce: debounceValue = 300,\n    successNotification,\n    errorNotification,\n    defaultValueQueryOptions: defaultValueQueryOptionsFromProps,\n    queryOptions,\n    fetchSize,\n    pagination,\n    hasPagination = false,\n    liveMode,\n    defaultValue = [],\n    selectedOptionsOrder = \"in-place\",\n    onLiveEvent,\n    onSearch: onSearchFromProp,\n    liveParams,\n    meta,\n    metaData,\n    dataProviderName,\n    overtimeOptions,\n  } = props;\n\n  const getOptionLabel = useCallback(\n    (item: TData) => {\n      if (typeof optionLabel === \"string\") {\n        return get(item, optionLabel);\n      }\n\n      return optionLabel(item);\n    },\n    [optionLabel],\n  );\n\n  const getOptionValue = useCallback(\n    (item: TData) => {\n      if (typeof optionValue === \"string\") {\n        return get(item, optionValue);\n      }\n\n      return optionValue(item);\n    },\n    [optionValue],\n  );\n\n  const { resource, identifier } = useResource(resourceFromProps);\n\n  const getMeta = useMeta();\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: pickNotDeprecated(meta, metaData),\n  });\n\n  const defaultValues = Array.isArray(defaultValue)\n    ? defaultValue\n    : [defaultValue];\n\n  const defaultValueQueryOnSuccess = useCallback(\n    (data: GetManyResponse<TData>) => {\n      setSelectedOptions(\n        data.data.map(\n          (item) =>\n            ({\n              label: getOptionLabel(item),\n              value: getOptionValue(item),\n            }) as TOption,\n        ),\n      );\n    },\n    [optionLabel, optionValue],\n  );\n\n  const defaultValueQueryOptions =\n    defaultValueQueryOptionsFromProps ?? (queryOptions as any);\n\n  const defaultValueQueryResult = useMany<TQueryFnData, TError, TData>({\n    resource: identifier,\n    ids: defaultValues,\n    queryOptions: {\n      ...defaultValueQueryOptions,\n      enabled:\n        defaultValues.length > 0 && (defaultValueQueryOptions?.enabled ?? true),\n      onSuccess: (data) => {\n        defaultValueQueryOnSuccess(data);\n        defaultValueQueryOptions?.onSuccess?.(data);\n      },\n    },\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode: \"off\",\n    dataProviderName,\n  });\n\n  const defaultQueryOnSuccess = useCallback(\n    (data: GetListResponse<TData>) => {\n      setOptions(\n        data.data.map(\n          (item) =>\n            ({\n              label: getOptionLabel(item),\n              value: getOptionValue(item),\n            }) as TOption,\n        ),\n      );\n    },\n    [optionLabel, optionValue],\n  );\n\n  const queryResult = useList<TQueryFnData, TError, TData>({\n    resource: identifier,\n    sorters: pickNotDeprecated(sorters, sort),\n    filters: filters.concat(search),\n    pagination: {\n      current: pagination?.current,\n      pageSize: pagination?.pageSize ?? fetchSize,\n      mode: pagination?.mode,\n    },\n    hasPagination,\n    queryOptions: {\n      ...queryOptions,\n      onSuccess: (data) => {\n        defaultQueryOnSuccess(data);\n        queryOptions?.onSuccess?.(data);\n      },\n    },\n    successNotification,\n    errorNotification,\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode,\n    liveParams,\n    onLiveEvent,\n    dataProviderName,\n  });\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResult.isFetching || defaultValueQueryResult.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  const combinedOptions = useMemo(\n    () =>\n      uniqBy(\n        selectedOptionsOrder === \"in-place\"\n          ? [...options, ...selectedOptions]\n          : [...selectedOptions, ...options],\n        \"value\",\n      ),\n    [options, selectedOptions],\n  );\n\n  /**\n   * To avoid any changes in the `onSearch` callback,\n   * We're storing `onSearchFromProp` in a ref and accessing it in the `onSearch` callback.\n   */\n  const onSearchFromPropRef = useRef(onSearchFromProp);\n\n  const onSearch = useMemo(() => {\n    return debounce((value: string) => {\n      if (onSearchFromPropRef.current) {\n        setSearch(onSearchFromPropRef.current(value));\n        return;\n      }\n\n      if (!value) {\n        setSearch([]);\n        return;\n      }\n\n      setSearch([\n        {\n          field: searchField,\n          operator: \"contains\",\n          value,\n        },\n      ]);\n    }, debounceValue);\n  }, [searchField, debounceValue]);\n\n  useEffect(() => {\n    onSearchFromPropRef.current = onSearchFromProp;\n  }, [onSearchFromProp]);\n\n  return {\n    queryResult,\n    defaultValueQueryResult,\n    query: queryResult,\n    defaultValueQuery: defaultValueQueryResult,\n    options: combinedOptions,\n    onSearch,\n    overtime: { elapsedTime },\n  };\n};\n","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport type {\n  QueryObserverResult,\n  UseQueryOptions,\n} from \"@tanstack/react-query\";\nimport differenceWith from \"lodash-es/differenceWith.js\";\nimport isEqual from \"lodash-es/isEqual.js\";\nimport qs from \"qs\";\nimport warnOnce from \"warn-once\";\n\nimport { pickNotDeprecated } from \"@definitions/helpers\";\nimport {\n  parseTableParams,\n  setInitialFilters,\n  setInitialSorters,\n  stringifyTableParams,\n  unionFilters,\n  unionSorters,\n} from \"@definitions/table\";\nimport {\n  useGo,\n  useList,\n  useLiveMode,\n  useMeta,\n  useNavigation,\n  useParsed,\n  useResource,\n  useRouterContext,\n  useRouterType,\n  useSyncWithLocation,\n} from \"@hooks\";\n\nimport type {\n  BaseRecord,\n  CrudFilter,\n  CrudSort,\n  GetListResponse,\n  HttpError,\n  MetaQuery,\n  Pagination,\n  Prettify,\n} from \"../../contexts/data/types\";\nimport type { LiveModeProps } from \"../../contexts/live/types\";\nimport type { SuccessErrorNotification } from \"../../contexts/notification/types\";\nimport type { BaseListProps } from \"../data/useList\";\nimport {\n  type UseLoadingOvertimeOptionsProps,\n  type UseLoadingOvertimeReturnType,\n  useLoadingOvertime,\n} from \"../useLoadingOvertime\";\n\ntype SetFilterBehavior = \"merge\" | \"replace\";\n\nexport type useTableProps<TQueryFnData, TError, TData> = {\n  /**\n   * Resource name for API data interactions\n   * @default Resource name that it reads from route\n   */\n  resource?: string;\n  /**\n   * Configuration for pagination\n   */\n  pagination?: Pagination;\n  /**\n   * Initial page index\n   * @default 1\n   * @deprecated `initialCurrent` property is deprecated. Use `pagination.current` instead.\n   */\n  initialCurrent?: number;\n  /**\n   * Initial number of items per page\n   * @default 10\n   * @deprecated `initialPageSize` property is deprecated. Use `pagination.pageSize` instead.\n   */\n  initialPageSize?: number;\n  /**\n   * Sort configs\n   */\n  sorters?: {\n    /**\n     * Initial sorter state\n     */\n    initial?: CrudSort[];\n    /**\n     * Default and unchangeable sorter state\n     *  @default `[]`\n     */\n    permanent?: CrudSort[];\n    /**\n     * Whether to use server side sorting or not.\n     * @default \"server\"\n     */\n    mode?: \"server\" | \"off\";\n  };\n  /**\n   * Initial sorter state\n   * @deprecated `initialSorter` property is deprecated. Use `sorters.initial` instead.\n   */\n  initialSorter?: CrudSort[];\n  /**\n   * Default and unchangeable sorter state\n   *  @default `[]`\n   *  @deprecated `permanentSorter` property is deprecated. Use `sorters.permanent` instead.\n   */\n  permanentSorter?: CrudSort[];\n  /**\n   * Filter configs\n   */\n  filters?: {\n    /**\n     * Initial filter state\n     */\n    initial?: CrudFilter[];\n    /**\n     * Default and unchangeable filter state\n     *  @default `[]`\n     */\n    permanent?: CrudFilter[];\n    /**\n     * Default behavior of the `setFilters` function\n     * @default `\"merge\"`\n     */\n    defaultBehavior?: SetFilterBehavior;\n    /**\n     * Whether to use server side filter or not.\n     * @default \"server\"\n     */\n    mode?: \"server\" | \"off\";\n  };\n  /**\n   * Initial filter state\n   * @deprecated `initialFilter` property is deprecated. Use `filters.initial` instead.\n   */\n  initialFilter?: CrudFilter[];\n  /**\n   * Default and unchangeable filter state\n   * @default `[]`\n   * @deprecated `permanentFilter` property is deprecated. Use `filters.permanent` instead.\n   */\n  permanentFilter?: CrudFilter[];\n  /**\n   * Default behavior of the `setFilters` function\n   * @default `\"merge\"`\n   * @deprecated `defaultSetFilterBehavior` property is deprecated. Use `filters.defaultBehavior` instead.\n   */\n  defaultSetFilterBehavior?: SetFilterBehavior;\n  /**\n   * Whether to use server side pagination or not.\n   * @default `true`\n   * @deprecated `hasPagination` property is deprecated. Use `pagination.mode` instead.\n   */\n  hasPagination?: boolean;\n  /**\n   * Sortings, filters, page index and records shown per page are tracked by browser history\n   * @default Value set in [Refine](/docs/api-reference/core/components/refine-config/#syncwithlocation). If a custom resource is given, it will be `false`\n   */\n  syncWithLocation?: boolean;\n  /**\n   * react-query's [useQuery](https://tanstack.com/query/v4/docs/reference/useQuery) options\n   */\n  queryOptions?: UseQueryOptions<\n    GetListResponse<TQueryFnData>,\n    TError,\n    GetListResponse<TData>\n  >;\n  /**\n   * Metadata query for dataProvider\n   */\n  meta?: MetaQuery;\n  /**\n   * Metadata query for dataProvider\n   * @deprecated `metaData` is deprecated with refine@4, refine will pass `meta` instead, however, we still support `metaData` for backward compatibility.\n   */\n  metaData?: MetaQuery;\n  /**\n   * If there is more than one `dataProvider`, you should use the `dataProviderName` that you will use.\n   */\n  dataProviderName?: string;\n} & SuccessErrorNotification<\n  GetListResponse<TData>,\n  TError,\n  Prettify<BaseListProps>\n> &\n  LiveModeProps &\n  UseLoadingOvertimeOptionsProps;\n\ntype ReactSetState<T> = React.Dispatch<React.SetStateAction<T>>;\n\ntype SyncWithLocationParams = {\n  pagination: { current?: number; pageSize?: number };\n  /**\n   * @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter?: CrudSort[];\n  sorters: CrudSort[];\n  filters: CrudFilter[];\n};\n\nexport type useTableReturnType<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n> = {\n  tableQuery: QueryObserverResult<GetListResponse<TData>, TError>;\n  /**\n   * @deprecated `tableQueryResult` is deprecated. Use `tableQuery` instead.\n   */\n  tableQueryResult: QueryObserverResult<GetListResponse<TData>, TError>;\n  /**\n   * @deprecated `sorter` is deprecated. Use `sorters` instead.\n   */\n  sorter: CrudSort[];\n  sorters: CrudSort[];\n  /**\n   * @deprecated `setSorter` is deprecated. Use `setSorters` instead.\n   */\n  setSorter: (sorter: CrudSort[]) => void;\n  setSorters: (sorter: CrudSort[]) => void;\n  filters: CrudFilter[];\n  setFilters: ((filters: CrudFilter[], behavior?: SetFilterBehavior) => void) &\n    ((setter: (prevFilters: CrudFilter[]) => CrudFilter[]) => void);\n  createLinkForSyncWithLocation: (params: SyncWithLocationParams) => string;\n  current: number;\n  setCurrent: ReactSetState<useTableReturnType[\"current\"]>;\n  pageSize: number;\n  setPageSize: ReactSetState<useTableReturnType[\"pageSize\"]>;\n  pageCount: number;\n} & UseLoadingOvertimeReturnType;\n\n/**\n * By using useTable, you are able to get properties that are compatible with\n * Ant Design {@link https://ant.design/components/table/ `<Table>`} component.\n * All features such as sorting, filtering and pagination comes as out of box.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/useTable} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#baserecord `BaseRecord`}. Defaults to `TQueryFnData`\n *\n */\n\nconst defaultPermanentFilter: CrudFilter[] = [];\nconst defaultPermanentSorter: CrudSort[] = [];\n\nexport function useTable<\n  TQueryFnData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TData extends BaseRecord = TQueryFnData,\n>({\n  initialCurrent,\n  initialPageSize,\n  hasPagination = true,\n  pagination,\n  initialSorter,\n  permanentSorter = defaultPermanentSorter,\n  defaultSetFilterBehavior,\n  initialFilter,\n  permanentFilter = defaultPermanentFilter,\n  filters: filtersFromProp,\n  sorters: sortersFromProp,\n  syncWithLocation: syncWithLocationProp,\n  resource: resourceFromProp,\n  successNotification,\n  errorNotification,\n  queryOptions,\n  liveMode: liveModeFromProp,\n  onLiveEvent,\n  liveParams,\n  meta,\n  metaData,\n  dataProviderName,\n  overtimeOptions,\n}: useTableProps<TQueryFnData, TError, TData> = {}): useTableReturnType<\n  TData,\n  TError\n> {\n  const { syncWithLocation: syncWithLocationContext } = useSyncWithLocation();\n\n  const syncWithLocation = syncWithLocationProp ?? syncWithLocationContext;\n\n  const liveMode = useLiveMode(liveModeFromProp);\n\n  const routerType = useRouterType();\n  const { useLocation } = useRouterContext();\n  const { search, pathname } = useLocation();\n  const getMeta = useMeta();\n  const parsedParams = useParsed();\n\n  const isServerSideFilteringEnabled =\n    (filtersFromProp?.mode || \"server\") === \"server\";\n  const isServerSideSortingEnabled =\n    (sortersFromProp?.mode || \"server\") === \"server\";\n  const hasPaginationString = hasPagination === false ? \"off\" : \"server\";\n  const isPaginationEnabled =\n    (pagination?.mode ?? hasPaginationString) !== \"off\";\n  const prefferedCurrent = pickNotDeprecated(\n    pagination?.current,\n    initialCurrent,\n  );\n  const prefferedPageSize = pickNotDeprecated(\n    pagination?.pageSize,\n    initialPageSize,\n  );\n  const preferredMeta = pickNotDeprecated(meta, metaData);\n\n  /** `parseTableParams` is redundant with the new routing */\n  // We want to always parse the query string even when syncWithLocation is\n  // deactivated, for hotlinking to work properly\n  const { parsedCurrent, parsedPageSize, parsedSorter, parsedFilters } =\n    parseTableParams(search ?? \"?\");\n\n  const preferredInitialFilters = pickNotDeprecated(\n    filtersFromProp?.initial,\n    initialFilter,\n  );\n  const preferredPermanentFilters =\n    pickNotDeprecated(filtersFromProp?.permanent, permanentFilter) ??\n    defaultPermanentFilter;\n\n  const preferredInitialSorters = pickNotDeprecated(\n    sortersFromProp?.initial,\n    initialSorter,\n  );\n  const preferredPermanentSorters =\n    pickNotDeprecated(sortersFromProp?.permanent, permanentSorter) ??\n    defaultPermanentSorter;\n\n  const prefferedFilterBehavior =\n    pickNotDeprecated(\n      filtersFromProp?.defaultBehavior,\n      defaultSetFilterBehavior,\n    ) ?? \"merge\";\n\n  let defaultCurrent: number;\n  let defaultPageSize: number;\n  let defaultSorter: CrudSort[] | undefined;\n  let defaultFilter: CrudFilter[] | undefined;\n\n  if (syncWithLocation) {\n    defaultCurrent =\n      parsedParams?.params?.current || parsedCurrent || prefferedCurrent || 1;\n    defaultPageSize =\n      parsedParams?.params?.pageSize ||\n      parsedPageSize ||\n      prefferedPageSize ||\n      10;\n    defaultSorter =\n      parsedParams?.params?.sorters ||\n      (parsedSorter.length ? parsedSorter : preferredInitialSorters);\n    defaultFilter =\n      parsedParams?.params?.filters ||\n      (parsedFilters.length ? parsedFilters : preferredInitialFilters);\n  } else {\n    defaultCurrent = prefferedCurrent || 1;\n    defaultPageSize = prefferedPageSize || 10;\n    defaultSorter = preferredInitialSorters;\n    defaultFilter = preferredInitialFilters;\n  }\n\n  const { replace } = useNavigation();\n  /** New way of `replace` calls to the router is using `useGo` */\n  const go = useGo();\n\n  const { resource, identifier } = useResource(resourceFromProp);\n\n  const combinedMeta = getMeta({\n    resource,\n    meta: preferredMeta,\n  });\n\n  React.useEffect(() => {\n    warnOnce(\n      typeof identifier === \"undefined\",\n      \"useTable: `resource` is not defined.\",\n    );\n  }, [identifier]);\n\n  const [sorters, setSorters] = useState<CrudSort[]>(\n    setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n  );\n  const [filters, setFilters] = useState<CrudFilter[]>(\n    setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n  );\n  const [current, setCurrent] = useState<number>(defaultCurrent);\n  const [pageSize, setPageSize] = useState<number>(defaultPageSize);\n\n  const getCurrentQueryParams = (): object => {\n    if (routerType === \"new\") {\n      // We get QueryString parameters that are uncontrolled by refine.\n      const { sorters, filters, pageSize, current, ...rest } =\n        parsedParams?.params ?? {};\n\n      return rest;\n    }\n\n    // We get QueryString parameters that are uncontrolled by refine.\n    const { sorter, filters, pageSize, current, ...rest } = qs.parse(search, {\n      ignoreQueryPrefix: true,\n    });\n\n    return rest;\n  };\n\n  const createLinkForSyncWithLocation = ({\n    pagination: { current, pageSize },\n    sorter,\n    filters,\n  }: SyncWithLocationParams) => {\n    if (routerType === \"new\") {\n      return (\n        go({\n          type: \"path\",\n          options: {\n            keepHash: true,\n            keepQuery: true,\n          },\n          query: {\n            ...(isPaginationEnabled ? { current, pageSize } : {}),\n            sorters: sorter,\n            filters,\n            ...getCurrentQueryParams(),\n          },\n        }) ?? \"\"\n      );\n    }\n    const currentQueryParams = qs.parse(search?.substring(1)); // remove first ? character\n\n    const stringifyParams = stringifyTableParams({\n      pagination: {\n        pageSize,\n        current,\n      },\n      sorters: sorters ?? sorter,\n      filters,\n      ...currentQueryParams,\n    });\n\n    return `${pathname ?? \"\"}?${stringifyParams ?? \"\"}`;\n  };\n\n  useEffect(() => {\n    if (search === \"\") {\n      setCurrent(defaultCurrent);\n      setPageSize(defaultPageSize);\n      setSorters(\n        setInitialSorters(preferredPermanentSorters, defaultSorter ?? []),\n      );\n      setFilters(\n        setInitialFilters(preferredPermanentFilters, defaultFilter ?? []),\n      );\n    }\n  }, [search]);\n\n  useEffect(() => {\n    if (syncWithLocation) {\n      // Careful! This triggers render\n      const queryParams = getCurrentQueryParams();\n\n      if (routerType === \"new\") {\n        go({\n          type: \"replace\",\n          options: {\n            keepQuery: true,\n          },\n          query: {\n            ...(isPaginationEnabled ? { pageSize, current } : {}),\n            sorters: differenceWith(\n              sorters,\n              preferredPermanentSorters,\n              isEqual,\n            ),\n            filters: differenceWith(\n              filters,\n              preferredPermanentFilters,\n              isEqual,\n            ),\n            // ...queryParams,\n          },\n        });\n      } else {\n        const stringifyParams = stringifyTableParams({\n          ...(isPaginationEnabled\n            ? {\n                pagination: {\n                  pageSize,\n                  current,\n                },\n              }\n            : {}),\n          sorters: differenceWith(sorters, preferredPermanentSorters, isEqual),\n          filters: differenceWith(filters, preferredPermanentFilters, isEqual),\n          ...queryParams,\n        });\n        return replace?.(`${pathname}?${stringifyParams}`, undefined, {\n          shallow: true,\n        });\n      }\n    }\n  }, [syncWithLocation, current, pageSize, sorters, filters]);\n\n  const queryResult = useList<TQueryFnData, TError, TData>({\n    resource: identifier,\n    hasPagination,\n    pagination: { current, pageSize, mode: pagination?.mode },\n    filters: isServerSideFilteringEnabled\n      ? unionFilters(preferredPermanentFilters, filters)\n      : undefined,\n    sorters: isServerSideSortingEnabled\n      ? unionSorters(preferredPermanentSorters, sorters)\n      : undefined,\n    queryOptions,\n    successNotification,\n    errorNotification,\n    meta: combinedMeta,\n    metaData: combinedMeta,\n    liveMode,\n    liveParams,\n    onLiveEvent,\n    dataProviderName,\n  });\n\n  const setFiltersAsMerge = useCallback(\n    (newFilters: CrudFilter[]) => {\n      setFilters((prevFilters) =>\n        unionFilters(preferredPermanentFilters, newFilters, prevFilters),\n      );\n    },\n    [preferredPermanentFilters],\n  );\n\n  const setFiltersAsReplace = useCallback(\n    (newFilters: CrudFilter[]) => {\n      setFilters(unionFilters(preferredPermanentFilters, newFilters));\n    },\n    [preferredPermanentFilters],\n  );\n\n  const setFiltersWithSetter = useCallback(\n    (setter: (prevFilters: CrudFilter[]) => CrudFilter[]) => {\n      setFilters((prev) =>\n        unionFilters(preferredPermanentFilters, setter(prev)),\n      );\n    },\n    [preferredPermanentFilters],\n  );\n\n  const setFiltersFn: useTableReturnType<TQueryFnData>[\"setFilters\"] =\n    useCallback(\n      (\n        setterOrFilters,\n        behavior: SetFilterBehavior = prefferedFilterBehavior,\n      ) => {\n        if (typeof setterOrFilters === \"function\") {\n          setFiltersWithSetter(setterOrFilters);\n        } else {\n          if (behavior === \"replace\") {\n            setFiltersAsReplace(setterOrFilters);\n          } else {\n            setFiltersAsMerge(setterOrFilters);\n          }\n        }\n      },\n      [setFiltersWithSetter, setFiltersAsReplace, setFiltersAsMerge],\n    );\n\n  const setSortWithUnion = useCallback(\n    (newSorter: CrudSort[]) => {\n      setSorters(() => unionSorters(preferredPermanentSorters, newSorter));\n    },\n    [preferredPermanentSorters],\n  );\n\n  const { elapsedTime } = useLoadingOvertime({\n    isLoading: queryResult.isFetching,\n    interval: overtimeOptions?.interval,\n    onInterval: overtimeOptions?.onInterval,\n  });\n\n  return {\n    tableQueryResult: queryResult,\n    tableQuery: queryResult,\n    sorters,\n    setSorters: setSortWithUnion,\n    sorter: sorters,\n    setSorter: setSortWithUnion,\n    filters,\n    setFilters: setFiltersFn,\n    current,\n    setCurrent,\n    pageSize,\n    setPageSize,\n    pageCount: pageSize\n      ? Math.ceil((queryResult.data?.total ?? 0) / pageSize)\n      : 1,\n    createLinkForSyncWithLocation,\n    overtime: {\n      elapsedTime,\n    },\n  };\n}\n","import { useContext } from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseMutationOptions,\n  type UseMutationResult,\n  useMutation,\n  useQueryClient,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { ResourceContext } from \"@contexts/resource\";\nimport { hasPermission, pickNotDeprecated } from \"@definitions/helpers\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { pickResource } from \"@definitions/helpers/pick-resource\";\nimport { useGetIdentity } from \"@hooks/auth\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { LogParams } from \"../../../contexts/auditLog/types\";\nimport type { BaseKey } from \"../../../contexts/data/types\";\n\ntype LogRenameData =\n  | {\n      resource?: string;\n    }\n  | undefined;\n\nexport type UseLogReturnType<TLogData, TLogRenameData> = {\n  log: UseMutationResult<TLogData, Error, LogParams>;\n  rename: UseMutationResult<\n    TLogRenameData,\n    Error,\n    {\n      id: BaseKey;\n      name: string;\n    }\n  >;\n};\n\nexport type UseLogMutationProps<\n  TLogData,\n  TLogRenameData extends LogRenameData = LogRenameData,\n> = {\n  logMutationOptions?: Omit<\n    UseMutationOptions<TLogData, Error, LogParams, unknown>,\n    \"mutationFn\"\n  >;\n  renameMutationOptions?: Omit<\n    UseMutationOptions<\n      TLogRenameData,\n      Error,\n      { id: BaseKey; name: string },\n      unknown\n    >,\n    \"mutationFn\" | \"onSuccess\"\n  >;\n};\n\n/**\n * useLog is used to `create` a new and `rename` the existing audit log.\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLog} for more details.\n */\n\nexport const useLog = <\n  TLogData,\n  TLogRenameData extends LogRenameData = LogRenameData,\n>({\n  logMutationOptions,\n  renameMutationOptions,\n}: UseLogMutationProps<TLogData, TLogRenameData> = {}): UseLogReturnType<\n  TLogData,\n  TLogRenameData\n> => {\n  const queryClient = useQueryClient();\n  const auditLogContext = useContext(AuditLogContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const authProvider = useActiveAuthProvider();\n\n  const { resources } = useContext(ResourceContext);\n  const {\n    data: identityData,\n    refetch,\n    isLoading,\n  } = useGetIdentity({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    queryOptions: {\n      enabled: !!auditLogContext?.create,\n    },\n  });\n\n  const log = useMutation<TLogData, Error, LogParams, unknown>(\n    async (params) => {\n      const resource = pickResource(params.resource, resources);\n      const logPermissions = pickNotDeprecated(\n        resource?.meta?.audit,\n        resource?.options?.audit,\n        resource?.options?.auditLog?.permissions,\n      );\n\n      if (logPermissions) {\n        if (!hasPermission(logPermissions, params.action)) {\n          return;\n        }\n      }\n\n      let authorData;\n      if (isLoading && !!auditLogContext?.create) {\n        authorData = await refetch();\n      }\n\n      return await auditLogContext.create?.({\n        ...params,\n        author: identityData ?? authorData?.data,\n      });\n    },\n    {\n      mutationKey: keys().audit().action(\"log\").get(),\n      ...logMutationOptions,\n      meta: {\n        ...logMutationOptions?.meta,\n        ...getXRay(\"useLog\", preferLegacyKeys),\n      },\n    },\n  );\n\n  const rename = useMutation<\n    TLogRenameData,\n    Error,\n    { id: BaseKey; name: string },\n    unknown\n  >(\n    async (params) => {\n      return await auditLogContext.update?.(params);\n    },\n    {\n      onSuccess: (data) => {\n        if (data?.resource) {\n          queryClient.invalidateQueries(\n            keys()\n              .audit()\n              .resource(data?.resource ?? \"\")\n              .action(\"list\")\n              .get(preferLegacyKeys),\n          );\n        }\n      },\n      mutationKey: keys().audit().action(\"rename\").get(),\n      ...renameMutationOptions,\n      meta: {\n        ...renameMutationOptions?.meta,\n        ...getXRay(\"useLog\", preferLegacyKeys),\n      },\n    },\n  );\n\n  return { log, rename };\n};\n","import React, { type PropsWithChildren } from \"react\";\n\nimport type { IAuditLogContext } from \"./types\";\n\nexport const AuditLogContext = React.createContext<IAuditLogContext>({});\n\nexport const AuditLogContextProvider: React.FC<\n  PropsWithChildren<IAuditLogContext>\n> = ({ create, get, update, children }) => {\n  return (\n    <AuditLogContext.Provider value={{ create, get, update }}>\n      {children}\n    </AuditLogContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\n\nimport { getXRay } from \"@refinedev/devtools-internal\";\nimport {\n  type UseQueryOptions,\n  type UseQueryResult,\n  useQuery,\n} from \"@tanstack/react-query\";\n\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { useKeys } from \"@hooks/useKeys\";\n\nimport type { HttpError, MetaQuery } from \"../../../contexts/data/types\";\n\nexport type UseLogProps<TQueryFnData, TError, TData> = {\n  resource: string;\n  action?: string;\n  meta?: Record<number | string, any>;\n  author?: Record<number | string, any>;\n  queryOptions?: UseQueryOptions<TQueryFnData, TError, TData>;\n  metaData?: MetaQuery;\n};\n\n/**\n * useLogList is used to get and filter audit logs.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/audit-log/useLogList} for more details.\n *\n * @typeParam TQueryFnData - Result data returned by the query function.\n * @typeParam TError - Custom error object that extends {@link https://refine.dev/docs/api-reference/core/interfaceReferences#httperror `HttpError`}\n * @typeParam TData - Result data returned by the `select` function. Defaults to `TQueryFnData`\n *\n */\nexport const useLogList = <\n  TQueryFnData = any,\n  TError extends HttpError = HttpError,\n  TData = TQueryFnData,\n>({\n  resource,\n  action,\n  meta,\n  author,\n  metaData,\n  queryOptions,\n}: UseLogProps<TQueryFnData, TError, TData>): UseQueryResult<TData> => {\n  const { get } = useContext(AuditLogContext);\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryResponse = useQuery<TQueryFnData, TError, TData>({\n    queryKey: keys()\n      .audit()\n      .resource(resource)\n      .action(\"list\")\n      .params(meta)\n      .get(preferLegacyKeys),\n    queryFn: () =>\n      get?.({\n        resource,\n        action,\n        author,\n        meta,\n        metaData,\n      }) ?? Promise.resolve([]),\n    enabled: typeof get !== \"undefined\",\n    ...queryOptions,\n    retry: false,\n    meta: {\n      ...queryOptions?.meta,\n      ...getXRay(\"useLogList\", preferLegacyKeys, resource),\n    },\n  });\n\n  return queryResponse;\n};\n","import React, { useContext } from \"react\";\n\nimport warnOnce from \"warn-once\";\n\nimport { I18nContext } from \"@contexts/i18n\";\nimport { useRouterType } from \"@contexts/router/picker\";\nimport { pickNotDeprecated } from \"@definitions\";\nimport { getActionRoutesFromResource } from \"@definitions/helpers/router\";\nimport { composeRoute } from \"@definitions/helpers/router/compose-route\";\nimport { useRefineContext, useResource, useTranslate } from \"@hooks\";\nimport { useParsed } from \"@hooks/router/use-parsed\";\n\nimport type { IResourceItem } from \"../../contexts/resource/types\";\nimport { pickResource } from \"../../definitions/helpers/pick-resource/index\";\n\nexport type BreadcrumbsType = {\n  label: string;\n  href?: string;\n  icon?: React.ReactNode;\n};\n\ntype UseBreadcrumbReturnType = {\n  breadcrumbs: BreadcrumbsType[];\n};\n\ntype UseBreadcrumbProps = {\n  /**\n   * Additional params to be used in the route generation process.\n   */\n  meta?: Record<string, string | number>;\n};\n\nexport const useBreadcrumb = ({\n  meta: metaFromProps = {},\n}: UseBreadcrumbProps = {}): UseBreadcrumbReturnType => {\n  const routerType = useRouterType();\n  const { i18nProvider } = useContext(I18nContext);\n  const parsed = useParsed();\n  const translate = useTranslate();\n  const { resources, resource, action } = useResource();\n  const {\n    options: { textTransformers },\n  } = useRefineContext();\n\n  const breadcrumbs: BreadcrumbsType[] = [];\n\n  if (!resource?.name) {\n    return { breadcrumbs };\n  }\n\n  const addBreadcrumb = (parentName: string | IResourceItem) => {\n    const parentResource =\n      typeof parentName === \"string\"\n        ? pickResource(parentName, resources, routerType === \"legacy\") ?? {\n            name: parentName,\n          }\n        : parentName;\n\n    if (parentResource) {\n      const grandParentName = pickNotDeprecated(\n        parentResource?.meta?.parent,\n        parentResource?.parentName,\n      );\n      if (grandParentName) {\n        addBreadcrumb(grandParentName);\n      }\n      const listActionOfResource = getActionRoutesFromResource(\n        parentResource,\n        resources,\n        routerType === \"legacy\",\n      ).find((r) => r.action === \"list\");\n\n      const hrefRaw = listActionOfResource?.resource?.list\n        ? listActionOfResource?.route\n        : undefined;\n\n      const href = hrefRaw\n        ? routerType === \"legacy\"\n          ? hrefRaw\n          : composeRoute(hrefRaw, parentResource?.meta, parsed, metaFromProps)\n        : undefined;\n\n      breadcrumbs.push({\n        label:\n          pickNotDeprecated(\n            parentResource.meta?.label,\n            parentResource.options?.label,\n          ) ??\n          translate(\n            `${parentResource.name}.${parentResource.name}`,\n            textTransformers.humanize(parentResource.name),\n          ),\n        href: href,\n        icon: pickNotDeprecated(\n          parentResource.meta?.icon,\n          parentResource.options?.icon,\n          parentResource.icon,\n        ),\n      });\n    }\n  };\n\n  addBreadcrumb(resource);\n\n  if (action && action !== \"list\") {\n    const key = `actions.${action}`;\n    const actionLabel = translate(key);\n    if (typeof i18nProvider !== \"undefined\" && actionLabel === key) {\n      warnOnce(\n        true,\n        `[useBreadcrumb]: Breadcrumb missing translate key for the \"${action}\" action. Please add \"actions.${action}\" key to your translation file.\\nFor more information, see https://refine.dev/docs/api-reference/core/hooks/useBreadcrumb/#i18n-support`,\n      );\n      breadcrumbs.push({\n        label: translate(\n          `buttons.${action}`,\n          textTransformers.humanize(action),\n        ),\n      });\n    } else {\n      breadcrumbs.push({\n        label: translate(key, textTransformers.humanize(action)),\n      });\n    }\n  }\n\n  return {\n    breadcrumbs,\n  };\n};\n","import React from \"react\";\n\nimport { pickNotDeprecated, useUserFriendlyName } from \"@definitions\";\nimport { getParentResource } from \"@definitions/helpers/router\";\n\nimport { useParsed, useResource, useRouterContext, useTranslate } from \"..\";\nimport { useRouterType } from \"../../contexts/router/picker\";\nimport { createResourceKey } from \"../../definitions/helpers/menu/create-resource-key\";\nimport {\n  type FlatTreeItem,\n  createTree,\n} from \"../../definitions/helpers/menu/create-tree\";\nimport { useGetToPath } from \"../router/use-get-to-path/index\";\n\ntype UseMenuReturnType = {\n  defaultOpenKeys: string[];\n  selectedKey: string;\n  menuItems: TreeMenuItem[];\n};\n\nexport type UseMenuProps = {\n  meta?: Record<string, any>;\n  hideOnMissingParameter?: boolean;\n};\n\nexport type TreeMenuItem =\n  // Omitted because `label` and `route` are deprecated in `resource` but not in `menuItems`. These are populated in `prepareItem` for ease of use.\n  Omit<FlatTreeItem, \"label\" | \"route\" | \"children\"> & {\n    route?: string;\n    icon?: React.ReactNode;\n    label?: string;\n    children: TreeMenuItem[];\n  };\n\nconst getCleanPath = (pathname: string) => {\n  return pathname\n    .split(\"?\")[0]\n    .split(\"#\")[0]\n    .replace(/(.+)(\\/$)/, \"$1\");\n};\n\n/**\n * `useMenu` is used to get menu items of the default sidebar.\n * These items include a link to dashboard page (if it exists) and links to the user defined resources\n * (passed as children to {@link https://refine.dev/docs/core/components/refine-config `<Refine>`}).\n * This hook can also be used to build custom menus, which is also used by default sidebar to show menu items.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/hooks/ui/useMenu} for more details.\n */\nexport const useMenu = (\n  { meta, hideOnMissingParameter = true }: UseMenuProps = {\n    hideOnMissingParameter: true,\n  },\n): UseMenuReturnType => {\n  const translate = useTranslate();\n\n  const getToPath = useGetToPath();\n  const routerType = useRouterType();\n  const { resource, resources } = useResource();\n  const { pathname } = useParsed();\n  const { useLocation } = useRouterContext();\n  const { pathname: legacyPath } = useLocation();\n  const getFriendlyName = useUserFriendlyName();\n\n  const cleanPathname =\n    routerType === \"legacy\"\n      ? getCleanPath(legacyPath)\n      : pathname\n        ? getCleanPath(pathname)\n        : undefined;\n\n  const cleanRoute = `/${(cleanPathname ?? \"\").replace(/^\\//, \"\")}`;\n\n  const selectedKey = resource\n    ? createResourceKey(resource, resources, routerType === \"legacy\")\n    : cleanRoute ?? \"\";\n\n  const defaultOpenKeys = React.useMemo(() => {\n    if (!resource) return [];\n    let parent = getParentResource(resource, resources);\n    const keys = [createResourceKey(resource, resources)];\n    while (parent) {\n      keys.push(createResourceKey(parent, resources));\n      parent = getParentResource(parent, resources);\n    }\n    return keys;\n  }, []);\n\n  const prepareItem = React.useCallback(\n    (item: FlatTreeItem): TreeMenuItem | undefined => {\n      if (pickNotDeprecated(item?.meta?.hide, item?.options?.hide)) {\n        return undefined;\n      }\n      if (!item?.list && item.children.length === 0) return undefined;\n\n      const composed = item.list\n        ? getToPath({\n            resource: item,\n            action: \"list\",\n            legacy: routerType === \"legacy\",\n            meta,\n          })\n        : undefined;\n\n      if (\n        hideOnMissingParameter &&\n        composed &&\n        composed.match(/(\\/|^):(.+?)(\\/|$){1}/)\n      )\n        return undefined;\n\n      return {\n        ...item,\n        route: composed,\n        icon: pickNotDeprecated(item.meta?.icon, item.options?.icon, item.icon),\n        label:\n          pickNotDeprecated(item?.meta?.label, item?.options?.label) ??\n          translate(\n            `${item.name}.${item.name}`,\n            getFriendlyName(item.name, \"plural\"),\n          ),\n      };\n    },\n    [routerType, meta, getToPath, translate, hideOnMissingParameter],\n  );\n\n  const treeItems = React.useMemo(() => {\n    const treeMenuItems = createTree(resources, routerType === \"legacy\");\n\n    // add paths to items and their nodes recursively\n    const prepare = (items: TreeMenuItem[]): TreeMenuItem[] => {\n      return items.flatMap((item) => {\n        const preparedNodes = prepare(item.children);\n        const newItem = prepareItem({\n          ...item,\n          children: preparedNodes,\n        });\n\n        if (!newItem) return [];\n\n        return [newItem];\n      });\n    };\n\n    return prepare(treeMenuItems);\n  }, [resources, routerType, prepareItem]);\n\n  return {\n    defaultOpenKeys,\n    selectedKey,\n    menuItems: treeItems,\n  };\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport {\n  getParentResource,\n  removeLeadingTrailingSlashes,\n} from \"../../helpers/router\";\n\nexport const createResourceKey = (\n  resource: IResourceItem,\n  resources: IResourceItem[],\n  legacy = false,\n) => {\n  const parents: IResourceItem[] = [];\n\n  let currentParentResource = getParentResource(resource, resources);\n  while (currentParentResource) {\n    parents.push(currentParentResource);\n    currentParentResource = getParentResource(currentParentResource, resources);\n  }\n  parents.reverse();\n\n  const key = [...parents, resource]\n    .map((r) =>\n      removeLeadingTrailingSlashes(\n        (legacy ? r.route : undefined) ?? r.identifier ?? r.name,\n      ),\n    )\n    .join(\"/\");\n\n  return `/${key.replace(/^\\//, \"\")}`;\n};\n","import type { IResourceItem } from \"../../../contexts/resource/types\";\nimport { getParentResource } from \"../router\";\nimport { createResourceKey } from \"./create-resource-key\";\n\nexport type Tree = {\n  item: IResourceItem;\n  children: { [key: string]: Tree };\n};\n\nexport type FlatTreeItem = IResourceItem & {\n  key: string;\n  children: FlatTreeItem[];\n};\n\nexport const createTree = (\n  resources: IResourceItem[],\n  legacy = false,\n): FlatTreeItem[] => {\n  const root: Tree = {\n    item: {\n      name: \"__root__\",\n    },\n    children: {},\n  };\n\n  resources.forEach((resource) => {\n    const parents: IResourceItem[] = [];\n\n    let currentParent = getParentResource(resource, resources);\n    while (currentParent) {\n      parents.push(currentParent);\n      currentParent = getParentResource(currentParent, resources);\n    }\n    parents.reverse();\n\n    let currentTree = root;\n\n    parents.forEach((parent) => {\n      const key =\n        (legacy ? parent.route : undefined) ?? parent.identifier ?? parent.name;\n\n      if (!currentTree.children[key]) {\n        currentTree.children[key] = {\n          item: parent,\n          children: {},\n        };\n      }\n      currentTree = currentTree.children[key];\n    });\n\n    const key =\n      (legacy ? resource.route : undefined) ??\n      resource.identifier ??\n      resource.name;\n\n    if (!currentTree.children[key]) {\n      currentTree.children[key] = {\n        item: resource,\n        children: {},\n      };\n    }\n  });\n\n  const flatten = (tree: Tree): FlatTreeItem[] => {\n    const items: FlatTreeItem[] = [];\n\n    Object.keys(tree.children).forEach((key) => {\n      const itemKey = createResourceKey(\n        tree.children[key].item,\n        resources,\n        legacy,\n      );\n      const item: FlatTreeItem = {\n        ...tree.children[key].item,\n        key: itemKey,\n        children: flatten(tree.children[key]),\n      };\n      items.push(item);\n    });\n\n    return items;\n  };\n\n  return flatten(root);\n};\n","import React, {\n  type ReactNode,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\";\n\ntype MetaContextValue = Record<string, any>;\n\nexport const MetaContext = createContext<MetaContextValue>({});\n\n/**\n * Is used to provide meta data to the children components.\n * @internal\n */\nexport const MetaContextProvider = ({\n  children,\n  value,\n}: { children: ReactNode; value: MetaContextValue }) => {\n  const currentValue = useMetaContext();\n\n  const metaContext = useMemo(() => {\n    return {\n      ...currentValue,\n      ...value,\n    };\n  }, [currentValue, value]);\n\n  return (\n    <MetaContext.Provider value={metaContext}>{children}</MetaContext.Provider>\n  );\n};\n\n/**\n * @internal\n * @returns The MetaContext value.\n */\nexport const useMetaContext = () => {\n  const context = useContext(MetaContext);\n  if (!context) {\n    throw new Error(\"useMetaContext must be used within a MetaContextProvider\");\n  }\n\n  return useContext(MetaContext);\n};\n","import { useMetaContext } from \"@contexts/metaContext\";\nimport { sanitizeResource } from \"@definitions/helpers/sanitize-resource\";\nimport { useParsed } from \"@hooks/router\";\n\nimport type { MetaQuery } from \"../../contexts/data/types\";\nimport type { IResourceItem } from \"../../contexts/resource/types\";\n\n/**\n * Hook that returns a function to get meta.\n * The meta is a combination of the resource meta, hook meta, query params and metaContext value.\n * @internal\n */\nexport const useMeta = () => {\n  const { params } = useParsed();\n\n  const metaContext = useMetaContext();\n\n  const getMetaFn = ({\n    resource,\n    meta: metaFromProp,\n  }: {\n    resource?: IResourceItem;\n    meta?: MetaQuery;\n  } = {}) => {\n    const { meta } = sanitizeResource(resource) ?? { meta: {} };\n\n    // this fields came from the query params and should be removed from the meta because they are not part of the meta.\n    const {\n      filters: _filters,\n      sorters: _sorters,\n      current: _current,\n      pageSize: _pageSize,\n      ...additionalParams\n    } = params ?? {};\n\n    const result: Record<string, unknown> = {\n      ...meta,\n      ...additionalParams,\n      ...metaFromProp,\n    };\n\n    // when MultiTenancyProvider from \"@refinedev-ee/multi-tenancy\" is provided, we need to add tenantId to the meta\n    if (metaContext?.tenantId) {\n      result[\"tenantId\"] = metaContext.tenantId;\n    }\n\n    return result;\n  };\n\n  return getMetaFn;\n};\n","import { RefineContext } from \"@contexts/refine\";\nimport React from \"react\";\n\nexport const useRefineOptions = () => {\n  const { options } = React.useContext(RefineContext);\n\n  return options;\n};\n","import React from \"react\";\n\nimport { useId } from \"./use-id\";\nimport { useAction } from \"./use-action\";\nimport { useResource } from \"../resource\";\nimport type { BaseKey } from \"../../contexts/data/types\";\nimport type { IResourceItem } from \"../../contexts/resource/types\";\nimport type { Action } from \"../../contexts/router/types\";\nimport type { FormAction } from \"../form/types\";\n\ntype Props = {\n  id?: BaseKey;\n  resource?: string;\n  action?: Action;\n};\n\ntype ResourceParams = {\n  id?: BaseKey;\n  setId: React.Dispatch<React.SetStateAction<BaseKey | undefined>>;\n  resource?: IResourceItem;\n  action?: Action;\n  identifier?: string;\n  formAction: FormAction;\n};\n\n/**\n * Interactions in Refine has 3 main parameters: resource, action and id.\n *\n * This hook is used to manage these parameters based on below conditions and outputs the final parameters.\n *\n * `resource`: The resource to be used. (either the identifier or the name of the resource)\n * - If a `resource` is provided, it will be used (even if it's not defined in the <Refine/> component)\n * - If a `resource` is not provided, it will be inferred from the route.\n * `id`: The `id` of the record to be used.\n * - If an `id` is provided, it will be used.\n * - If an `id` is not provided, it will either be inferred from the route or will be `undefined`.\n * -- If a custom resource is provided and it's different from the inferred resource, the id will be undefined.\n * -- If a custom resource is provided and it's same as the inferred resource, the id will be inferred from the route.\n * -- If a custom resource is not provided, the id will be inferred from the route.\n * `action`: The action to be used.\n * - If an `action` is provided, it will be used.\n * - If an `action` is not provided, it will be inferred from the route.\n * `formAction`: The action to be used in the form.\n * - `formAction` can only be \"edit\", \"clone\" or \"create\".\n * - If action is \"edit\" or \"clone\", `formAction` will be the same as action.\n * - Same as `id`, if passed resource is different from inferred resource, `formAction` will fallback to \"create\" and ignore the action from the route.\n */\nexport function useResourceParams(props?: Props): ResourceParams {\n  const { select, identifier: inferredIdentifier } = useResource();\n  const resourceToCheck = props?.resource ?? inferredIdentifier;\n  const { identifier = undefined, resource = undefined } = resourceToCheck\n    ? select(resourceToCheck, true)\n    : {};\n\n  const isSameResource = inferredIdentifier === identifier;\n  const inferredId = useId();\n  const action = useAction(props?.action);\n\n  const defaultId = React.useMemo(() => {\n    if (!isSameResource) return props?.id;\n\n    return props?.id ?? inferredId;\n  }, [isSameResource, props?.id, inferredId]);\n\n  const [id, setId] = React.useState<BaseKey | undefined>(defaultId);\n\n  React.useMemo(() => setId(defaultId), [defaultId]);\n\n  const formAction = React.useMemo(() => {\n    if (!isSameResource && !props?.action) {\n      return \"create\";\n    }\n\n    if (action === \"edit\" || action === \"clone\") {\n      return action;\n    }\n\n    return \"create\";\n  }, [action, isSameResource, props?.action]);\n\n  return {\n    id,\n    setId,\n    resource,\n    action,\n    identifier,\n    formAction,\n  };\n}\n","import { useParsed } from \"../../router/use-parsed\";\nimport { useRouterContext } from \"../../legacy-router/useRouterContext\";\nimport type { BaseKey } from \"../../../contexts/data/types\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport type { ResourceRouterParams } from \"../../../contexts/router/legacy/types\";\n\n/**\n * Returns the id from the router regardless of the router type.\n * In legacy routers, `useParsed` won't work and in the new router bindings, `useParams` won't work.\n * To make it easier to get the id from the router, this hook can be used.\n *\n * Additionally, if an id is provided as a parameter, it will be used instead of the inferred id.\n *\n * @internal usage only\n */\nexport const useId = (id?: BaseKey) => {\n  const routerType = useRouterType();\n  const { useParams } = useRouterContext();\n\n  const parsed = useParsed();\n  const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n  const inferredId = routerType === \"legacy\" ? legacyParams.id : parsed.id;\n\n  return id ?? inferredId;\n};\n","import { useParsed } from \"../../router/use-parsed\";\nimport { useRouterContext } from \"../../legacy-router/useRouterContext\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport type { ResourceRouterParams } from \"../../../contexts/router/legacy/types\";\n\n/**\n * Returns the action from the router regardless of the router type.\n * In legacy routers, `useParsed` won't work and in the new router bindings, `useParams` won't work.\n * To make it easier to get the action from the router, this hook can be used.\n *\n * Additionally, if an action is provided as a parameter, it will be used instead of the inferred action.\n *\n * @internal usage only\n */\nexport const useAction = (action?: Action) => {\n  const routerType = useRouterType();\n  const { useParams } = useRouterContext();\n\n  const parsed = useParsed();\n  const legacyParams = useParams<Partial<ResourceRouterParams>>();\n\n  const inferredAction =\n    routerType === \"legacy\" ? legacyParams.action : parsed.action;\n\n  return action ?? inferredAction;\n};\n","import { useRefineOptions } from \"../../use-refine-options\";\nimport { useTranslate } from \"../../i18n\";\n\nexport type ActionableButtonProps = {\n  type: \"save\" | \"export\" | \"import\";\n};\n\nexport type ActionableButtonValues = {\n  label: string;\n};\n\nexport function useActionableButton({\n  type,\n}: ActionableButtonProps): ActionableButtonValues {\n  const translate = useTranslate();\n  const {\n    textTransformers: { humanize },\n  } = useRefineOptions();\n\n  const key = `buttons.${type}`;\n  const fallback = humanize(type);\n\n  const label = translate(key, fallback);\n\n  return { label };\n}\n","import React from \"react\";\n\nimport { useUserFriendlyName } from \"../../../definitions/helpers/useUserFriendlyName\";\nimport { useRouterType } from \"../../../contexts/router/picker\";\nimport { useResourceParams } from \"../../use-resource-params\";\nimport { useRefineOptions } from \"../../use-refine-options\";\nimport { useButtonCanAccess } from \"../button-can-access\";\nimport { useRouterContext } from \"../../legacy-router\";\nimport { useNavigation } from \"../../navigation\";\nimport { useTranslate } from \"../../i18n\";\nimport { useLink } from \"../../router\";\n\nimport type { BaseKey } from \"../../../contexts/data/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport type { CanReturnType } from \"../../../contexts/accessControl/types\";\n\nexport type NavigationButtonProps = {\n  action: Action;\n  id?: BaseKey;\n  resource?: string;\n  meta?: Record<string, unknown>;\n  accessControl?: {\n    enabled?: boolean;\n    hideIfUnauthorized?: boolean;\n  };\n};\n\nexport type NavigationButtonValues = {\n  to: string;\n  label: string;\n  disabled: boolean;\n  title: string;\n  hidden: boolean;\n  canAccess: CanReturnType | undefined;\n  LinkComponent: React.ComponentType<\n    React.PropsWithChildren<{\n      [prop: string]: any;\n      to: string;\n    }>\n  >;\n};\n\nexport function useNavigationButton(\n  props: NavigationButtonProps,\n): NavigationButtonValues {\n  const navigation = useNavigation();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n  const translate = useTranslate();\n  const getUserFriendlyName = useUserFriendlyName();\n  const {\n    textTransformers: { humanize },\n  } = useRefineOptions();\n\n  const { id, resource, identifier } = useResourceParams({\n    resource: props.resource,\n    id: props.action === \"create\" ? undefined : props.id,\n  });\n\n  const { canAccess, title, hidden, disabled } = useButtonCanAccess({\n    action: props.action,\n    accessControl: props.accessControl,\n    id,\n    resource,\n  });\n\n  const LinkComponent = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const to = React.useMemo(() => {\n    if (!resource) return \"\";\n    switch (props.action) {\n      case \"create\":\n      case \"list\":\n        return navigation[`${props.action}Url`](resource, props.meta);\n      default:\n        if (!id) return \"\";\n        return navigation[`${props.action}Url`](resource, id, props.meta);\n    }\n  }, [resource, id, props.meta, navigation[`${props.action}Url`]]);\n\n  const label =\n    props.action === \"list\"\n      ? translate(\n          `${identifier ?? props.resource}.titles.list`,\n          getUserFriendlyName(\n            resource?.meta?.label ??\n              resource?.label ??\n              identifier ??\n              props.resource,\n            \"plural\",\n          ),\n        )\n      : translate(`buttons.${props.action}`, humanize(props.action));\n\n  return {\n    to,\n    label,\n    title,\n    disabled,\n    hidden,\n    canAccess,\n    LinkComponent,\n  };\n}\n","import React from \"react\";\n\nimport { AccessControlContext } from \"../../../contexts/accessControl\";\nimport { useCan } from \"../../accessControl\";\nimport { useTranslate } from \"../../i18n\";\n\nimport type { CanReturnType } from \"../../../contexts/accessControl/types\";\nimport type { IResourceItem } from \"../../../contexts/resource/types\";\nimport type { Action } from \"../../../contexts/router/types\";\nimport type { BaseKey } from \"../../../contexts/data/types\";\n\ntype ButtonCanAccessProps = {\n  action: Action | \"delete\";\n  resource?: IResourceItem;\n  id?: BaseKey;\n  accessControl?: {\n    enabled?: boolean;\n    hideIfUnauthorized?: boolean;\n  };\n};\n\ntype ButtonCanAccessValues = {\n  title: string;\n  hidden: boolean;\n  disabled: boolean;\n  canAccess: CanReturnType | undefined;\n};\n\nexport const useButtonCanAccess = (\n  props: ButtonCanAccessProps,\n): ButtonCanAccessValues => {\n  const translate = useTranslate();\n  const accessControlContext = React.useContext(AccessControlContext);\n\n  const accessControlEnabled =\n    props.accessControl?.enabled ??\n    accessControlContext.options.buttons.enableAccessControl;\n\n  const hideIfUnauthorized =\n    props.accessControl?.hideIfUnauthorized ??\n    accessControlContext.options.buttons.hideIfUnauthorized;\n\n  const { data: canAccess } = useCan({\n    resource: props.resource?.name,\n    action: props.action === \"clone\" ? \"create\" : props.action,\n    params: { id: props.id, resource: props.resource },\n    queryOptions: {\n      enabled: accessControlEnabled,\n    },\n  });\n\n  const title = React.useMemo(() => {\n    if (canAccess?.can) return \"\";\n    if (canAccess?.reason) return canAccess.reason;\n\n    return translate(\n      \"buttons.notAccessTitle\",\n      \"You don't have permission to access\",\n    );\n  }, [canAccess?.can, canAccess?.reason, translate]);\n\n  const hidden = accessControlEnabled && hideIfUnauthorized && !canAccess?.can;\n\n  const disabled = canAccess?.can === false;\n\n  return {\n    title,\n    hidden,\n    disabled,\n    canAccess,\n  };\n};\n","import { useTranslate } from \"../../i18n\";\nimport { useDelete } from \"../../data/useDelete\";\nimport { useButtonCanAccess } from \"../button-can-access\";\nimport { useResourceParams } from \"../../use-resource-params\";\nimport { useMutationMode, useWarnAboutChange } from \"../../refine\";\n\nimport type { BaseKey, DeleteOneResponse } from \"../../../contexts/data/types\";\nimport type { CanReturnType } from \"../../../contexts/accessControl/types\";\nimport type { DeleteParams } from \"../../data/useDelete\";\n\nexport type DeleteButtonProps = {\n  resource?: string;\n  id?: BaseKey;\n  dataProviderName?: string;\n  meta?: Record<string, unknown>;\n  accessControl?: {\n    enabled?: boolean;\n    hideIfUnauthorized?: boolean;\n  };\n  onSuccess?: (value: DeleteOneResponse) => void;\n} & Pick<\n  DeleteParams<any, any, any>,\n  \"mutationMode\" | \"successNotification\" | \"errorNotification\" | \"invalidates\"\n>;\n\nexport type DeleteButtonValues = {\n  label: string;\n  title: string;\n  hidden: boolean;\n  loading: boolean;\n  disabled: boolean;\n  canAccess: CanReturnType | undefined;\n  confirmOkLabel: string;\n  cancelLabel: string;\n  confirmTitle: string;\n  onConfirm: () => void;\n};\n\nexport function useDeleteButton(props: DeleteButtonProps): DeleteButtonValues {\n  const translate = useTranslate();\n  const { mutate, isLoading, variables } = useDelete();\n  const { setWarnWhen } = useWarnAboutChange();\n  const { mutationMode } = useMutationMode(props.mutationMode);\n\n  const { id, resource, identifier } = useResourceParams({\n    resource: props.resource,\n    id: props.id,\n  });\n\n  const { title, disabled, hidden, canAccess } = useButtonCanAccess({\n    action: \"delete\",\n    accessControl: props.accessControl,\n    id,\n    resource,\n  });\n\n  const label = translate(\"buttons.delete\", \"Delete\");\n\n  const confirmOkLabel = translate(\"buttons.delete\", \"Delete\");\n\n  const confirmTitle = translate(\"buttons.confirm\", \"Are you sure?\");\n\n  const cancelLabel = translate(\"buttons.cancel\", \"Cancel\");\n\n  const loading = id === variables?.id && isLoading;\n\n  const onConfirm = () => {\n    if (id && identifier) {\n      setWarnWhen(false);\n      mutate(\n        {\n          id,\n          resource: identifier,\n          mutationMode,\n          successNotification: props.successNotification,\n          errorNotification: props.errorNotification,\n          meta: props.meta,\n          metaData: props.meta,\n          dataProviderName: props.dataProviderName,\n          invalidates: props.invalidates,\n        },\n        {\n          onSuccess: props.onSuccess,\n        },\n      );\n    }\n  };\n\n  return {\n    label,\n    title,\n    hidden,\n    disabled,\n    canAccess,\n    loading,\n    confirmOkLabel,\n    cancelLabel,\n    confirmTitle,\n    onConfirm,\n  };\n}\n","import { useQueryClient } from \"@tanstack/react-query\";\n\nimport { useTranslate } from \"../../i18n\";\nimport { useInvalidate } from \"../../invalidate\";\nimport { useResourceParams } from \"../../use-resource-params\";\nimport { useResource } from \"../../resource\";\nimport { useKeys } from \"../../useKeys\";\nimport { pickDataProvider } from \"../../../definitions\";\n\nimport type { BaseKey } from \"../../../contexts/data/types\";\n\nexport type RefreshButtonProps = {\n  resource?: string;\n  id?: BaseKey;\n  dataProviderName?: string;\n  meta?: Record<string, unknown>;\n};\n\nexport type RefreshButtonValues = {\n  onClick: () => void;\n  label: string;\n  loading: boolean;\n};\n\nexport function useRefreshButton(\n  props: RefreshButtonProps,\n): RefreshButtonValues {\n  const translate = useTranslate();\n  const { keys, preferLegacyKeys } = useKeys();\n\n  const queryClient = useQueryClient();\n  const invalidates = useInvalidate();\n\n  const { identifier, id } = useResourceParams({\n    resource: props.resource,\n    id: props.id,\n  });\n\n  const { resources } = useResource();\n\n  const loading = !!queryClient.isFetching({\n    queryKey: keys()\n      .data(pickDataProvider(identifier, props.dataProviderName, resources))\n      .resource(identifier)\n      .action(\"one\")\n      .get(preferLegacyKeys),\n  });\n\n  const onClick = () => {\n    invalidates({\n      id,\n      invalidates: [\"detail\"],\n      dataProviderName: props.dataProviderName,\n      resource: identifier,\n    });\n  };\n\n  const label = translate(\"buttons.refresh\", \"Refresh\");\n\n  return {\n    onClick,\n    label,\n    loading,\n  };\n}\n","import { useActionableButton } from \"./actionable-button\";\nimport { useNavigationButton } from \"./navigation-button\";\n\nimport type { NavigationButtonProps } from \"./navigation-button\";\nimport type { Prettify } from \"../../contexts/data/types\";\n\nexport { useDeleteButton } from \"./delete-button\";\n\nexport { useRefreshButton } from \"./refresh-button\";\n\nexport const useShowButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\">>,\n) => useNavigationButton({ ...props, action: \"show\" });\n\nexport const useEditButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\">>,\n) => useNavigationButton({ ...props, action: \"edit\" });\n\nexport const useCloneButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\">>,\n) => useNavigationButton({ ...props, action: \"clone\" });\n\nexport const useCreateButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\" | \"id\">>,\n) => useNavigationButton({ ...props, action: \"create\" });\n\nexport const useListButton = (\n  props: Prettify<Omit<NavigationButtonProps, \"action\" | \"id\">>,\n) => useNavigationButton({ ...props, action: \"list\" });\n\nexport const useSaveButton = () => useActionableButton({ type: \"save\" });\n\nexport const useExportButton = () => useActionableButton({ type: \"export\" });\n\nexport const useImportButton = () => useActionableButton({ type: \"import\" });\n","import React, { useState } from \"react\";\n\nimport { useLogin, useTranslate } from \"@hooks\";\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nexport interface ILoginForm {\n  username: string;\n  password: string;\n}\n\n/**\n * @deprecated LoginPage is deprecated. Use AuthPage instead. @see {@link https://refine.dev/docs/core/components/auth-page} for more details.\n * **refine** has a default login page form which is served on `/login` route when the `authProvider` configuration is provided.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config/#loginpage} for more details.\n */\nexport const LoginPage: React.FC = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login } = useLogin<ILoginForm>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  return (\n    <>\n      <h1>{translate(\"pages.login.title\", \"Sign in your account\")}</h1>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          login({ username, password });\n        }}\n      >\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                {translate(\"pages.login.username\", undefined, \"username\")}:\n              </td>\n              <td>\n                <input\n                  type=\"text\"\n                  size={20}\n                  autoCorrect=\"off\"\n                  spellCheck={false}\n                  autoCapitalize=\"off\"\n                  autoFocus\n                  required\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                {translate(\"pages.login.password\", undefined, \"password\")}:\n              </td>\n              <td>\n                <input\n                  type=\"password\"\n                  required\n                  size={20}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <br />\n        <input type=\"submit\" value=\"login\" />\n      </form>\n    </>\n  );\n};\n","import React, {\n  type DetailedHTMLProps,\n  type HTMLAttributes,\n  type FormHTMLAttributes,\n} from \"react\";\n\nimport {\n  ForgotPasswordPage,\n  LoginPage,\n  RegisterPage,\n  UpdatePasswordPage,\n} from \"./components\";\n\nimport type { AuthPageProps } from \"./types\";\n\nexport type DivPropsType = DetailedHTMLProps<\n  HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n>;\nexport type FormPropsType = DetailedHTMLProps<\n  FormHTMLAttributes<HTMLFormElement>,\n  HTMLFormElement\n>;\n\nexport type AuthProps = AuthPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\n/**\n * **refine** has a default auth page form which is served on `/login` route when the `authProvider` configuration is provided.\n * @param title is not implemented yet.\n * @see {@link https://refine.dev/docs/api-reference/core/components/auth-page/} for more details.\n */\nexport const AuthPage: React.FC<AuthProps> = (props) => {\n  const { type } = props;\n  const renderView = () => {\n    switch (type) {\n      case \"register\":\n        return <RegisterPage {...props} />;\n      case \"forgotPassword\":\n        return <ForgotPasswordPage {...props} />;\n      case \"updatePassword\":\n        return <UpdatePasswordPage {...props} />;\n      default:\n        return <LoginPage {...props} />;\n    }\n  };\n\n  return <>{renderView()}</>;\n};\n","import React, { useState } from \"react\";\n\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport {\n  useLink,\n  useLogin,\n  useRouterContext,\n  useRouterType,\n  useTranslate,\n} from \"@hooks\";\n\nimport type { DivPropsType, FormPropsType } from \"../..\";\nimport type { LoginFormTypes, LoginPageProps } from \"../../types\";\n\ntype LoginProps = LoginPageProps<DivPropsType, DivPropsType, FormPropsType>;\n\nexport const LoginPage: React.FC<LoginProps> = ({\n  providers,\n  registerLink,\n  forgotPasswordLink,\n  rememberMe,\n  contentProps,\n  wrapperProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  hideForm,\n  mutationVariables,\n}) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [remember, setRemember] = useState(false);\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: login } = useLogin<LoginFormTypes>({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const renderProviders = () => {\n    if (providers) {\n      return providers.map((provider) => (\n        <div\n          key={provider.name}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <button\n            onClick={() =>\n              login({\n                ...mutationVariables,\n                providerName: provider.name,\n              })\n            }\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {provider?.icon}\n            {provider.label ?? <label>{provider.label}</label>}\n          </button>\n        </div>\n      ));\n    }\n    return null;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.login.title\", \"Sign in to your account\")}\n      </h1>\n      {renderProviders()}\n      {!hideForm && (\n        <>\n          <hr />\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              login({ ...mutationVariables, email, password, remember });\n            }}\n            {...formProps}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: 25,\n              }}\n            >\n              <label htmlFor=\"email-input\">\n                {translate(\"pages.login.fields.email\", \"Email\")}\n              </label>\n              <input\n                id=\"email-input\"\n                name=\"email\"\n                type=\"text\"\n                size={20}\n                autoCorrect=\"off\"\n                spellCheck={false}\n                autoCapitalize=\"off\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"password-input\">\n                {translate(\"pages.login.fields.password\", \"Password\")}\n              </label>\n              <input\n                id=\"password-input\"\n                type=\"password\"\n                name=\"password\"\n                required\n                size={20}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              {rememberMe ?? (\n                <>\n                  <label htmlFor=\"remember-me-input\">\n                    {translate(\"pages.login.buttons.rememberMe\", \"Remember me\")}\n                    <input\n                      id=\"remember-me-input\"\n                      name=\"remember\"\n                      type=\"checkbox\"\n                      size={20}\n                      checked={remember}\n                      value={remember.toString()}\n                      onChange={() => {\n                        setRemember(!remember);\n                      }}\n                    />\n                  </label>\n                </>\n              )}\n              <br />\n              {forgotPasswordLink ??\n                renderLink(\n                  \"/forgot-password\",\n                  translate(\n                    \"pages.login.buttons.forgotPassword\",\n                    \"Forgot password?\",\n                  ),\n                )}\n              <input\n                type=\"submit\"\n                value={translate(\"pages.login.signin\", \"Sign in\")}\n              />\n              {registerLink ?? (\n                <span>\n                  {translate(\n                    \"pages.login.buttons.noAccount\",\n                    \"Don’t have an account?\",\n                  )}{\" \"}\n                  {renderLink(\n                    \"/register\",\n                    translate(\"pages.login.register\", \"Sign up\"),\n                  )}\n                </span>\n              )}\n            </div>\n          </form>\n        </>\n      )}\n      {registerLink !== false && hideForm && (\n        <div style={{ textAlign: \"center\" }}>\n          {translate(\"pages.login.buttons.noAccount\", \"Don’t have an account?\")}{\" \"}\n          {renderLink(\n            \"/register\",\n            translate(\"pages.login.register\", \"Sign up\"),\n          )}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport {\n  useLink,\n  useRegister,\n  useRouterContext,\n  useRouterType,\n  useTranslate,\n} from \"@hooks\";\n\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\n\nimport type { DivPropsType, FormPropsType } from \"../..\";\nimport type { RegisterPageProps } from \"../../types\";\n\ntype RegisterProps = RegisterPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const RegisterPage: React.FC<RegisterProps> = ({\n  providers,\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  hideForm,\n  mutationVariables,\n}) => {\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: register, isLoading } = useRegister({\n    v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n  });\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const renderProviders = () => {\n    if (providers) {\n      return providers.map((provider) => (\n        <div\n          key={provider.name}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            marginBottom: \"1rem\",\n          }}\n        >\n          <button\n            onClick={() =>\n              register({\n                ...mutationVariables,\n                providerName: provider.name,\n              })\n            }\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            {provider?.icon}\n            {provider.label ?? <label>{provider.label}</label>}\n          </button>\n        </div>\n      ));\n    }\n    return null;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.register.title\", \"Sign up for your account\")}\n      </h1>\n      {renderProviders()}\n      {!hideForm && (\n        <>\n          <hr />\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n              register({ ...mutationVariables, email, password });\n            }}\n            {...formProps}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                padding: 25,\n              }}\n            >\n              <label htmlFor=\"email-input\">\n                {translate(\"pages.register.fields.email\", \"Email\")}\n              </label>\n              <input\n                id=\"email-input\"\n                name=\"email\"\n                type=\"email\"\n                size={20}\n                autoCorrect=\"off\"\n                spellCheck={false}\n                autoCapitalize=\"off\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <label htmlFor=\"password-input\">\n                {translate(\"pages.register.fields.password\", \"Password\")}\n              </label>\n              <input\n                id=\"password-input\"\n                name=\"password\"\n                type=\"password\"\n                required\n                size={20}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <input\n                type=\"submit\"\n                value={translate(\"pages.register.buttons.submit\", \"Sign up\")}\n                disabled={isLoading}\n              />\n              {loginLink ?? (\n                <>\n                  <span>\n                    {translate(\n                      \"pages.login.buttons.haveAccount\",\n                      \"Have an account?\",\n                    )}{\" \"}\n                    {renderLink(\n                      \"/login\",\n                      translate(\"pages.login.signin\", \"Sign in\"),\n                    )}\n                  </span>\n                </>\n              )}\n            </div>\n          </form>\n        </>\n      )}\n      {loginLink !== false && hideForm && (\n        <div style={{ textAlign: \"center\" }}>\n          {translate(\"pages.login.buttons.haveAccount\", \"Have an account?\")}{\" \"}\n          {renderLink(\"/login\", translate(\"pages.login.signin\", \"Sign in\"))}\n        </div>\n      )}\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport {\n  useForgotPassword,\n  useLink,\n  useRouterContext,\n  useRouterType,\n  useTranslate,\n} from \"@hooks\";\n\nimport type { DivPropsType, FormPropsType } from \"../..\";\nimport type {\n  ForgotPasswordFormTypes,\n  ForgotPasswordPageProps,\n} from \"../../types\";\n\ntype ForgotPasswordProps = ForgotPasswordPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const ForgotPasswordPage: React.FC<ForgotPasswordProps> = ({\n  loginLink,\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  mutationVariables,\n}) => {\n  const translate = useTranslate();\n  const routerType = useRouterType();\n  const Link = useLink();\n  const { Link: LegacyLink } = useRouterContext();\n\n  const ActiveLink = routerType === \"legacy\" ? LegacyLink : Link;\n\n  const [email, setEmail] = useState(\"\");\n\n  const { mutate: forgotPassword, isLoading } =\n    useForgotPassword<ForgotPasswordFormTypes>();\n\n  const renderLink = (link: string, text?: string) => {\n    return <ActiveLink to={link}>{text}</ActiveLink>;\n  };\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.forgotPassword.title\", \"Forgot your password?\")}\n      </h1>\n      <hr />\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          forgotPassword({ ...mutationVariables, email });\n        }}\n        {...formProps}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: 25,\n          }}\n        >\n          <label htmlFor=\"email-input\">\n            {translate(\"pages.forgotPassword.fields.email\", \"Email\")}\n          </label>\n          <input\n            id=\"email-input\"\n            name=\"email\"\n            type=\"mail\"\n            autoCorrect=\"off\"\n            spellCheck={false}\n            autoCapitalize=\"off\"\n            required\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <input\n            type=\"submit\"\n            disabled={isLoading}\n            value={translate(\n              \"pages.forgotPassword.buttons.submit\",\n              \"Send reset instructions\",\n            )}\n          />\n          <br />\n          {loginLink ?? (\n            <span>\n              {translate(\n                \"pages.register.buttons.haveAccount\",\n                \"Have an account? \",\n              )}{\" \"}\n              {renderLink(\"/login\", translate(\"pages.login.signin\", \"Sign in\"))}\n            </span>\n          )}\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { useActiveAuthProvider } from \"@definitions/helpers\";\nimport { useTranslate, useUpdatePassword } from \"@hooks\";\n\nimport type { DivPropsType, FormPropsType } from \"../..\";\nimport type {\n  UpdatePasswordFormTypes,\n  UpdatePasswordPageProps,\n} from \"../../types\";\n\ntype UpdatePasswordProps = UpdatePasswordPageProps<\n  DivPropsType,\n  DivPropsType,\n  FormPropsType\n>;\n\nexport const UpdatePasswordPage: React.FC<UpdatePasswordProps> = ({\n  wrapperProps,\n  contentProps,\n  renderContent,\n  formProps,\n  title = undefined,\n  mutationVariables,\n}) => {\n  const translate = useTranslate();\n\n  const authProvider = useActiveAuthProvider();\n  const { mutate: updatePassword, isLoading } =\n    useUpdatePassword<UpdatePasswordFormTypes>({\n      v3LegacyAuthProviderCompatible: Boolean(authProvider?.isLegacy),\n    });\n\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const content = (\n    <div {...contentProps}>\n      <h1 style={{ textAlign: \"center\" }}>\n        {translate(\"pages.updatePassword.title\", \"Update Password\")}\n      </h1>\n      <hr />\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          updatePassword({\n            ...mutationVariables,\n            password: newPassword,\n            confirmPassword,\n          });\n        }}\n        {...formProps}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            padding: 25,\n          }}\n        >\n          <label htmlFor=\"password-input\">\n            {translate(\"pages.updatePassword.fields.password\", \"New Password\")}\n          </label>\n          <input\n            id=\"password-input\"\n            name=\"password\"\n            type=\"password\"\n            required\n            size={20}\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n          />\n          <label htmlFor=\"confirm-password-input\">\n            {translate(\n              \"pages.updatePassword.fields.confirmPassword\",\n              \"Confirm New Password\",\n            )}\n          </label>\n          <input\n            id=\"confirm-password-input\"\n            name=\"confirmPassword\"\n            type=\"password\"\n            required\n            size={20}\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <input\n            type=\"submit\"\n            disabled={isLoading}\n            value={translate(\"pages.updatePassword.buttons.submit\", \"Update\")}\n          />\n        </div>\n      </form>\n    </div>\n  );\n\n  return (\n    <div {...wrapperProps}>\n      {renderContent ? renderContent(content, title) : content}\n    </div>\n  );\n};\n","import React from \"react\";\n\n/**\n * **refine** shows a default ready page on root route when no `resources` is passed to the `<Refine>` component as a property.\n *\n * @deprecated `ReadyPage` is deprecated and will be removed in the next major release.\n */\nexport const ReadyPage: React.FC = () => {\n  return (\n    <>\n      <h1>Welcome on board</h1>\n      <p>Your configuration is completed.</p>\n      <p>\n        Now you can get started by adding your resources to the{\" \"}\n        <code>`resources`</code> property of <code>{\"`<Refine>`\"}</code>\n      </p>\n      <div style={{ display: \"flex\", gap: 8 }}>\n        <a href=\"https://refine.dev\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Documentation</button>\n        </a>\n        <a href=\"https://refine.dev/examples\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Examples</button>\n        </a>\n        <a href=\"https://discord.gg/refine\" target=\"_blank\" rel=\"noreferrer\">\n          <button>Community</button>\n        </a>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { ConfigSuccessPage } from \"../config-success\";\nimport { useRefineContext } from \"@hooks/refine\";\nimport { ConfigErrorPage } from \"../config-error\";\n\nexport const WelcomePage = () => {\n  const { __initialized } = useRefineContext();\n\n  return (\n    <>\n      <ConfigSuccessPage />\n      {!__initialized && <ConfigErrorPage />}\n    </>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { useMediaQuery } from \"@definitions/helpers\";\n\ntype CardInfo = {\n  title: string;\n  description: string;\n  link: string;\n  iconUrl: string;\n};\n\nconst cards: CardInfo[] = [\n  {\n    title: \"Documentation\",\n    description:\n      \"Learn about the technical details of using Refine in your projects.\",\n    link: \"https://refine.dev/docs\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/book.svg\",\n  },\n  {\n    title: \"Tutorial\",\n    description:\n      \"Learn how to use Refine by building a fully-functioning CRUD app, from scratch to full launch.\",\n    link: \"https://refine.dev/tutorial\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/hat.svg\",\n  },\n  {\n    title: \"Templates\",\n    description:\n      \"Explore a range of pre-built templates, perfect everything from admin panels to dashboards and CRMs.\",\n    link: \"https://refine.dev/templates\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/application.svg\",\n  },\n  {\n    title: \"Community\",\n    description: \"Join our Discord community and keep up with the latest news.\",\n    link: \"https://discord.gg/refine\",\n    iconUrl:\n      \"https://refine.ams3.cdn.digitaloceanspaces.com/welcome-page/discord.svg\",\n  },\n];\n\n/**\n * It is a page that welcomes you after the configuration is completed.\n */\nexport const ConfigSuccessPage: React.FC = () => {\n  const isTablet = useMediaQuery(\"(max-width: 1010px)\");\n  const isMobile = useMediaQuery(\"(max-width: 650px)\");\n\n  const getGridTemplateColumns = () => {\n    if (isMobile) {\n      return \"1, 280px\";\n    }\n    if (isTablet) {\n      return \"2, 280px\";\n    }\n    return \"4, 1fr\";\n  };\n\n  const getHeaderFontSize = () => {\n    if (isMobile) {\n      return \"32px\";\n    }\n    if (isTablet) {\n      return \"40px\";\n    }\n    return \"48px\";\n  };\n\n  const getSubHeaderFontSize = () => {\n    if (isMobile) {\n      return \"16px\";\n    }\n    if (isTablet) {\n      return \"20px\";\n    }\n    return \"24px\";\n  };\n\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        zIndex: 10,\n        inset: 0,\n        overflow: \"auto\",\n        width: \"100dvw\",\n        height: \"100dvh\",\n      }}\n    >\n      <div\n        style={{\n          overflow: \"hidden\",\n          position: \"relative\",\n          backgroundSize: \"cover\",\n          backgroundRepeat: \"no-repeat\",\n          background: isMobile\n            ? \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(88.89% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(88.89% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30\"\n            : isTablet\n              ? \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(66.67% 50% at 50% 100%, rgba(38, 217, 127, 0.10) 0%, rgba(38, 217, 127, 0.00) 100%), radial-gradient(66.67% 50% at 50% 0%, rgba(71, 235, 235, 0.15) 0%, rgba(71, 235, 235, 0.00) 100%), #1D1E30\"\n              : \"url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/landing-noise.webp), radial-gradient(35.56% 50% at 50% 100%, rgba(38, 217, 127, 0.12) 0%, rgba(38, 217, 127, 0) 100%), radial-gradient(35.56% 50% at 50% 0%, rgba(71, 235, 235, 0.18) 0%, rgba(71, 235, 235, 0) 100%), #1D1E30\",\n          minHeight: \"100%\",\n          minWidth: \"100%\",\n          fontFamily: \"Arial\",\n          color: \"#FFFFFF\",\n        }}\n      >\n        <div\n          style={{\n            zIndex: 2,\n            position: \"absolute\",\n            width: isMobile ? \"400px\" : \"800px\",\n            height: \"552px\",\n            opacity: \"0.5\",\n            background:\n              \"url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/welcome-page-hexagon.png)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundSize: \"contain\",\n            top: \"0\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n          }}\n        />\n        <div style={{ height: isMobile ? \"40px\" : \"80px\" }} />\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <div\n            style={{\n              backgroundRepeat: \"no-repeat\",\n              backgroundSize: isMobile ? \"112px 58px\" : \"224px 116px\",\n              backgroundImage:\n                \"url(https://refine.ams3.cdn.digitaloceanspaces.com/assets/refine-logo.svg)\",\n              width: isMobile ? 112 : 224,\n              height: isMobile ? 58 : 116,\n            }}\n          />\n        </div>\n        <div\n          style={{\n            height: isMobile ? \"120px\" : isTablet ? \"200px\" : \"30vh\",\n            minHeight: isMobile ? \"120px\" : isTablet ? \"200px\" : \"200px\",\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"16px\",\n            textAlign: \"center\",\n          }}\n        >\n          <h1\n            style={{\n              fontSize: getHeaderFontSize(),\n              fontWeight: 700,\n              margin: \"0px\",\n            }}\n          >\n            Welcome Aboard!\n          </h1>\n          <h4\n            style={{\n              fontSize: getSubHeaderFontSize(),\n              fontWeight: 400,\n              margin: \"0px\",\n            }}\n          >\n            Your configuration is completed.\n          </h4>\n        </div>\n        <div style={{ height: \"64px\" }} />\n        <div\n          style={{\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${getGridTemplateColumns()})`,\n            justifyContent: \"center\",\n            gap: \"48px\",\n            paddingRight: \"16px\",\n            paddingLeft: \"16px\",\n            paddingBottom: \"32px\",\n            maxWidth: \"976px\",\n            margin: \"auto\",\n          }}\n        >\n          {cards.map((card) => (\n            <Card key={`welcome-page-${card.title}`} card={card} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\ntype CardProps = {\n  card: CardInfo;\n};\n\nconst Card: React.FC<CardProps> = ({ card }) => {\n  const { title, description, iconUrl, link } = card;\n\n  const [isHover, setIsHover] = useState(false);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"16px\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n        }}\n      >\n        <a\n          onPointerEnter={() => setIsHover(true)}\n          onPointerLeave={() => setIsHover(false)}\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            color: \"#fff\",\n            textDecoration: \"none\",\n          }}\n          href={link}\n        >\n          <div\n            style={{\n              width: \"16px\",\n              height: \"16px\",\n              backgroundPosition: \"center\",\n              backgroundSize: \"contain\",\n              backgroundRepeat: \"no-repeat\",\n              backgroundImage: `url(${iconUrl})`,\n            }}\n          />\n          <span\n            style={{\n              fontSize: \"16px\",\n              fontWeight: 700,\n              marginLeft: \"13px\",\n              marginRight: \"14px\",\n            }}\n          >\n            {title}\n          </span>\n          <svg\n            style={{\n              transition:\n                \"transform 0.5s ease-in-out, opacity 0.2s ease-in-out\",\n              ...(isHover && {\n                transform: \"translateX(4px)\",\n                opacity: 1,\n              }),\n            }}\n            width=\"12\"\n            height=\"8\"\n            fill=\"none\"\n            opacity=\"0.5\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M7.293.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-3 3a1 1 0 0 1-1.414-1.414L8.586 5H1a1 1 0 0 1 0-2h7.586L7.293 1.707a1 1 0 0 1 0-1.414Z\"\n              fill=\"#fff\"\n            />\n          </svg>\n        </a>\n      </div>\n      <span\n        style={{\n          fontSize: \"12px\",\n          opacity: 0.5,\n          lineHeight: \"16px\",\n        }}\n      >\n        {description}\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const ConfigErrorPage = () => {\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        zIndex: 11,\n        inset: 0,\n        overflow: \"auto\",\n        width: \"100dvw\",\n        height: \"100dvh\",\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: \"24px\",\n          background: \"#14141FBF\",\n          backdropFilter: \"blur(3px)\",\n        }}\n      >\n        <div\n          style={{\n            maxWidth: \"640px\",\n            width: \"100%\",\n            background: \"#1D1E30\",\n            borderRadius: \"16px\",\n            border: \"1px solid #303450\",\n            boxShadow: \"0px 0px 120px -24px #000000\",\n          }}\n        >\n          <div\n            style={{\n              padding: \"16px 20px\",\n              borderBottom: \"1px solid #303450\",\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"8px\",\n              position: \"relative\",\n            }}\n          >\n            <ErrorGradient\n              style={{\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n              }}\n            />\n            <div\n              style={{\n                lineHeight: \"24px\",\n                fontSize: \"16px\",\n                color: \"#FFFFFF\",\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: \"16px\",\n              }}\n            >\n              <ErrorIcon />\n              <span\n                style={{\n                  fontWeight: 400,\n                }}\n              >\n                Configuration Error\n              </span>\n            </div>\n          </div>\n          <div\n            style={{\n              padding: \"20px\",\n              color: \"#A3ADC2\",\n              lineHeight: \"20px\",\n              fontSize: \"14px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"20px\",\n            }}\n          >\n            <p\n              style={{\n                margin: 0,\n                padding: 0,\n                lineHeight: \"28px\",\n                fontSize: \"16px\",\n              }}\n            >\n              <code\n                style={{\n                  display: \"inline-block\",\n                  background: \"#30345080\",\n                  padding: \"0 4px\",\n                  lineHeight: \"24px\",\n                  fontSize: \"16px\",\n                  borderRadius: \"4px\",\n                  color: \"#FFFFFF\",\n                }}\n              >\n                {\"<Refine />\"}\n              </code>{\" \"}\n              is not initialized. Please make sure you have it mounted in your\n              app and placed your components inside it.\n            </p>\n            <div>\n              <ExampleImplementation />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ExampleImplementation = () => {\n  return (\n    <pre\n      style={{\n        display: \"block\",\n        overflowX: \"auto\",\n        borderRadius: \"8px\",\n        fontSize: \"14px\",\n        lineHeight: \"24px\",\n        backgroundColor: \"#14141F\",\n        color: \"#E5ECF2\",\n        padding: \"16px\",\n        margin: \"0\",\n        maxHeight: \"400px\",\n        overflow: \"auto\",\n      }}\n    >\n      <span style={{ color: \"#FF7B72\" }}>import</span> {\"{\"} Refine, WelcomePage{\" \"}\n      {\"}\"} <span style={{ color: \"#FF7B72\" }}>from</span>{\" \"}\n      <span style={{ color: \"#A5D6FF\" }}>{'\"@refinedev/core\"'}</span>;{\"\\n\"}\n      {\"\\n\"}\n      <span style={{ color: \"#FF7B72\" }}>export</span>{\" \"}\n      <span style={{ color: \"#FF7B72\" }}>default</span>{\" \"}\n      <span>\n        <span style={{ color: \"#FF7B72\" }}>function</span>{\" \"}\n        <span style={{ color: \"#FFA657\" }}>App</span>\n        (\n        <span style={{ color: \"rgb(222, 147, 95)\" }} />){\" \"}\n      </span>\n      {\"{\"}\n      {\"\\n\"}\n      {\"  \"}\n      <span style={{ color: \"#FF7B72\" }}>return</span> ({\"\\n\"}\n      {\"    \"}\n      <span>\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;\n          <span style={{ color: \"#79C0FF\" }}>Refine</span>\n          {\"\\n\"}\n          {\"      \"}\n          <span style={{ color: \"#E5ECF2\", opacity: 0.6 }}>\n            {\"// \"}\n            <span>...</span>\n          </span>\n          {\"\\n\"}\n          {\"    \"}&gt;\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ opacity: 0.6 }}>\n          {\"{\"}\n          {\"/* ... */\"}\n          {\"}\"}\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;\n          <span style={{ color: \"#79C0FF\" }}>WelcomePage</span> /&gt;\n        </span>\n        {\"\\n\"}\n        {\"      \"}\n        <span style={{ opacity: 0.6 }}>\n          {\"{\"}\n          {\"/* ... */\"}\n          {\"}\"}\n        </span>\n        {\"\\n\"}\n        {\"    \"}\n        <span style={{ color: \"#79C0FF\" }}>\n          &lt;/\n          <span style={{ color: \"#79C0FF\" }}>Refine</span>\n          &gt;\n        </span>\n      </span>\n      {\"\\n\"}\n      {\"  \"});{\"\\n\"}\n      {\"}\"}\n    </pre>\n  );\n};\n\nconst ErrorGradient = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={204}\n    height={56}\n    viewBox=\"0 0 204 56\"\n    fill=\"none\"\n    {...props}\n  >\n    <path fill=\"url(#welcome-page-error-gradient-a)\" d=\"M12 0H0v12L12 0Z\" />\n    <path\n      fill=\"url(#welcome-page-error-gradient-b)\"\n      d=\"M28 0h-8L0 20v8L28 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-c)\"\n      d=\"M36 0h8L0 44v-8L36 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-d)\"\n      d=\"M60 0h-8L0 52v4h4L60 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-e)\"\n      d=\"M68 0h8L20 56h-8L68 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-f)\"\n      d=\"M92 0h-8L28 56h8L92 0Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-g)\"\n      d=\"M100 0h8L52 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-h)\"\n      d=\"M124 0h-8L60 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-i)\"\n      d=\"M140 0h-8L76 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-j)\"\n      d=\"M132 0h8L84 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-k)\"\n      d=\"M156 0h-8L92 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-l)\"\n      d=\"M164 0h8l-56 56h-8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-m)\"\n      d=\"M188 0h-8l-56 56h8l56-56Z\"\n    />\n    <path\n      fill=\"url(#welcome-page-error-gradient-n)\"\n      d=\"M204 0h-8l-56 56h8l56-56Z\"\n    />\n    <defs>\n      <radialGradient\n        id=\"welcome-page-error-gradient-a\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-b\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-c\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-d\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-e\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-f\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-g\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-h\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-i\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-j\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-k\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-l\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-m\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n      <radialGradient\n        id=\"welcome-page-error-gradient-n\"\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"scale(124)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#FF4C4D\" stopOpacity={0.1} />\n        <stop offset={1} stopColor=\"#FF4C4D\" stopOpacity={0} />\n      </radialGradient>\n    </defs>\n  </svg>\n);\n\nconst ErrorIcon = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={16}\n    height={16}\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    {...props}\n  >\n    <path\n      fill=\"#FF4C4D\"\n      fillRule=\"evenodd\"\n      d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16Z\"\n      clipRule=\"evenodd\"\n    />\n    <path\n      fill=\"#fff\"\n      fillRule=\"evenodd\"\n      d=\"M7 8a1 1 0 1 0 2 0V5a1 1 0 1 0-2 0v3Zm0 3a1 1 0 1 1 2 0 1 1 0 0 1-2 0Z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n","import React from \"react\";\n\nimport { useQuerySubscription } from \"@refinedev/devtools-internal\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\nimport { ReadyPage as DefaultReadyPage, RouteChangeHandler } from \"@components\";\nimport { Telemetry } from \"@components/telemetry\";\nimport { handleRefineOptions } from \"@definitions\";\nimport { useDeepMemo } from \"@hooks/deepMemo\";\n\nimport { AccessControlContextProvider } from \"../../../contexts/accessControl\";\nimport { AuditLogContextProvider } from \"../../../contexts/auditLog\";\nimport {\n  AuthBindingsContextProvider,\n  LegacyAuthContextProvider,\n} from \"../../../contexts/auth\";\nimport { DataContextProvider } from \"../../../contexts/data\";\nimport { I18nContextProvider } from \"../../../contexts/i18n\";\nimport { LiveContextProvider } from \"../../../contexts/live\";\nimport { NotificationContextProvider } from \"../../../contexts/notification\";\nimport { RefineContextProvider } from \"../../../contexts/refine\";\nimport { ResourceContextProvider } from \"../../../contexts/resource\";\nimport { RouterContextProvider } from \"../../../contexts/router\";\nimport { LegacyRouterContextProvider } from \"../../../contexts/router/legacy\";\nimport { RouterPickerProvider } from \"../../../contexts/router/picker\";\nimport { UndoableQueueContextProvider } from \"../../../contexts/undoableQueue\";\nimport { UnsavedWarnContextProvider } from \"../../../contexts/unsavedWarn\";\n\nimport type { RefineProps } from \"../../../contexts/refine/types\";\nimport { useRouterMisuseWarning } from \"../../../hooks/router/use-router-misuse-warning/index\";\n\n/**\n * {@link https://refine.dev/docs/api-reference/core/components/refine-config `<Refine> component`} is the entry point of a refine app.\n * It is where the highest level of configuration of the app occurs.\n * Only a dataProvider is required to bootstrap the app. After adding a dataProvider, resources can be added as property.\n *\n * @see {@link https://refine.dev/docs/api-reference/core/components/refine-config} for more details.\n */\nexport const Refine: React.FC<RefineProps> = ({\n  legacyAuthProvider,\n  authProvider,\n  dataProvider,\n  legacyRouterProvider,\n  routerProvider,\n  notificationProvider,\n  accessControlProvider,\n  auditLogProvider,\n  resources,\n  DashboardPage,\n  ReadyPage,\n  LoginPage,\n  catchAll,\n  children,\n  liveProvider,\n  i18nProvider,\n  Title,\n  Layout,\n  Sider,\n  Header,\n  Footer,\n  OffLayoutArea,\n  onLiveEvent,\n  options,\n}) => {\n  const {\n    optionsWithDefaults,\n    disableTelemetryWithDefault,\n    reactQueryWithDefaults,\n  } = handleRefineOptions({\n    options,\n  });\n\n  const queryClient = useDeepMemo(() => {\n    if (reactQueryWithDefaults.clientConfig instanceof QueryClient) {\n      return reactQueryWithDefaults.clientConfig;\n    }\n\n    return new QueryClient({\n      ...reactQueryWithDefaults.clientConfig,\n      defaultOptions: {\n        ...reactQueryWithDefaults.clientConfig.defaultOptions,\n        queries: {\n          refetchOnWindowFocus: false,\n          keepPreviousData: true,\n          ...reactQueryWithDefaults.clientConfig.defaultOptions?.queries,\n        },\n      },\n    });\n  }, [reactQueryWithDefaults.clientConfig]);\n\n  useQuerySubscription(queryClient);\n\n  const useNotificationProviderValues = React.useMemo(() => {\n    return typeof notificationProvider === \"function\"\n      ? notificationProvider\n      : () => notificationProvider;\n  }, [notificationProvider]);\n\n  const notificationProviderContextValues = useNotificationProviderValues();\n\n  /**\n   * Warn our users if they are using the old way of routing in the wrong prop.\n   */\n  useRouterMisuseWarning(routerProvider);\n  /** */\n\n  /**\n   * `<ReadyPage />` is only used in the legacy routing and is not used in the new routing.\n   * If `legacyRouterProvider` is provided and `routerProvider` is not, we'll check for the `resources` prop to be empty.\n   * If `resources` is empty, then we'll render `<ReadyPage />` component.\n   */\n  if (\n    legacyRouterProvider &&\n    !routerProvider &&\n    (resources ?? []).length === 0\n  ) {\n    return ReadyPage ? <ReadyPage /> : <DefaultReadyPage />;\n  }\n\n  /** Router\n   *\n   * Handle routing from `RouterContextProvider` and `router` prop for the brand new way\n   * If `router` is not provided, then we'r checking for `routerProvider` prop\n   * If `routerProvider` is provided, then `RouterContextProvider` is used\n   * If none of them is provided, then `RouterContextProvider` is used because it supports undefined router\n   *\n   * `RouterContextProvider` is skipped whenever possible and by this way,\n   * we can achieve backward compability only when its provided by user\n   *\n   */\n  const { RouterComponent = React.Fragment } = !routerProvider\n    ? legacyRouterProvider ?? {}\n    : {};\n  /** */\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <NotificationContextProvider {...notificationProviderContextValues}>\n        <LegacyAuthContextProvider\n          {...(legacyAuthProvider ?? {})}\n          isProvided={Boolean(legacyAuthProvider)}\n        >\n          <AuthBindingsContextProvider\n            {...(authProvider ?? {})}\n            isProvided={Boolean(authProvider)}\n          >\n            <DataContextProvider dataProvider={dataProvider}>\n              <LiveContextProvider liveProvider={liveProvider}>\n                <RouterPickerProvider\n                  value={\n                    legacyRouterProvider && !routerProvider ? \"legacy\" : \"new\"\n                  }\n                >\n                  <RouterContextProvider router={routerProvider}>\n                    <LegacyRouterContextProvider {...legacyRouterProvider}>\n                      <ResourceContextProvider resources={resources ?? []}>\n                        <I18nContextProvider i18nProvider={i18nProvider}>\n                          <AccessControlContextProvider\n                            {...(accessControlProvider ?? {})}\n                          >\n                            <AuditLogContextProvider\n                              {...(auditLogProvider ?? {})}\n                            >\n                              <UndoableQueueContextProvider>\n                                <RefineContextProvider\n                                  mutationMode={\n                                    optionsWithDefaults.mutationMode\n                                  }\n                                  warnWhenUnsavedChanges={\n                                    optionsWithDefaults.warnWhenUnsavedChanges\n                                  }\n                                  syncWithLocation={\n                                    optionsWithDefaults.syncWithLocation\n                                  }\n                                  Title={Title}\n                                  undoableTimeout={\n                                    optionsWithDefaults.undoableTimeout\n                                  }\n                                  catchAll={catchAll}\n                                  DashboardPage={DashboardPage}\n                                  LoginPage={LoginPage}\n                                  Layout={Layout}\n                                  Sider={Sider}\n                                  Footer={Footer}\n                                  Header={Header}\n                                  OffLayoutArea={OffLayoutArea}\n                                  hasDashboard={!!DashboardPage}\n                                  liveMode={optionsWithDefaults.liveMode}\n                                  onLiveEvent={onLiveEvent}\n                                  options={optionsWithDefaults}\n                                >\n                                  <UnsavedWarnContextProvider>\n                                    <RouterComponent>\n                                      {children}\n                                      {!disableTelemetryWithDefault && (\n                                        <Telemetry />\n                                      )}\n                                      <RouteChangeHandler />\n                                    </RouterComponent>\n                                  </UnsavedWarnContextProvider>\n                                </RefineContextProvider>\n                              </UndoableQueueContextProvider>\n                            </AuditLogContextProvider>\n                          </AccessControlContextProvider>\n                        </I18nContextProvider>\n                      </ResourceContextProvider>\n                    </LegacyRouterContextProvider>\n                  </RouterContextProvider>\n                </RouterPickerProvider>\n              </LiveContextProvider>\n            </DataContextProvider>\n          </AuthBindingsContextProvider>\n        </LegacyAuthContextProvider>\n      </NotificationContextProvider>\n    </QueryClientProvider>\n  );\n};\n","import React from \"react\";\n\nimport { useTelemetryData } from \"@hooks/useTelemetryData\";\n\nimport type { ITelemetryData } from \"./types\";\n\nconst encode = (payload: ITelemetryData): string | undefined => {\n  try {\n    const stringifiedPayload = JSON.stringify(payload || {});\n\n    if (typeof btoa !== \"undefined\") {\n      return btoa(stringifiedPayload);\n    }\n\n    return Buffer.from(stringifiedPayload).toString(\"base64\");\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst throughImage = (src: string) => {\n  const img = new Image();\n\n  img.src = src;\n};\n\nconst throughFetch = (src: string) => {\n  fetch(src);\n};\n\nconst transport = (src: string) => {\n  if (typeof Image !== \"undefined\") {\n    throughImage(src);\n  } else if (typeof fetch !== \"undefined\") {\n    throughFetch(src);\n  }\n};\n\nexport const Telemetry: React.FC<{}> = () => {\n  const payload = useTelemetryData();\n  const sent = React.useRef(false);\n\n  React.useEffect(() => {\n    if (sent.current) {\n      return;\n    }\n    const encoded = encode(payload);\n\n    if (!encoded) {\n      return;\n    }\n\n    transport(`https://telemetry.refine.dev/telemetry?payload=${encoded}`);\n    sent.current = true;\n  }, []);\n\n  return null;\n};\n","import { useContext } from \"react\";\n\nimport { AccessControlContext } from \"@contexts/accessControl\";\nimport { AuditLogContext } from \"@contexts/auditLog\";\nimport { DataContext } from \"@contexts/data\";\nimport { I18nContext } from \"@contexts/i18n\";\nimport { LiveContext } from \"@contexts/live\";\nimport { NotificationContext } from \"@contexts/notification\";\nimport { LegacyRouterContext } from \"@contexts/router/legacy\";\nimport { useResource } from \"@hooks/resource\";\n\nimport { useIsExistAuthentication, useRefineContext } from \"..\";\nimport type { ITelemetryData } from \"../../components/telemetry/types\";\n\n// It reads and updates from package.json during build. ref: tsup.config.ts\nconst REFINE_VERSION = \"4.56.0\";\n\nexport const useTelemetryData = (): ITelemetryData => {\n  const auth = useIsExistAuthentication();\n  const auditLogContext = useContext(AuditLogContext);\n  const { liveProvider } = useContext(LiveContext);\n  const routerContext = useContext(LegacyRouterContext);\n  const dataContext = useContext(DataContext);\n  const { i18nProvider } = useContext(I18nContext);\n  const notificationContext = useContext(NotificationContext);\n  const accessControlContext = useContext(AccessControlContext);\n  const { resources } = useResource();\n  const refineOptions = useRefineContext();\n\n  const auditLog =\n    !!auditLogContext.create ||\n    !!auditLogContext.get ||\n    !!auditLogContext.update;\n\n  const live =\n    !!liveProvider?.publish ||\n    !!liveProvider?.subscribe ||\n    !!liveProvider?.unsubscribe;\n\n  const router =\n    !!routerContext.useHistory ||\n    !!routerContext.Link ||\n    !!routerContext.Prompt ||\n    !!routerContext.useLocation ||\n    !!routerContext.useParams;\n\n  const data = !!dataContext;\n\n  const i18n =\n    !!i18nProvider?.changeLocale ||\n    !!i18nProvider?.getLocale ||\n    !!i18nProvider?.translate;\n\n  const notification =\n    !!notificationContext.close || !!notificationContext.open;\n\n  const accessControl = !!accessControlContext.can;\n\n  const projectId = refineOptions?.options?.projectId;\n\n  return {\n    providers: {\n      auth,\n      auditLog,\n      live,\n      router,\n      data,\n      i18n,\n      notification,\n      accessControl,\n    },\n    version: REFINE_VERSION,\n    resourceCount: resources.length,\n    projectId,\n  };\n};\n","import type { LegacyRouterProvider } from \"../../../contexts/router/legacy/types\";\nimport type { RouterProvider } from \"../../../contexts/router/types\";\n\nexport const checkRouterPropMisuse = (\n  value: LegacyRouterProvider | RouterProvider,\n) => {\n  // check if `routerProvider` prop is passed with legacy properties.\n  // If yes, console.warn the user to use `legacyRuterProvider` prop instead.\n  const bindings = [\"go\", \"parse\", \"back\", \"Link\"];\n\n  // check if `value` contains properties other than `bindings`\n  const otherProps = Object.keys(value).filter(\n    (key) => !bindings.includes(key),\n  );\n\n  const hasOtherProps = otherProps.length > 0;\n\n  if (hasOtherProps) {\n    console.warn(\n      `Unsupported properties are found in \\`routerProvider\\` prop. You provided \\`${otherProps.join(\n        \", \",\n      )}\\`. Supported properties are \\`${bindings.join(\n        \", \",\n      )}\\`. You may wanted to use \\`legacyRouterProvider\\` prop instead.`,\n    );\n\n    return true;\n  }\n\n  return false;\n};\n","import { checkRouterPropMisuse } from \"@definitions/helpers/check-router-prop-misuse\";\nimport React from \"react\";\nimport type { RouterProvider } from \"../../../contexts/router/types\";\n\nexport const useRouterMisuseWarning = (value?: RouterProvider) => {\n  const warned = React.useRef(false);\n\n  React.useEffect(() => {\n    if (warned.current === false) {\n      if (value) {\n        const warn = checkRouterPropMisuse(value);\n        if (warn) {\n          warned.current = true;\n        }\n      }\n    }\n  }, [value]);\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport { useCancelNotification, useNotification, useTranslate } from \"@hooks\";\n\nimport { userFriendlySecond } from \"@definitions/helpers\";\nimport {\n  ActionTypes,\n  type IUndoableQueue,\n} from \"../../contexts/undoableQueue/types\";\n\nexport const UndoableQueue: React.FC<{\n  notification: IUndoableQueue;\n}> = ({ notification }) => {\n  const translate = useTranslate();\n\n  const { notificationDispatch } = useCancelNotification();\n  const { open } = useNotification();\n\n  const [timeoutId, setTimeoutId] = useState<number | undefined>();\n\n  const cancelNotification = () => {\n    if (notification.isRunning === true) {\n      if (notification.seconds === 0) {\n        notification.doMutation();\n      }\n      if (!notification.isSilent) {\n        open?.({\n          key: `${notification.id}-${notification.resource}-notification`,\n          type: \"progress\",\n          message: translate(\n            \"notifications.undoable\",\n            {\n              seconds: userFriendlySecond(notification.seconds),\n            },\n            `You have ${userFriendlySecond(\n              notification.seconds,\n            )} seconds to undo`,\n          ),\n          cancelMutation: notification.cancelMutation,\n          undoableTimeout: userFriendlySecond(notification.seconds),\n        });\n      }\n\n      if (notification.seconds > 0) {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n\n        const newTimeoutId = setTimeout(() => {\n          notificationDispatch({\n            type: ActionTypes.DECREASE_NOTIFICATION_SECOND,\n            payload: {\n              id: notification.id,\n              seconds: notification.seconds,\n              resource: notification.resource,\n            },\n          });\n        }, 1000) as unknown as number;\n\n        setTimeoutId(newTimeoutId);\n      }\n    }\n  };\n\n  useEffect(() => {\n    cancelNotification();\n  }, [notification]);\n\n  return null;\n};\n","import React, { useEffect } from \"react\";\n\nimport {\n  useRefineContext,\n  useRouterContext,\n  useTranslate,\n  useWarnAboutChange,\n} from \"@hooks\";\n\nimport type { LayoutProps, TitleProps } from \"../../contexts/refine/types\";\n\nexport interface LayoutWrapperProps {\n  /**\n   * Outer component that renders other components\n   * @default *\n   */\n  Layout?: React.FC<LayoutProps>;\n  /**\n   * [Custom sider to use](/api-reference/core/components/refine-config.md#sider)\n   * @default *\n   */\n  Sider?: React.FC;\n  /**\n   * [Custom header to use](/api-reference/core/components/refine-config.md#header)\n   * @default *\n   */\n  Header?: React.FC;\n  /**\n   * [Custom title to use](/api-reference/core/components/refine-config.md#title)\n   * @default *\n   */\n  Title?: React.FC<TitleProps>;\n  /**\n   * [Custom footer to use](/api-reference/core/components/refine-config.md#footer)\n   * @default *\n   */\n  Footer?: React.FC;\n  /**\n   * [Custom off layout area to use](/api-reference/core/components/refine-config.md#offlayoutarea)\n   * @default *\n   */\n  OffLayoutArea?: React.FC;\n  children: React.ReactNode;\n}\n\n/**\n * `<LayoutWrapper>` wraps its contents in **refine's** layout with all customizations made in {@link https://refine.dev/docs/core/components/refine-config `<Refine>`} component.\n * It is the default layout used in resource pages.\n * It can be used in custom pages to use global layout.\n *\n * @see {@link https://refine.dev/docs/core/components/layout-wrapper} for more details.\n *\n * @deprecated This component is obsolete and only works with the legacy router providers.\n */\nexport const LayoutWrapper: React.FC<LayoutWrapperProps> = ({\n  children,\n  Layout: LayoutFromProps,\n  Sider: SiderFromProps,\n  Header: HeaderFromProps,\n  Title: TitleFromProps,\n  Footer: FooterFromProps,\n  OffLayoutArea: OffLayoutAreaFromProps,\n}) => {\n  const { Layout, Footer, Header, Sider, Title, OffLayoutArea } =\n    useRefineContext();\n\n  const LayoutToRender = LayoutFromProps ?? Layout;\n\n  return (\n    <LayoutToRender\n      Sider={SiderFromProps ?? Sider}\n      Header={HeaderFromProps ?? Header}\n      Footer={FooterFromProps ?? Footer}\n      Title={TitleFromProps ?? Title}\n      OffLayoutArea={OffLayoutAreaFromProps ?? OffLayoutArea}\n    >\n      {children}\n      <UnsavedPrompt />\n    </LayoutToRender>\n  );\n};\n\nconst UnsavedPrompt: React.FC = () => {\n  const { Prompt } = useRouterContext();\n\n  const translate = useTranslate();\n\n  const { warnWhen, setWarnWhen } = useWarnAboutChange();\n\n  const warnWhenListener = (e: {\n    preventDefault: () => void;\n    returnValue: string;\n  }) => {\n    e.preventDefault();\n\n    e.returnValue = translate(\n      \"warnWhenUnsavedChanges\",\n      \"Are you sure you want to leave? You have unsaved changes.\",\n    );\n\n    return e.returnValue;\n  };\n\n  useEffect(() => {\n    if (warnWhen) {\n      window.addEventListener(\"beforeunload\", warnWhenListener);\n    }\n\n    return window.removeEventListener(\"beforeunload\", warnWhenListener);\n  }, [warnWhen]);\n\n  return (\n    <Prompt\n      when={warnWhen}\n      message={translate(\n        \"warnWhenUnsavedChanges\",\n        \"Are you sure you want to leave? You have unsaved changes.\",\n      )}\n      setWarnWhen={setWarnWhen}\n    />\n  );\n};\n","import React from \"react\";\n\nimport { useActiveAuthProvider } from \"@definitions/index\";\nimport {\n  useGo,\n  useIsAuthenticated,\n  useNavigation,\n  useParsed,\n  useRouterContext,\n  useRouterType,\n} from \"@hooks\";\nimport type { GoConfig } from \"../../contexts/router/types\";\n\nexport type AuthenticatedCommonProps = {\n  /**\n   * Unique key to identify the component.\n   * This is required if you have multiple `Authenticated` components at the same level.\n   * @required\n   */\n  key: React.Key;\n  /**\n   * Whether to redirect user if not logged in or not.\n   * If not set, user will be redirected to `redirectTo` property of the `check` function's response.\n   * This behavior is only available for new auth providers.\n   * Legacy auth providers will redirect to `/login` by default if this property is not set.\n   * If set to a string, user will be redirected to that string.\n   *\n   * This property only works if `fallback` is **not set**.\n   */\n  redirectOnFail?: string | true;\n  /**\n   * Whether to append current path to search params of the redirect url at `to` property.\n   *\n   * By default, `to` parameter is used by successful invocations of the `useLogin` hook.\n   * If `to` present, it will be used as the redirect url after successful login.\n   */\n  appendCurrentPathToQuery?: boolean;\n  /**\n   * Content to show if user is not logged in.\n   */\n  fallback?: React.ReactNode;\n  /**\n   * Content to show while checking whether user is logged in or not.\n   */\n  loading?: React.ReactNode;\n  /**\n   * Content to show if user is logged in\n   */\n  children?: React.ReactNode;\n};\n\nexport type LegacyAuthenticatedProps = {\n  v3LegacyAuthProviderCompatible: true;\n} & AuthenticatedCommonProps;\n\nexport type AuthenticatedProps = {\n  v3LegacyAuthProviderCompatible?: false;\n} & AuthenticatedCommonProps;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @requires {@link https://react.dev/learn/rendering-lists#why-does-react-need-keys `key`} prop if you have multiple components at the same level.\n * In React, components don't automatically unmount and remount with prop changes, which is generally good for performance. However, for specific cases this can cause issues like unwanted content rendering (`fallback` or `children`). To solve this, assigning unique `key` values to each instance of component is necessary, forcing React to unmount and remount the component, rather than just updating its props.\n * @example\n *```tsx\n * <Authenticated key=\"dashboard\">\n *   <h1>Dashboard Page</h1>\n * </Authenticated>\n *```\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated(\n  props: LegacyAuthenticatedProps,\n): JSX.Element | null;\n\n/**\n * `<Authenticated>` is the component form of {@link https://refine.dev/docs/api-reference/core/hooks/auth/useAuthenticated `useAuthenticated`}. It internally uses `useAuthenticated` to provide it's functionality.\n *\n * @requires {@link https://react.dev/learn/rendering-lists#why-does-react-need-keys `key`} prop if you have multiple components at the same level.\n * In React, components don't automatically unmount and remount with prop changes, which is generally good for performance. However, for specific cases this can cause issues like unwanted content rendering (`fallback` or `children`). To solve this, assigning unique `key` values to each instance of component is necessary, forcing React to unmount and remount the component, rather than just updating its props.\n * @example\n *```tsx\n * <Authenticated key=\"dashboard\">\n *   <h1>Dashboard Page</h1>\n * </Authenticated>\n *```\n *\n * @see {@link https://refine.dev/docs/core/components/auth/authenticated `<Authenticated>`} component for more details.\n */\nexport function Authenticated(props: AuthenticatedProps): JSX.Element | null;\n\nexport function Authenticated({\n  redirectOnFail = true,\n  appendCurrentPathToQuery = true,\n  children,\n  fallback: fallbackContent,\n  loading: loadingContent,\n}: AuthenticatedProps | LegacyAuthenticatedProps): JSX.Element | null {\n  const activeAuthProvider = useActiveAuthProvider();\n  const routerType = useRouterType();\n\n  const hasAuthProvider = Boolean(activeAuthProvider?.isProvided);\n  const isLegacyAuth = Boolean(activeAuthProvider?.isLegacy);\n  const isLegacyRouter = routerType === \"legacy\";\n\n  const parsed = useParsed();\n  const go = useGo();\n  const { useLocation } = useRouterContext();\n  const legacyLocation = useLocation();\n\n  const {\n    isFetching,\n    isSuccess,\n    data: {\n      authenticated: isAuthenticatedStatus,\n      redirectTo: authenticatedRedirect,\n    } = {},\n  } = useIsAuthenticated({\n    v3LegacyAuthProviderCompatible: isLegacyAuth,\n  });\n\n  // Authentication status\n  const isAuthenticated = hasAuthProvider\n    ? isLegacyAuth\n      ? isSuccess\n      : isAuthenticatedStatus\n    : true;\n\n  // when there is no auth provider\n  if (!hasAuthProvider) {\n    return <>{children ?? null}</>;\n  }\n\n  // when checking authentication status\n  if (isFetching) {\n    return <>{loadingContent ?? null}</>;\n  }\n\n  // when user is authenticated return children\n  if (isAuthenticated) {\n    return <>{children ?? null}</>;\n  }\n  // when user is not authenticated redirect or render fallbackContent\n\n  // render fallbackContent if it is exist\n  if (typeof fallbackContent !== \"undefined\") {\n    return <>{fallbackContent ?? null}</>;\n  }\n  // if there is no fallbackContent, redirect page\n\n  // Redirect url to use. use redirectOnFail if it is set.\n  // Otherwise use redirectTo property of the check function's response.\n  // If both are not set, use `/login` as the default redirect url. (only for legacy auth providers)\n  const appliedRedirect = isLegacyAuth\n    ? typeof redirectOnFail === \"string\"\n      ? redirectOnFail\n      : \"/login\"\n    : typeof redirectOnFail === \"string\"\n      ? redirectOnFail\n      : (authenticatedRedirect as string | undefined);\n\n  // Current pathname to append to the redirect url.\n  // User will be redirected to this url after successful mutation. (like login)\n  const pathname = `${\n    isLegacyRouter ? legacyLocation?.pathname : parsed.pathname\n  }`.replace(/(\\?.*|#.*)$/, \"\");\n  // Redirect if appliedRedirect is set, otherwise return null.\n  //  Uses `replace` for legacy router and `go` for new router.\n  if (appliedRedirect) {\n    if (isLegacyRouter) {\n      const toQuery = appendCurrentPathToQuery\n        ? `?to=${encodeURIComponent(pathname)}`\n        : \"\";\n      return <RedirectLegacy to={`${appliedRedirect}${toQuery}`} />;\n    }\n\n    const queryToValue: string | undefined = parsed.params?.to\n      ? parsed.params.to\n      : go({\n          to: pathname,\n          options: { keepQuery: true },\n          type: \"path\",\n        });\n\n    return (\n      <Redirect\n        config={{\n          to: appliedRedirect,\n          query:\n            appendCurrentPathToQuery && (queryToValue ?? \"\").length > 1\n              ? {\n                  to: queryToValue,\n                }\n              : undefined,\n          type: \"replace\",\n        }}\n      />\n    );\n  }\n\n  return null;\n}\n\nconst Redirect = ({ config }: { config: GoConfig }) => {\n  const go = useGo();\n\n  React.useEffect(() => {\n    go(config);\n  }, [go, config]);\n\n  return null;\n};\n\nconst RedirectLegacy = ({ to }: { to: string }) => {\n  const { replace } = useNavigation();\n\n  React.useEffect(() => {\n    replace(to);\n  }, [replace, to]);\n\n  return null;\n};\n","import { useEffect } from \"react\";\nimport { useRouterContext } from \"@hooks\";\nimport { useLegacyAuthContext } from \"@contexts/auth\";\n\nexport const RouteChangeHandler: React.FC = () => {\n  const { useLocation } = useRouterContext();\n\n  const { checkAuth } = useLegacyAuthContext();\n  const location = useLocation();\n\n  useEffect(() => {\n    checkAuth?.().catch(() => false);\n  }, [location?.pathname]);\n\n  return null;\n};\n","import React, { useEffect } from \"react\";\nimport type { UseQueryOptions } from \"@tanstack/react-query\";\n\nimport { useCan, useResourceParams } from \"@hooks\";\n\nimport type { CanReturnType } from \"../../contexts/accessControl/types\";\nimport type { BaseKey } from \"../../contexts/data/types\";\nimport type { IResourceItem, ITreeMenu } from \"../../contexts/resource/types\";\n\ntype CanParams = {\n  resource?: IResourceItem & { children?: ITreeMenu[] };\n  id?: BaseKey;\n  [key: string]: any;\n};\n\ntype OnUnauthorizedProps = {\n  resource?: string;\n  reason?: string;\n  action: string;\n  params: CanParams;\n};\n\ntype CanAccessBaseProps = {\n  /**\n   * Resource name for API data interactions\n   */\n  resource?: string;\n  /**\n   * Intended action on resource\n   */\n  action: string;\n  /**\n   * Parameters associated with the resource\n   * @type { resource?: [IResourceItem](https://refine.dev/docs/api-reference/core/interfaceReferences/#canparams), id?: [BaseKey](https://refine.dev/docs/api-reference/core/interfaceReferences/#basekey), [key: string]: any }\n   */\n  params?: CanParams;\n  /**\n   * Content to show if access control returns `false`\n   */\n  fallback?: React.ReactNode;\n  /**\n   * Callback function to be called if access control returns `can: false`\n   */\n  onUnauthorized?: (props: OnUnauthorizedProps) => void;\n  children: React.ReactNode;\n  queryOptions?: UseQueryOptions<CanReturnType>;\n};\n\ntype CanAccessWithoutParamsProps = {\n  [key in Exclude<\n    keyof CanAccessBaseProps,\n    \"fallback\" | \"children\"\n  >]?: undefined;\n} & {\n  [key in \"fallback\" | \"children\"]?: CanAccessBaseProps[key];\n};\n\nexport type CanAccessProps = CanAccessBaseProps | CanAccessWithoutParamsProps;\n\nexport const CanAccess: React.FC<CanAccessProps> = ({\n  resource: resourceFromProp,\n  action: actionFromProp,\n  params: paramsFromProp,\n  fallback,\n  onUnauthorized,\n  children,\n  queryOptions: componentQueryOptions,\n  ...rest\n}) => {\n  const {\n    id,\n    resource,\n    action: fallbackAction = \"\",\n  } = useResourceParams({\n    resource: resourceFromProp,\n    id: paramsFromProp?.id,\n  });\n\n  const action = actionFromProp ?? fallbackAction;\n\n  const params = paramsFromProp ?? {\n    id,\n    resource,\n  };\n\n  const { data } = useCan({\n    resource: resource?.name,\n    action,\n    params,\n    queryOptions: componentQueryOptions,\n  });\n\n  useEffect(() => {\n    if (onUnauthorized && data?.can === false) {\n      onUnauthorized({\n        resource: resource?.name,\n        action,\n        reason: data?.reason,\n        params,\n      });\n    }\n  }, [data?.can]);\n\n  if (data?.can) {\n    if (React.isValidElement(children)) {\n      const Children = React.cloneElement(children, rest);\n      return Children;\n    }\n\n    return <>{children}</>;\n  }\n\n  if (data?.can === false) {\n    return <>{fallback ?? null}</>;\n  }\n\n  return null;\n};\n","import React, { type CSSProperties, type SVGProps, useEffect } from \"react\";\nimport { CSSRules } from \"./styles\";\n\nconst text =\n  \"If you find Refine useful, you can contribute to its growth by giving it a star on GitHub\";\n\ntype Props = {\n  containerStyle?: CSSProperties;\n};\n\nexport const GitHubBanner = ({ containerStyle }: Props) => {\n  useEffect(() => {\n    const styleTag = document.createElement(\"style\");\n    document.head.appendChild(styleTag);\n    CSSRules.forEach((rule) =>\n      styleTag.sheet?.insertRule(rule, styleTag.sheet.cssRules.length),\n    );\n  }, []);\n\n  return (\n    <div\n      className=\"banner bg-top-announcement\"\n      style={{\n        width: \"100%\",\n        height: \"48px\",\n      }}\n    >\n      <div\n        style={{\n          position: \"relative\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          paddingLeft: \"200px\",\n          width: \"100%\",\n          maxWidth: \"100vw\",\n          height: \"100%\",\n          borderBottom: \"1px solid #47ebeb26\",\n          ...containerStyle,\n        }}\n      >\n        <div\n          className=\"top-announcement-mask\"\n          style={{\n            position: \"absolute\",\n            left: 0,\n            top: 0,\n            width: \"100%\",\n            height: \"100%\",\n            borderBottom: \"1px solid #47ebeb26\",\n          }}\n        >\n          <div\n            style={{\n              position: \"relative\",\n              width: \"960px\",\n              height: \"100%\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              margin: \"0 auto\",\n            }}\n          >\n            <div\n              style={{\n                width: \"calc(50% - 300px)\",\n                height: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <GlowSmall\n                style={{\n                  animationDelay: \"1.5s\",\n                  position: \"absolute\",\n                  top: \"2px\",\n                  right: \"220px\",\n                }}\n                id={\"1\"}\n              />\n              <GlowSmall\n                style={{\n                  animationDelay: \"1s\",\n                  position: \"absolute\",\n                  top: \"8px\",\n                  right: \"100px\",\n                  transform: \"rotate(180deg)\",\n                }}\n                id={\"2\"}\n              />\n              <GlowBig\n                style={{\n                  position: \"absolute\",\n                  right: \"10px\",\n                }}\n                id={\"3\"}\n              />\n            </div>\n\n            <div\n              style={{\n                width: \"calc(50% - 300px)\",\n                height: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <GlowSmall\n                style={{\n                  animationDelay: \"2s\",\n                  position: \"absolute\",\n                  top: \"6px\",\n                  right: \"180px\",\n                  transform: \"rotate(180deg)\",\n                }}\n                id={\"4\"}\n              />\n              <GlowSmall\n                style={{\n                  animationDelay: \"0.5s\",\n                  transitionDelay: \"1.3s\",\n                  position: \"absolute\",\n                  top: \"2px\",\n                  right: \"40px\",\n                }}\n                id={\"5\"}\n              />\n              <GlowBig\n                style={{\n                  position: \"absolute\",\n                  right: \"-70px\",\n                }}\n                id={\"6\"}\n              />\n            </div>\n          </div>\n        </div>\n        <Text text={text} />\n      </div>\n    </div>\n  );\n};\n\nconst Text = ({ text }: { text: string }) => {\n  return (\n    <a\n      className=\"gh-link\"\n      href=\"https://s.refine.dev/github-support\"\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      style={{\n        position: \"absolute\",\n        height: \"100%\",\n        padding: \"0 60px\",\n        display: \"flex\",\n        flexWrap: \"nowrap\",\n        whiteSpace: \"nowrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundImage:\n          \"linear-gradient(90deg, rgba(31, 63, 72, 0.00) 0%, #1F3F48 10%, #1F3F48 90%, rgba(31, 63, 72, 0.00) 100%)\",\n      }}\n    >\n      <div\n        style={{\n          color: \"#fff\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          gap: \"8px\",\n        }}\n      >\n        <span\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          ⭐️\n        </span>\n        <span\n          className=\"text\"\n          style={{\n            fontSize: \"16px\",\n            lineHeight: \"24px\",\n          }}\n        >\n          {text}\n        </span>\n        <span\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          ⭐️\n        </span>\n      </div>\n    </a>\n  );\n};\n\nconst GlowSmall = ({ style, ...props }: SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={80}\n      height={40}\n      fill=\"none\"\n      style={{\n        opacity: 1,\n        animation: \"top-announcement-glow 1s ease-in-out infinite alternate\",\n        ...style,\n      }}\n    >\n      <circle cx={40} r={40} fill={`url(#${props.id}-a)`} fillOpacity={0.5} />\n      <defs>\n        <radialGradient\n          id={`${props.id}-a`}\n          cx={0}\n          cy={0}\n          r={1}\n          gradientTransform=\"matrix(0 40 -40 0 40 0)\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#47EBEB\" />\n          <stop offset={1} stopColor=\"#47EBEB\" stopOpacity={0} />\n        </radialGradient>\n      </defs>\n    </svg>\n  );\n};\n\nconst GlowBig = ({ style, ...props }: SVGProps<SVGSVGElement>) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={120}\n    height={48}\n    fill=\"none\"\n    {...props}\n    style={{\n      opacity: 1,\n      animation: \"top-announcement-glow 1s ease-in-out infinite alternate\",\n      ...style,\n    }}\n  >\n    <circle\n      cx={60}\n      cy={24}\n      r={60}\n      fill={`url(#${props.id}-a)`}\n      fillOpacity={0.5}\n    />\n    <defs>\n      <radialGradient\n        id={`${props.id}-a`}\n        cx={0}\n        cy={0}\n        r={1}\n        gradientTransform=\"matrix(0 60 -60 0 60 24)\"\n        gradientUnits=\"userSpaceOnUse\"\n      >\n        <stop stopColor=\"#47EBEB\" />\n        <stop offset={1} stopColor=\"#47EBEB\" stopOpacity={0} />\n      </radialGradient>\n    </defs>\n  </svg>\n);\n","export const CSSRules = [\n  `\n    .bg-top-announcement {\n        border-bottom: 1px solid rgba(71, 235, 235, 0.15);\n        background: radial-gradient(\n                218.19% 111.8% at 0% 0%,\n                rgba(71, 235, 235, 0.1) 0%,\n                rgba(71, 235, 235, 0.2) 100%\n            ),\n            #14141f;\n    }\n    `,\n  `\n    .top-announcement-mask {\n        mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);\n        -webkit-mask-image: url(https://refine.ams3.cdn.digitaloceanspaces.com/website/static/assets/hexagon.svg);\n        mask-repeat: repeat;\n        -webkit-mask-repeat: repeat;\n        background: rgba(71, 235, 235, 0.25);\n    }\n    `,\n  `\n    .banner {\n        display: flex;\n        @media (max-width: 1000px) {\n            display: none;\n        }\n    }`,\n  `\n    .gh-link, .gh-link:hover, .gh-link:active, .gh-link:visited, .gh-link:focus {\n        text-decoration: none;\n        z-index: 9;\n    }\n    `,\n  `\n    @keyframes top-announcement-glow {\n        0% {\n            opacity: 1;\n        }\n\n        100% {\n            opacity: 0;\n        }\n    }\n    `,\n];\n","import React from \"react\";\n\nimport { useTranslate } from \"@hooks/i18n\";\n\nimport type { BaseRecord, HttpError } from \"../../contexts/data/types\";\nimport type { AutoSaveIndicatorElements } from \"../../hooks/form/types\";\nimport type { UseUpdateReturnType } from \"../../hooks/data/useUpdate\";\n\nexport type AutoSaveIndicatorProps<\n  TData extends BaseRecord = BaseRecord,\n  TError extends HttpError = HttpError,\n  TVariables = {},\n> = {\n  /**\n   * The data returned by the update request.\n   */\n  data?: UseUpdateReturnType<TData, TError, TVariables>[\"data\"];\n  /**\n   * The error returned by the update request.\n   */\n  error?: UseUpdateReturnType<TData, TError, TVariables>[\"error\"];\n  /**\n   * The status of the update request.\n   */\n  status: UseUpdateReturnType<TData, TError, TVariables>[\"status\"];\n  /**\n   * The elements to display for each status.\n   */\n  elements?: AutoSaveIndicatorElements;\n};\n\nexport const AutoSaveIndicator: React.FC<AutoSaveIndicatorProps> = ({\n  status,\n  elements: {\n    success = (\n      <Message translationKey=\"autoSave.success\" defaultMessage=\"saved\" />\n    ),\n    error = (\n      <Message\n        translationKey=\"autoSave.error\"\n        defaultMessage=\"auto save failure\"\n      />\n    ),\n    loading = (\n      <Message translationKey=\"autoSave.loading\" defaultMessage=\"saving...\" />\n    ),\n    idle = (\n      <Message\n        translationKey=\"autoSave.idle\"\n        defaultMessage=\"waiting for changes\"\n      />\n    ),\n  } = {},\n}) => {\n  switch (status) {\n    case \"success\":\n      return <>{success}</>;\n    case \"error\":\n      return <>{error}</>;\n    case \"loading\":\n      return <>{loading}</>;\n    default:\n      return <>{idle}</>;\n  }\n};\n\nconst Message = ({\n  translationKey,\n  defaultMessage,\n}: {\n  translationKey: string;\n  defaultMessage: string;\n}) => {\n  const translate = useTranslate();\n\n  return <span>{translate(translationKey, defaultMessage)}</span>;\n};\n"],"names":["React","useEffect","useState","getXRay","useQuery","React","LegacyAuthContext","React","LegacyAuthContextProvider","__name","children","isProvided","authOperations","replace","useNavigation","loginFunc","params","_a","error","registerFunc","logoutFunc","checkAuthFunc","AuthBindingsContext","AuthBindingsContextProvider","authBindings","handleLogin","handleRegister","handleLogout","handleCheck","result","handleForgotPassword","handleUpdatePassword","useLegacyAuthContext","useAuthBindingsContext","differenceWith","unionWith","qs","warnOnce","userFriendlySecond","__name","miliseconds","fromPairs","zip","importCSVMapper","__name","data","mapData","item","headers","body","entry","fromPairs","zip","index","array","pluralize","userFriendlyResourceName","__name","resource","type","humanizeResource","humanizeString","pluralize","handleUseParams","__name","params","arrayFindIndex","array","slice","item","index","sliceItem","sliceIndex","__name","convertToLegacy","segments","newSegments","newParams","arrayFindIndex","__name","BaseKeyBuilder","legacy","ParamsKeyBuilder","paramsValue","DataIdRequiringKeyBuilder","idValue","DataIdsRequiringKeyBuilder","idsValue","el","DataResourceKeyBuilder","actionType","DataKeyBuilder","resourceName","mutationName","AuthKeyBuilder","AccessResourceKeyBuilder","AccessKeyBuilder","AuditActionKeyBuilder","AuditKeyBuilder","KeyBuilder","name","keys","pickNotDeprecated","__name","args","arg","queryKeys","__name","resource","dataProviderName","meta","metaData","providerName","keys","config","pickNotDeprecated","ids","item","id","queryKeysReplacement","preferLegacyKeys","hasPermission","__name","permissions","action","i","isParameter","__name","segment","splitToSegments","__name","path","segment","isSegmentCountsSame","__name","route","resourceRoute","routeSegments","splitToSegments","resourceRouteSegments","removeLeadingTrailingSlashes","__name","route","checkBySegments","__name","route","resourceRoute","stdRoute","removeLeadingTrailingSlashes","stdResourceRoute","isSegmentCountsSame","routeSegments","splitToSegments","segment","index","isParameter","getDefaultActionPath","__name","resourceName","action","parentPrefix","cleanParentPrefix","removeLeadingTrailingSlashes","path","getParentResource","__name","resource","resources","_a","_b","parentName","pickNotDeprecated","getParentPrefixForResource","__name","resource","resources","legacy","parents","parent","getParentResource","_a","v","removeLeadingTrailingSlashes","getActionRoutesFromResource","__name","resource","resources","legacy","actions","actionList","parentPrefix","getParentPrefixForResource","action","_a","_b","item","route","getDefaultActionPath","pickMatchedRoute","__name","routes","_a","sanitizedRoutes","route","splitToSegments","removeLeadingTrailingSlashes","segmentsCount","eligibleRoutes","i","nonParametrizedRoutes","isParameter","matchResourceFromRoute","__name","route","resources","allFound","resource","getActionRoutesFromResource","actionRoute","checkBySegments","mostEligible","pickMatchedRoute","routeGenerator","__name","item","resourcesFromProps","_a","route","parentPrefix","getParentPrefixForResource","meta","pickNotDeprecated","createTreeView","__name","resources","_a","tree","resourcesRouteObject","resourcesNameObject","parent","child","i","route","pickNotDeprecated","name","humanizeString","__name","text","React","pluralize","React","DefaultLayout","__name","children","React","defaultTitle","React","defaultRefineOptions","humanizeString","pluralize","RefineContext","DefaultLayout","RefineContextProvider","__name","hasDashboard","mutationMode","warnWhenUnsavedChanges","syncWithLocation","undoableTimeout","children","DashboardPage","Title","Layout","Header","Sider","Footer","OffLayoutArea","LoginPage","catchAll","liveMode","onLiveEvent","options","handleRefineOptions","__name","options","disableTelemetry","liveMode","mutationMode","reactQueryClientConfig","reactQueryDevtoolConfig","syncWithLocation","undoableTimeout","warnWhenUnsavedChanges","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","optionsWithDefaults","defaultRefineOptions","disableTelemetryWithDefault","reactQueryWithDefaults","redirectPage","__name","redirectFromProps","action","redirectOptions","sequentialPromises","__name","promises","onEachResolve","onEachReject","results","index","promise","result","error","pickResource","__name","identifier","resources","legacy","resourceByRoute","r","removeLeadingTrailingSlashes","resource","pickDataProvider","__name","resourceName","dataProviderName","resources","resource","pickResource","meta","pickNotDeprecated","handleMultiple","__name","promises","res","getNextPageParam","__name","lastPage","pagination","cursor","current","pageSize","totalPages","getPreviousPageParam","legacyResourceTransform","__name","resources","_resources","resource","_a","_b","routeGenerator","pickRouteParams","__name","route","splitToSegments","removeLeadingTrailingSlashes","s","isParameter","prepareRouteParams","__name","routeParams","meta","acc","key","value","composeRoute","__name","designatedRoute","resourceMeta","parsed","meta","routeParams","pickRouteParams","preparedRouteParams","prepareRouteParams","match","key","fromParams","useActiveAuthProvider","__name","legacyAuthProvider","useLegacyAuthContext","authProvider","useAuthBindingsContext","handlePaginationParams","__name","hasPagination","pagination","configPagination","hasPaginationString","mode","current","pickNotDeprecated","pageSize","useState","useEffect","useMediaQuery","__name","query","matches","setMatches","useState","useEffect","media","listener","safeTranslate","__name","translate","key","defaultMessage","options","translated","fallback","generateDefaultDocumentTitle","translate","resource","action","id","resourceName","_a","actionPrefixMatcher","identifier","resourceNameFallback","userFriendlyResourceName","resourceNameWithFallback","defaultTitle","safeTranslate","suffix","autoGeneratedTitle","__name","useContext","useMutationMode","__name","preferredMutationMode","preferredUndoableTimeout","mutationMode","undoableTimeout","useContext","RefineContext","useContext","React","useState","UnsavedWarnContext","React","UnsavedWarnContextProvider","__name","children","warnWhen","setWarnWhen","useState","useWarnAboutChange","__name","warnWhenUnsavedChanges","useContext","RefineContext","warnWhen","setWarnWhen","UnsavedWarnContext","useContext","useSyncWithLocation","__name","syncWithLocation","useContext","RefineContext","useContext","useTitle","__name","Title","useContext","RefineContext","useContext","useRefineContext","__name","Footer","Header","Layout","OffLayoutArea","Sider","Title","hasDashboard","mutationMode","syncWithLocation","undoableTimeout","warnWhenUnsavedChanges","DashboardPage","LoginPage","catchAll","options","__initialized","useContext","RefineContext","useUserFriendlyName","__name","textTransformers","useRefineContext","name","type","humanizeName","isNested","__name","obj","isArray","flattenObjectKeys","prefix","acc","key","currentPrefix","item","index","propertyPathToArray","__name","propertyPath","item","downloadInBrowser","__name","filename","content","type","blob","link","blobUrl","deferExecution","__name","fn","debounce","asyncDebounce","__name","func","wait","cancelReason","callbacks","cancelPrevious","cb","_a","debouncedFunc","debounce","args","resolve","reject","runner","prepareQueryContext","__name","context","queryContext","parseTableParams","__name","url","current","pageSize","sorter","sorters","filters","qs","pickNotDeprecated","parseTableParamsFromQuery","params","stringifyTableParams","options","pagination","rest","compareFilters","left","right","compareSorters","unionFilters","permanentFilter","newFilters","prevFilters","f","warnOnce","unionWith","crudFilter","unionSorters","permanentSorter","newSorters","crudSorter","setInitialFilters","defaultFilter","differenceWith","setInitialSorters","defaultSorter","getDefaultSortOrder","columnName","sortItem","item","getDefaultFilter","operatorType","filter","operator","field","file2Base64","__name","file","resolve","reject","reader","resultHandler","error","useKeys","__name","useNewQueryKeys","useRefineContext","keys","usePermissions","v3LegacyAuthProviderCompatible","options","params","legacyGetPermission","useLegacyAuthContext","getPermissions","useAuthBindingsContext","keys","preferLegacyKeys","useKeys","queryResponse","useQuery","getXRay","legacyQueryResponse","__name","getXRay","useQuery","useGetIdentity","v3LegacyAuthProviderCompatible","queryOptions","legacyGetUserIdentity","useLegacyAuthContext","getIdentity","useAuthBindingsContext","keys","preferLegacyKeys","useKeys","queryResponse","useQuery","getXRay","legacyQueryResponse","__name","getXRay","useMutation","useQueryClient","useInvalidateAuthStore","__name","queryClient","useQueryClient","keys","preferLegacyKeys","useKeys","action","useLogout","v3LegacyAuthProviderCompatible","mutationOptions","invalidateAuthStore","useInvalidateAuthStore","routerType","useRouterType","go","useGo","push","useNavigation","open","close","useNotification","legacyLogoutFromContext","useLegacyAuthContext","logoutFromContext","useAuthBindingsContext","keys","preferLegacyKeys","useKeys","mutation","useMutation","data","variables","success","error","redirectTo","successNotification","redirectPath","redirect","buildSuccessNotification","buildNotification","getXRay","v3LegacyAuthProviderCompatibleMutation","__name","React","getXRay","useMutation","qs","useLogin","v3LegacyAuthProviderCompatible","mutationOptions","invalidateAuthStore","useInvalidateAuthStore","routerType","useRouterType","go","useGo","replace","useNavigation","parsed","useParsed","useLocation","useRouterContext","search","close","open","useNotification","legacyLoginFromContext","useLegacyAuthContext","loginFromContext","useAuthBindingsContext","keys","preferLegacyKeys","useKeys","to","React","_a","qs","mutation","useMutation","success","redirectTo","error","successNotification","buildSuccessNotification","buildNotification","getXRay","v3LegacyAuthProviderCompatibleMutation","redirectPathFromAuth","__name","getXRay","useMutation","useRegister","v3LegacyAuthProviderCompatible","mutationOptions","invalidateAuthStore","useInvalidateAuthStore","routerType","useRouterType","go","useGo","replace","useNavigation","legacyRegisterFromContext","useLegacyAuthContext","registerFromContext","useAuthBindingsContext","close","open","useNotification","keys","preferLegacyKeys","useKeys","mutation","useMutation","success","redirectTo","error","successNotification","buildSuccessNotification","buildNotification","getXRay","v3LegacyAuthProviderCompatibleMutation","redirectPathFromAuth","__name","getXRay","useMutation","useForgotPassword","v3LegacyAuthProviderCompatible","mutationOptions","routerType","useRouterType","go","useGo","replace","useNavigation","v3LegacyAuthProviderCompatibleForgotPasswordFromContext","useLegacyAuthContext","forgotPasswordFromContext","useAuthBindingsContext","close","open","useNotification","keys","preferLegacyKeys","useKeys","mutation","useMutation","success","redirectTo","error","successNotification","buildSuccessNotification","buildNotification","getXRay","v3LegacyAuthProviderCompatibleMutation","redirectPathFromAuth","__name","React","getXRay","useMutation","qs","useUpdatePassword","v3LegacyAuthProviderCompatible","mutationOptions","routerType","useRouterType","go","useGo","replace","useNavigation","legacyUpdatePasswordFromContext","useLegacyAuthContext","updatePasswordFromContext","useAuthBindingsContext","close","open","useNotification","keys","preferLegacyKeys","useKeys","parsed","useParsed","useLocation","useRouterContext","search","params","React","qs","mutation","useMutation","variables","success","redirectTo","error","successNotification","buildSuccessNotification","buildNotification","getXRay","v3LegacyAuthProviderCompatibleMutation","redirectPathFromAuth","__name","getXRay","useQuery","useIsAuthenticated","v3LegacyAuthProviderCompatible","params","checkAuth","useLegacyAuthContext","check","useAuthBindingsContext","keys","preferLegacyKeys","useKeys","queryResponse","useQuery","getXRay","legacyQueryResponse","__name","useAuthenticated","getXRay","useMutation","useOnError","v3LegacyAuthProviderCompatible","routerType","useRouterType","go","useGo","replace","useNavigation","legacyCheckErrorFromContext","useLegacyAuthContext","onErrorFromContext","useAuthBindingsContext","keys","preferLegacyKeys","useKeys","legacyLogout","useLogout","logout","mutation","useMutation","shouldLogout","redirectTo","getXRay","v3LegacyAuthProviderCompatibleMutation","redirectPath","__name","useCheckError","useIsExistAuthentication","__name","legacyIsProvided","useLegacyAuthContext","isProvided","useAuthBindingsContext","getXRay","useQuery","useEffect","useState","useLoadingOvertime","__name","isLoading","intervalProp","onIntervalProp","elapsedTime","setElapsedTime","useState","options","useRefineContext","overtime","interval","onInterval","useEffect","intervalFn","prevElapsedTime","useList","__name","resourceFromProp","config","filters","hasPagination","pagination","sorters","queryOptions","successNotification","errorNotification","meta","metaData","liveMode","onLiveEvent","liveParams","dataProviderName","overtimeOptions","resources","resource","identifier","useResource","dataProvider","useDataProvider","translate","useTranslate","authProvider","useActiveAuthProvider","checkError","useOnError","handleNotification","useHandleNotification","getMeta","useMeta","keys","preferLegacyKeys","useKeys","pickedDataProvider","pickDataProvider","preferredMeta","pickNotDeprecated","prefferedFilters","prefferedSorters","prefferedHasPagination","prefferedPagination","handlePaginationParams","isServerPagination","combinedMeta","notificationValues","isEnabled","getList","useResourceSubscription","queryResponse","useQuery","context","prepareQueryContext","rawData","_a","data","current","mode","pageSize","notificationConfig","err","getXRay","elapsedTime","useLoadingOvertime","getXRay","useQuery","useOne","__name","resourceFromProp","id","queryOptions","successNotification","errorNotification","meta","metaData","liveMode","onLiveEvent","liveParams","dataProviderName","overtimeOptions","resources","resource","identifier","useResource","dataProvider","useDataProvider","translate","useTranslate","authProvider","useActiveAuthProvider","checkError","useOnError","handleNotification","useHandleNotification","getMeta","useMeta","keys","preferLegacyKeys","useKeys","preferredMeta","pickNotDeprecated","pickedDataProvider","pickDataProvider","getOne","combinedMeta","useResourceSubscription","queryResponse","useQuery","context","prepareQueryContext","data","_a","notificationConfig","err","getXRay","elapsedTime","useLoadingOvertime","getXRay","useQuery","useMany","__name","resourceFromProp","ids","queryOptions","successNotification","errorNotification","meta","metaData","liveMode","onLiveEvent","liveParams","dataProviderName","overtimeOptions","resources","resource","identifier","useResource","dataProvider","useDataProvider","translate","useTranslate","authProvider","useActiveAuthProvider","checkError","useOnError","handleNotification","useHandleNotification","getMeta","useMeta","keys","preferLegacyKeys","useKeys","preferredMeta","pickNotDeprecated","pickedDataProvider","pickDataProvider","isEnabled","getMany","getOne","combinedMeta","useResourceSubscription","queryResponse","useQuery","context","prepareQueryContext","handleMultiple","id","data","_a","notificationConfig","err","getXRay","elapsedTime","useLoadingOvertime","getXRay","useMutation","useQueryClient","ActionTypes","useUpdate","__name","idFromProps","resourceFromProps","valuesFromProps","dataProviderNameFromProps","successNotificationFromProps","errorNotificationFromProps","metaFromProps","metaDataFromProps","mutationModeFromProps","undoableTimeoutFromProps","onCancelFromProps","optimisticUpdateMapFromProps","invalidatesFromProps","mutationOptions","overtimeOptions","resources","select","useResource","queryClient","useQueryClient","dataProvider","useDataProvider","mutationModeContext","undoableTimeoutContext","useMutationMode","translate","useTranslate","authProvider","useActiveAuthProvider","checkError","useOnError","publish","usePublish","log","useLog","notificationDispatch","useCancelNotification","handleNotification","useHandleNotification","invalidateStore","useInvalidate","getMeta","useMeta","textTransformers","useRefineContext","keys","preferLegacyKeys","useKeys","mutationResult","useMutation","id","values","resourceName","mutationMode","undoableTimeout","onCancel","meta","metaData","dataProviderName","missingIdError","missingValuesError","missingResourceError","resource","identifier","combinedMeta","pickNotDeprecated","mutationModePropOrContext","undoableTimeoutPropOrContext","pickDataProvider","resolve","reject","doMutation","result","err","cancelMutation","optimisticUpdateMap","__","preferredMeta","queryKey","queryKeysReplacement","resourceKeys","previousQueries","previous","data","record","_a","error","variables","context","invalidates","_b","successNotification","dataProviderNameFromProp","resourceSingular","notificationConfig","previousData","queryData","acc","item","_fields","_operation","_variables","rest","errorNotification","query","getXRay","mutate","mutateAsync","mutation","elapsedTime","useLoadingOvertime","options","getXRay","useMutation","useCreate","__name","resourceFromProps","valuesFromProps","dataProviderNameFromProps","successNotificationFromProps","errorNotificationFromProps","invalidatesFromProps","metaFromProps","metaDataFromProps","mutationOptions","overtimeOptions","authProvider","useActiveAuthProvider","checkError","useOnError","dataProvider","useDataProvider","invalidateStore","useInvalidate","resources","select","useResource","translate","useTranslate","publish","usePublish","log","useLog","handleNotification","useHandleNotification","getMeta","useMeta","textTransformers","useRefineContext","keys","preferLegacyKeys","useKeys","mutationResult","useMutation","resourceName","values","meta","metaData","dataProviderName","missingValuesError","missingResourceError","resource","identifier","combinedMeta","pickNotDeprecated","pickDataProvider","data","variables","context","_a","_b","_c","successNotificationFromProp","dataProviderNameFromProp","invalidates","resourceSingular","notificationConfig","_fields","_operation","_variables","rest","err","errorNotificationFromProp","getXRay","mutate","mutateAsync","mutation","elapsedTime","useLoadingOvertime","options","getXRay","useMutation","useQueryClient","useDelete","__name","mutationOptions","overtimeOptions","authProvider","useActiveAuthProvider","checkError","useOnError","dataProvider","useDataProvider","resources","select","useResource","queryClient","useQueryClient","mutationModeContext","undoableTimeoutContext","useMutationMode","notificationDispatch","useCancelNotification","translate","useTranslate","publish","usePublish","log","useLog","handleNotification","useHandleNotification","invalidateStore","useInvalidate","getMeta","useMeta","textTransformers","useRefineContext","keys","preferLegacyKeys","useKeys","mutation","useMutation","id","mutationMode","undoableTimeout","resourceName","onCancel","meta","metaData","dataProviderName","values","resource","identifier","combinedMeta","pickNotDeprecated","mutationModePropOrContext","undoableTimeoutPropOrContext","pickDataProvider","resolve","reject","doMutation","result","err","cancelMutation","_","__","preferredMeta","queryKey","queryKeysReplacement","resourceKeys","previousQueries","previous","record","_a","data","_data","_error","invalidates","successNotification","dataProviderNameFromProp","context","resourceSingular","notificationConfig","_fields","_operation","_variables","rest","errorNotification","query","getXRay","elapsedTime","useLoadingOvertime","getXRay","useMutation","useCreateMany","__name","resourceFromProps","valuesFromProps","dataProviderNameFromProps","successNotificationFromProps","errorNotificationFromProps","metaFromProps","metaDataFromProps","invalidatesFromProps","mutationOptions","overtimeOptions","dataProvider","useDataProvider","resources","select","useResource","translate","useTranslate","publish","usePublish","handleNotification","useHandleNotification","invalidateStore","useInvalidate","log","useLog","getMeta","useMeta","textTransformers","useRefineContext","keys","preferLegacyKeys","useKeys","mutationResult","useMutation","resourceName","values","meta","metaData","dataProviderName","missingValuesError","missingResourceError","resource","identifier","combinedMeta","pickNotDeprecated","selectedDataProvider","pickDataProvider","handleMultiple","val","response","variables","context","_a","successNotification","dataProviderNameFromProp","invalidates","resourcePlural","notificationConfig","ids","item","_fields","_operation","_variables","rest","err","errorNotification","getXRay","mutate","mutateAsync","mutation","elapsedTime","useLoadingOvertime","options","getXRay","useMutation","useQueryClient","useUpdateMany","__name","idsFromProps","resourceFromProps","valuesFromProps","dataProviderNameFromProps","successNotificationFromProps","errorNotificationFromProps","metaFromProps","metaDataFromProps","mutationModeFromProps","undoableTimeoutFromProps","onCancelFromProps","optimisticUpdateMapFromProps","invalidatesFromProps","mutationOptions","overtimeOptions","resources","select","useResource","queryClient","useQueryClient","dataProvider","useDataProvider","translate","useTranslate","mutationModeContext","undoableTimeoutContext","useMutationMode","authProvider","useActiveAuthProvider","checkError","useOnError","notificationDispatch","useCancelNotification","publish","usePublish","handleNotification","useHandleNotification","invalidateStore","useInvalidate","log","useLog","getMeta","useMeta","textTransformers","useRefineContext","keys","preferLegacyKeys","useKeys","mutationResult","useMutation","ids","values","resourceName","onCancel","mutationMode","undoableTimeout","meta","metaData","dataProviderName","missingIdError","missingValuesError","missingResourceError","resource","identifier","combinedMeta","pickNotDeprecated","mutationModePropOrContext","undoableTimeoutPropOrContext","selectedDataProvider","pickDataProvider","mutationFn","handleMultiple","id","resolve","reject","doMutation","result","err","cancelMutation","optimisticUpdateMap","__","preferredMeta","queryKey","queryKeysReplacement","resourceKeys","previousQueries","previous","data","record","error","variables","context","_a","invalidates","dataProviderNameFromProp","successNotification","resourceSingular","notificationConfig","previousData","queryData","acc","item","_fields","_operation","_variables","rest","errorNotification","query","getXRay","mutate","mutateAsync","mutation","elapsedTime","useLoadingOvertime","options","getXRay","useMutation","useQueryClient","useDeleteMany","__name","mutationOptions","overtimeOptions","authProvider","useActiveAuthProvider","checkError","useOnError","mutationModeContext","undoableTimeoutContext","useMutationMode","dataProvider","useDataProvider","notificationDispatch","useCancelNotification","translate","useTranslate","publish","usePublish","handleNotification","useHandleNotification","invalidateStore","useInvalidate","log","useLog","resources","select","useResource","queryClient","useQueryClient","getMeta","useMeta","textTransformers","useRefineContext","keys","preferLegacyKeys","useKeys","mutation","useMutation","resourceName","ids","mutationMode","undoableTimeout","onCancel","meta","metaData","dataProviderName","values","resource","identifier","combinedMeta","pickNotDeprecated","mutationModePropOrContext","undoableTimeoutPropOrContext","selectedDataProvider","pickDataProvider","mutationFn","handleMultiple","id","resolve","reject","doMutation","result","err","cancelMutation","_","__","preferredMeta","queryKey","queryKeysReplacement","resourceKeys","previousQueries","previous","item","data","record","_data","_error","invalidates","dataProviderNameFromProp","successNotification","context","notificationConfig","_fields","_operation","_variables","rest","errorNotification","query","resourceSingular","getXRay","elapsedTime","useLoadingOvertime","useApiUrl","__name","dataProviderName","_a","dataProvider","useDataProvider","resource","useResource","getApiUrl","pickNotDeprecated","getXRay","useQuery","useCustom","__name","url","method","config","queryOptions","successNotification","errorNotification","meta","metaData","dataProviderName","overtimeOptions","dataProvider","useDataProvider","authProvider","useActiveAuthProvider","checkError","useOnError","translate","useTranslate","handleNotification","useHandleNotification","getMeta","useMeta","keys","preferLegacyKeys","useKeys","preferredMeta","pickNotDeprecated","custom","combinedMeta","queryResponse","useQuery","context","prepareQueryContext","data","_a","notificationConfig","err","getXRay","elapsedTime","useLoadingOvertime","getXRay","useMutation","useCustomMutation","__name","mutationOptions","overtimeOptions","authProvider","useActiveAuthProvider","checkError","useOnError","handleNotification","useHandleNotification","dataProvider","useDataProvider","translate","useTranslate","getMeta","useMeta","keys","preferLegacyKeys","useKeys","mutation","useMutation","url","method","values","meta","metaData","dataProviderName","config","combinedMeta","pickNotDeprecated","custom","data","successNotificationFromProp","notificationConfig","err","errorNotificationFromProp","getXRay","elapsedTime","useLoadingOvertime","useCallback","useContext","React","defaultDataProvider","DataContext","React","DataContextProvider","__name","children","dataProvider","providerValue","useDataProvider","__name","context","useContext","DataContext","useCallback","dataProviderName","dataProvider","getXRay","useInfiniteQuery","useInfiniteList","__name","resourceFromProp","config","filters","hasPagination","pagination","sorters","queryOptions","successNotification","errorNotification","meta","metaData","liveMode","onLiveEvent","liveParams","dataProviderName","overtimeOptions","resources","resource","identifier","useResource","dataProvider","useDataProvider","translate","useTranslate","authProvider","useActiveAuthProvider","checkError","useOnError","handleNotification","useHandleNotification","getMeta","useMeta","keys","preferLegacyKeys","useKeys","pickedDataProvider","pickDataProvider","preferredMeta","pickNotDeprecated","prefferedFilters","prefferedSorters","prefferedHasPagination","prefferedPagination","handlePaginationParams","isServerPagination","notificationValues","isEnabled","combinedMeta","getList","useResourceSubscription","queryResponse","useInfiniteQuery","context","paginationProperties","prepareQueryContext","data","total","rest","lastPage","getNextPageParam","getPreviousPageParam","_a","notificationConfig","err","getXRay","elapsedTime","useLoadingOvertime","useContext","useEffect","React","LiveContext","React","LiveContextProvider","__name","liveProvider","children","useCallback","useQueryClient","useInvalidate","__name","resources","useResource","queryClient","useQueryClient","keys","preferLegacyKeys","useKeys","useCallback","resource","dataProviderName","invalidates","id","invalidationFilters","invalidationOptions","dp","pickDataProvider","queryKey","key","useContext","React","useMemo","useRef","isEqual","useMemoized","__name","value","ref","useRef","isEqual","useDeepMemo","__name","fn","dependencies","memoizedDependencies","useMemoized","useMemo","ResourceContext","React","ResourceContextProvider","__name","providedResources","children","resources","useDeepMemo","legacyResourceTransform","React","RouterPickerContext","React","RouterPickerProvider","useRouterType","__name","React","React","createContext","defaultRouterProvider","RouterContext","createContext","RouterContextProvider","__name","children","router","React","React","useContext","useParse","__name","routerContext","useContext","RouterContext","React","useParsed","__name","parse","useParse","React","useResource","args","resources","useContext","ResourceContext","routerType","useRouterType","params","useParsed","oldProps","select","__name","resourceName","force","pickedResource","pickResource","resource","identifier","resourceWithRoute","useResourceWithRoute","useParams","useRouterContext","legacyParams","resourceKeyToCheck","legacyResource","legacyId","legacyAction","legacyResourceName","legacyIdentifier","pickedFromProps","useCallback","useContext","useResourceWithRoute","__name","resources","useContext","ResourceContext","useCallback","route","picked","pickResource","useResourceSubscription","__name","resourceFromProp","params","channel","types","enabled","liveModeFromProp","onLiveEvent","dataProviderNameFromProps","meta","_a","resource","identifier","useResource","liveProvider","useContext","LiveContext","liveModeFromContext","onLiveEventContextCallback","RefineContext","liveMode","invalidate","useInvalidate","dataProviderName","useEffect","subscription","callback","event","useContext","useLiveMode","__name","liveMode","liveModeFromContext","useContext","RefineContext","useContext","useEffect","useSubscription","__name","params","channel","types","enabled","onLiveEvent","dataProviderName","meta","liveProvider","useContext","LiveContext","useEffect","subscription","useContext","usePublish","__name","liveProvider","useContext","LiveContext","useContext","React","createContext","useReducer","isEqual","UndoableQueueContext","createContext","initialState","undoableQueueReducer","__name","state","action","notificationItem","isEqual","UndoableQueueContextProvider","children","notifications","notificationDispatch","useReducer","notificationData","React","notification","UndoableQueue","useCancelNotification","__name","notifications","notificationDispatch","useContext","UndoableQueueContext","useContext","React","createContext","NotificationContext","createContext","NotificationContextProvider","__name","open","close","children","React","useNotification","__name","open","close","useContext","NotificationContext","useCallback","useHandleNotification","__name","open","useNotification","useCallback","notification","fallbackNotification","useCallback","useContext","React","I18nContext","React","I18nContextProvider","__name","children","i18nProvider","useSetLocale","__name","i18nProvider","useContext","I18nContext","useCallback","lang","useContext","useMemo","useTranslate","__name","i18nProvider","useContext","I18nContext","useMemo","translate","key","options","defaultMessage","useCallback","useContext","useGetLocale","__name","i18nProvider","useContext","I18nContext","useCallback","useTranslation","__name","translate","useTranslate","changeLocale","useSetLocale","getLocale","useGetLocale","useState","papaparse","warnOnce","useExport","__name","resourceName","resourceFromProps","sorter","sorters","filters","maxItemCount","pageSize","mapData","item","exportOptions","unparseConfig","meta","metaData","dataProviderName","onError","download","isLoading","setIsLoading","useState","dataProvider","useDataProvider","getMeta","useMeta","resource","resources","identifier","useResource","pickNotDeprecated","filename","useUserFriendlyName","getList","pickDataProvider","combinedMeta","rawData","current","preparingData","data","total","error","hasUnparseConfig","warnOnce","options","csv","papaparse","fileExtension","fileType","downloadFilename","downloadInBrowser","React","warnOnce","useForm","__name","props","_a","_b","_c","_d","_e","getMeta","useMeta","invalidate","useInvalidate","defaultRedirect","useRefineOptions","defaultMutationMode","useMutationMode","setWarnWhen","useWarnAboutChange","handleSubmitWithRedirect","useRedirectionAfterSubmission","pickedMeta","pickNotDeprecated","mutationMode","id","setId","resource","identifier","action","useResourceParams","autosaved","setAutosaved","React","isEdit","isClone","isCreate","combinedMeta","isIdRequired","isIdDefined","isQueryDisabled","warnOnce","idWarningMessage","redirectAction","redirectPage","redirect","redirectId","routeParams","queryResult","useOne","createMutation","useCreate","updateMutation","useUpdate","mutationResult","formLoading","elapsedTime","useLoadingOvertime","onFinish","values","isAutosave","isPessimistic","onSuccessRedirect","resolve","reject","missingResourceError","missingIdError","missingValuesError","autosaveOnNonEditError","deferExecution","variables","mutateAsync","data","_","context","error","onFinishAutoSave","asyncDebounce","overtime","autoSaveProps","useCallback","useRedirectionAfterSubmission","__name","show","edit","list","create","useNavigation","useCallback","redirect","resource","id","meta","React","useContext","useBack","__name","routerContext","useContext","RouterContext","React","React","useCallback","useContext","React","useGetToPath","__name","routerType","useRouterType","resourceFromRoute","resources","useResource","parsed","useParsed","React","resource","action","meta","_a","selectedResource","actionRoute","getActionRoutesFromResource","item","composeRoute","useGo","__name","routerContext","useContext","RouterContext","resourceSelect","useResource","getToPath","useGetToPath","goFromRouter","React","useCallback","config","resource","handleResourceErrors","newTo","to","useNavigation","__name","resources","useResource","routerType","useRouterType","useHistory","useRouterContext","history","parsed","useParsed","go","useGo","back","useBack","handleUrl","url","type","createUrl","resource","meta","_a","resourceItem","pickResource","createActionRoute","getActionRoutesFromResource","r","composeRoute","editUrl","id","encodedId","editActionRoute","cloneUrl","cloneActionRoute","showUrl","showActionRoute","listUrl","listActionRoute","path","rest","warnOnce","useShow","__name","resourceFromProp","id","meta","metaData","queryOptions","overtimeOptions","useOneProps","resource","identifier","showId","setShowId","useResourceParams","combinedMeta","useMeta","pickNotDeprecated","warnOnce","idWarningMessage","queryResult","useOne","elapsedTime","useLoadingOvertime","useEffect","useState","chunk","papaparse","useImport","__name","resourceName","resourceFromProps","mapData","item","paparseOptions","batchSize","onFinish","meta","metaData","onProgress","dataProviderName","processedAmount","setProcessedAmount","useState","totalAmount","setTotalAmount","isLoading","setIsLoading","resource","identifier","useResource","getMeta","useMeta","createMany","useCreateMany","create","useCreate","combinedMeta","pickNotDeprecated","mutationResult","handleCleanup","handleFinish","createdValues","result","useEffect","handleChange","file","resolve","papaparse","data","values","importCSVMapper","valueFns","value","sequentialPromises","response","currentAmount","error","index","chunks","chunk","chunkedFns","chunkedValues","currentBatchLength","event","useCallback","useState","useModal","__name","defaultVisible","visible","setVisible","useState","show","useCallback","close","useToPath","__name","resource","action","meta","legacy","useGetToPath","React","forwardRef","useContext","warnOnce","LinkComponent","__name","props","ref","routerContext","useContext","RouterContext","LinkFromContext","goFunction","useGo","resolvedTo","warnOnce","React","Link","forwardRef","useLink","__name","Link","useContext","React","defaultProvider","LegacyRouterContext","React","LegacyRouterContextProvider","__name","children","useHistory","useLocation","useParams","Prompt","Link","routes","useRouterContext","__name","routerContextValues","useContext","LegacyRouterContext","useHistory","useLocation","useParams","Prompt","Link","routes","defaultProvider","useContext","getXRay","useQuery","React","AccessControlContext","React","AccessControlContextProvider","__name","can","children","options","sanitizeResource","__name","resource","icon","list","edit","create","show","clone","children","meta","options","restResource","_metaIcon","restMeta","_optionsIcon","restOptions","useCan","__name","action","resource","params","hookQueryOptions","can","globalOptions","useContext","AccessControlContext","keys","preferLegacyKeys","useKeys","globalQueryOptions","mergedQueryOptions","_resource","paramsRest","sanitizedResource","sanitizeResource","queryResponse","useQuery","getXRay","React","useCanWithoutCache","__name","canFromContext","React","AccessControlContext","params","rest","sanitizedResource","sanitizeResource","useCallback","useEffect","useMemo","useRef","useState","debounce","get","uniqBy","useSelect","__name","props","search","setSearch","useState","options","setOptions","selectedOptions","setSelectedOptions","resourceFromProps","sort","sorters","filters","optionLabel","optionValue","searchField","debounceValue","successNotification","errorNotification","defaultValueQueryOptionsFromProps","queryOptions","fetchSize","pagination","hasPagination","liveMode","defaultValue","selectedOptionsOrder","onLiveEvent","onSearchFromProp","liveParams","meta","metaData","dataProviderName","overtimeOptions","getOptionLabel","useCallback","item","get","getOptionValue","resource","identifier","useResource","combinedMeta","useMeta","pickNotDeprecated","defaultValues","defaultValueQueryOnSuccess","data","defaultValueQueryOptions","defaultValueQueryResult","useMany","_a","defaultQueryOnSuccess","queryResult","useList","elapsedTime","useLoadingOvertime","combinedOptions","useMemo","uniqBy","onSearchFromPropRef","useRef","onSearch","debounce","value","useEffect","React","useState","useEffect","useCallback","differenceWith","isEqual","qs","warnOnce","defaultPermanentFilter","defaultPermanentSorter","useTable","initialCurrent","initialPageSize","hasPagination","pagination","initialSorter","permanentSorter","defaultSetFilterBehavior","initialFilter","permanentFilter","filtersFromProp","sortersFromProp","syncWithLocationProp","resourceFromProp","successNotification","errorNotification","queryOptions","liveModeFromProp","onLiveEvent","liveParams","meta","metaData","dataProviderName","overtimeOptions","_a","_b","_c","_d","_e","syncWithLocationContext","useSyncWithLocation","syncWithLocation","liveMode","useLiveMode","routerType","useRouterType","useLocation","useRouterContext","search","pathname","getMeta","useMeta","parsedParams","useParsed","isServerSideFilteringEnabled","isServerSideSortingEnabled","hasPaginationString","isPaginationEnabled","prefferedCurrent","pickNotDeprecated","prefferedPageSize","preferredMeta","parsedCurrent","parsedPageSize","parsedSorter","parsedFilters","parseTableParams","preferredInitialFilters","preferredPermanentFilters","preferredInitialSorters","preferredPermanentSorters","prefferedFilterBehavior","defaultCurrent","defaultPageSize","defaultSorter","defaultFilter","replace","useNavigation","go","useGo","resource","identifier","useResource","combinedMeta","React","warnOnce","sorters","setSorters","useState","setInitialSorters","filters","setFilters","setInitialFilters","current","setCurrent","pageSize","setPageSize","getCurrentQueryParams","__name","rest","sorter","qs","createLinkForSyncWithLocation","currentQueryParams","stringifyParams","stringifyTableParams","useEffect","queryParams","differenceWith","isEqual","queryResult","useList","unionFilters","unionSorters","setFiltersAsMerge","useCallback","newFilters","prevFilters","setFiltersAsReplace","setFiltersWithSetter","setter","prev","setFiltersFn","setterOrFilters","behavior","setSortWithUnion","newSorter","elapsedTime","useLoadingOvertime","useContext","getXRay","useMutation","useQueryClient","React","AuditLogContext","React","AuditLogContextProvider","__name","create","get","update","children","useLog","__name","logMutationOptions","renameMutationOptions","queryClient","useQueryClient","auditLogContext","useContext","AuditLogContext","keys","preferLegacyKeys","useKeys","authProvider","useActiveAuthProvider","resources","ResourceContext","identityData","refetch","isLoading","useGetIdentity","log","useMutation","params","_a","_b","_c","_d","_e","resource","pickResource","logPermissions","pickNotDeprecated","hasPermission","authorData","getXRay","rename","data","useContext","getXRay","useQuery","useLogList","__name","resource","action","meta","author","metaData","queryOptions","get","useContext","AuditLogContext","keys","preferLegacyKeys","useKeys","useQuery","getXRay","useContext","warnOnce","useBreadcrumb","__name","metaFromProps","routerType","useRouterType","i18nProvider","useContext","I18nContext","parsed","useParsed","translate","useTranslate","resources","resource","action","useResource","textTransformers","useRefineContext","breadcrumbs","addBreadcrumb","parentName","_a","_b","_c","_d","_e","_f","parentResource","pickResource","grandParentName","pickNotDeprecated","listActionOfResource","getActionRoutesFromResource","r","hrefRaw","href","composeRoute","key","actionLabel","warnOnce","React","createResourceKey","__name","resource","resources","legacy","parents","currentParentResource","getParentResource","r","removeLeadingTrailingSlashes","createTree","__name","resources","legacy","root","resource","parents","currentParent","getParentResource","currentTree","parent","key","flatten","tree","items","itemKey","createResourceKey","item","getCleanPath","__name","pathname","useMenu","meta","hideOnMissingParameter","translate","useTranslate","getToPath","useGetToPath","routerType","useRouterType","resource","resources","useResource","useParsed","useLocation","useRouterContext","legacyPath","getFriendlyName","useUserFriendlyName","cleanRoute","selectedKey","createResourceKey","defaultOpenKeys","React","parent","getParentResource","keys","prepareItem","item","_a","_b","_c","_d","_e","_f","pickNotDeprecated","composed","treeItems","treeMenuItems","createTree","prepare","items","preparedNodes","newItem","React","createContext","useContext","useMemo","MetaContext","createContext","MetaContextProvider","__name","children","value","currentValue","useMetaContext","metaContext","useMemo","React","useContext","useMeta","__name","params","useParsed","metaContext","useMetaContext","resource","metaFromProp","meta","sanitizeResource","_filters","_sorters","_current","_pageSize","additionalParams","result","React","useRefineOptions","__name","options","React","RefineContext","React","useId","__name","id","routerType","useRouterType","useParams","useRouterContext","parsed","useParsed","legacyParams","inferredId","useAction","__name","action","routerType","useRouterType","useParams","useRouterContext","parsed","useParsed","legacyParams","inferredAction","useResourceParams","props","select","inferredIdentifier","useResource","resourceToCheck","identifier","resource","isSameResource","inferredId","useId","action","useAction","defaultId","React","id","setId","formAction","__name","useActionableButton","type","translate","useTranslate","humanize","useRefineOptions","key","fallback","__name","React","React","useButtonCanAccess","__name","props","_a","_b","_c","translate","useTranslate","accessControlContext","React","AccessControlContext","accessControlEnabled","hideIfUnauthorized","canAccess","useCan","title","hidden","disabled","useNavigationButton","props","_a","navigation","useNavigation","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","translate","useTranslate","getUserFriendlyName","useUserFriendlyName","humanize","useRefineOptions","id","resource","identifier","useResourceParams","canAccess","title","hidden","disabled","useButtonCanAccess","LinkComponent","to","React","label","__name","useDeleteButton","props","translate","useTranslate","mutate","isLoading","variables","useDelete","setWarnWhen","useWarnAboutChange","mutationMode","useMutationMode","id","resource","identifier","useResourceParams","title","disabled","hidden","canAccess","useButtonCanAccess","label","confirmOkLabel","confirmTitle","cancelLabel","loading","__name","useQueryClient","useRefreshButton","props","translate","useTranslate","keys","preferLegacyKeys","useKeys","queryClient","useQueryClient","invalidates","useInvalidate","identifier","id","useResourceParams","resources","useResource","loading","pickDataProvider","onClick","__name","label","useShowButton","__name","props","useNavigationButton","useEditButton","useCloneButton","useCreateButton","useListButton","useSaveButton","useActionableButton","useExportButton","useImportButton","ErrorComponent","__name","errorMessage","setErrorMessage","useState","translate","useTranslate","push","useNavigation","go","useGo","routerType","useRouterType","resource","action","useResource","useEffect","React","React","useState","LoginPage","__name","username","setUsername","useState","password","setPassword","translate","useTranslate","authProvider","useActiveAuthProvider","login","useLogin","React","e","React","React","useState","LoginPage","__name","providers","registerLink","forgotPasswordLink","rememberMe","contentProps","wrapperProps","renderContent","formProps","title","hideForm","mutationVariables","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","email","setEmail","useState","password","setPassword","remember","setRemember","translate","useTranslate","authProvider","useActiveAuthProvider","login","useLogin","renderLink","link","text","React","renderProviders","provider","content","e","React","useState","RegisterPage","__name","providers","loginLink","wrapperProps","contentProps","renderContent","formProps","title","hideForm","mutationVariables","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","email","setEmail","useState","password","setPassword","translate","useTranslate","authProvider","useActiveAuthProvider","register","isLoading","useRegister","renderLink","link","text","React","renderProviders","provider","content","e","React","useState","ForgotPasswordPage","__name","loginLink","wrapperProps","contentProps","renderContent","formProps","title","mutationVariables","translate","useTranslate","routerType","useRouterType","Link","useLink","LegacyLink","useRouterContext","ActiveLink","email","setEmail","useState","forgotPassword","isLoading","useForgotPassword","renderLink","link","text","React","content","e","React","useState","UpdatePasswordPage","__name","wrapperProps","contentProps","renderContent","formProps","title","mutationVariables","translate","useTranslate","authProvider","useActiveAuthProvider","updatePassword","isLoading","useUpdatePassword","newPassword","setNewPassword","useState","confirmPassword","setConfirmPassword","content","React","e","AuthPage","__name","props","type","React","RegisterPage","ForgotPasswordPage","UpdatePasswordPage","LoginPage","React","ReadyPage","__name","React","React","React","useState","cards","ConfigSuccessPage","__name","isTablet","useMediaQuery","isMobile","getGridTemplateColumns","getHeaderFontSize","getSubHeaderFontSize","React","card","Card","title","description","iconUrl","link","isHover","setIsHover","useState","React","ConfigErrorPage","__name","React","ErrorGradient","ErrorIcon","ExampleImplementation","props","WelcomePage","__name","__initialized","useRefineContext","React","ConfigSuccessPage","ConfigErrorPage","React","useQuerySubscription","QueryClient","QueryClientProvider","React","useContext","REFINE_VERSION","useTelemetryData","__name","_a","auth","useIsExistAuthentication","auditLogContext","useContext","AuditLogContext","liveProvider","LiveContext","routerContext","LegacyRouterContext","dataContext","DataContext","i18nProvider","I18nContext","notificationContext","NotificationContext","accessControlContext","AccessControlContext","resources","useResource","refineOptions","useRefineContext","auditLog","live","router","data","i18n","notification","accessControl","projectId","encode","__name","payload","stringifiedPayload","throughImage","src","img","throughFetch","transport","Telemetry","useTelemetryData","sent","React","encoded","checkRouterPropMisuse","__name","value","bindings","otherProps","key","React","useRouterMisuseWarning","__name","value","warned","React","checkRouterPropMisuse","Refine","__name","legacyAuthProvider","authProvider","dataProvider","legacyRouterProvider","routerProvider","notificationProvider","accessControlProvider","auditLogProvider","resources","DashboardPage","ReadyPage","LoginPage","catchAll","children","liveProvider","i18nProvider","Title","Layout","Sider","Header","Footer","OffLayoutArea","onLiveEvent","options","optionsWithDefaults","disableTelemetryWithDefault","reactQueryWithDefaults","handleRefineOptions","queryClient","useDeepMemo","_a","QueryClient","useQuerySubscription","notificationProviderContextValues","React","useRouterMisuseWarning","RouterComponent","QueryClientProvider","NotificationContextProvider","LegacyAuthContextProvider","AuthBindingsContextProvider","DataContextProvider","LiveContextProvider","RouterPickerProvider","RouterContextProvider","LegacyRouterContextProvider","ResourceContextProvider","I18nContextProvider","AccessControlContextProvider","AuditLogContextProvider","UndoableQueueContextProvider","RefineContextProvider","UnsavedWarnContextProvider","Telemetry","RouteChangeHandler","useEffect","useState","UndoableQueue","__name","notification","translate","useTranslate","notificationDispatch","useCancelNotification","open","useNotification","timeoutId","setTimeoutId","useState","cancelNotification","userFriendlySecond","newTimeoutId","useEffect","React","useEffect","LayoutWrapper","__name","children","LayoutFromProps","SiderFromProps","HeaderFromProps","TitleFromProps","FooterFromProps","OffLayoutAreaFromProps","Layout","Footer","Header","Sider","Title","OffLayoutArea","useRefineContext","React","UnsavedPrompt","Prompt","useRouterContext","translate","useTranslate","warnWhen","setWarnWhen","useWarnAboutChange","warnWhenListener","e","useEffect","React","Authenticated","redirectOnFail","appendCurrentPathToQuery","children","fallbackContent","loadingContent","_a","activeAuthProvider","useActiveAuthProvider","routerType","useRouterType","hasAuthProvider","isLegacyAuth","isLegacyRouter","parsed","useParsed","go","useGo","useLocation","useRouterContext","legacyLocation","isFetching","isSuccess","isAuthenticatedStatus","authenticatedRedirect","useIsAuthenticated","isAuthenticated","React","appliedRedirect","pathname","toQuery","RedirectLegacy","queryToValue","Redirect","__name","config","to","replace","useNavigation","useEffect","RouteChangeHandler","__name","useLocation","useRouterContext","checkAuth","useLegacyAuthContext","location","useEffect","React","useEffect","CanAccess","__name","resourceFromProp","actionFromProp","paramsFromProp","fallback","onUnauthorized","children","componentQueryOptions","rest","id","resource","fallbackAction","useResourceParams","action","params","data","useCan","useEffect","React","React","useEffect","CSSRules","text","GitHubBanner","__name","containerStyle","useEffect","styleTag","CSSRules","rule","_a","React","GlowSmall","GlowBig","Text","style","props","React","AutoSaveIndicator","__name","status","success","React","Message","error","loading","idle","translationKey","defaultMessage","translate","useTranslate"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173]}},
    {"offset": {"line": 6652, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}